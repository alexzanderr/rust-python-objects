{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"app",
				"append_front"
			],
			[
				"PYTHON",
				"python_list"
			],
			[
				"aP",
				"AppendFront"
			],
			[
				"a",
				"Append"
			],
			[
				"ap",
				"append"
			],
			[
				"Iter",
				"Iterator"
			],
			[
				"print",
				"print"
			],
			[
				"integer",
				"integer_list"
			],
			[
				"FromIter",
				"FromIterator"
			],
			[
				"From",
				"FromIter"
			],
			[
				"err",
				"Err"
			],
			[
				"from",
				"from_str"
			],
			[
				"appe",
				"append_front"
			],
			[
				"python",
				"python_list"
			],
			[
				"pytno",
				"python_list"
			],
			[
				"Vec",
				"VecDeque"
			],
			[
				"vec",
				"vec_deque"
			],
			[
				"push",
				"push_back"
			],
			[
				"exce",
				"\"folder_exclude_patterns\""
			],
			[
				"String",
				"StringResult"
			],
			[
				"Font",
				"FontNotFoundError"
			],
			[
				"read",
				"read_to_string"
			],
			[
				"te",
				"templates"
			],
			[
				"string",
				"string_buffer"
			],
			[
				"ok",
				"ok"
			],
			[
				"sta",
				"starts_with"
			],
			[
				"d",
				"dbg!"
			],
			[
				"printl",
				"println!"
			],
			[
				"macro",
				"macro_rules"
			],
			[
				"tur",
				"turtle"
			],
			[
				"prinln",
				"println"
			],
			[
				"List",
				"ListIterator"
			],
			[
				"pthon",
				"python_list"
			],
			[
				"p",
				"pretty_assertions"
			],
			[
				"assert",
				"assert_eq"
			],
			[
				"include",
				"include_str!"
			],
			[
				"apppe",
				"append_pbool"
			],
			[
				"append",
				"append_pbool"
			],
			[
				"to",
				"to_digit"
			],
			[
				"to_",
				"to_string"
			],
			[
				"int",
				"_integer"
			],
			[
				"_",
				"__len__"
			],
			[
				"pointe",
				"pointer_to_one_elem"
			],
			[
				"pr",
				"println!"
			],
			[
				"write",
				"writeln!"
			],
			[
				"le",
				"len"
			],
			[
				"allow",
				"allow_everything"
			],
			[
				"Hash",
				"HashMap"
			],
			[
				"unwrap",
				"unwrap_or_else"
			],
			[
				"parse",
				"parse_arguments"
			],
			[
				"split",
				"split_off"
			],
			[
				"ex",
				"\"folder_exclude_patterns\""
			],
			[
				"private",
				"private_function"
			],
			[
				"pri",
				"private_function"
			],
			[
				"rust",
				"rust_core"
			],
			[
				"asert",
				"assert_eq!"
			],
			[
				"should",
				"should_panic"
			],
			[
				"sho",
				"should_panic"
			],
			[
				"add",
				"adder"
			],
			[
				"Par",
				"PartialEq"
			],
			[
				"example",
				"example_code"
			],
			[
				"exmapl",
				"example_code"
			],
			[
				"or",
				"or_default"
			],
			[
				"enu",
				"enumerate"
			],
			[
				"init",
				"initial_scores"
			],
			[
				"into",
				"into_iter"
			],
			[
				"Inhe",
				"InheritFrom"
			],
			[
				"Obje",
				"Object"
			],
			[
				"allo",
				"allow_everything"
			],
			[
				"rst",
				"rstest"
			],
			[
				"expec",
				"expect"
			],
			[
				"asser",
				"assert_eq"
			],
			[
				"algo",
				"algorithms"
			],
			[
				"target",
				"target_sum"
			],
			[
				"front",
				"front_of_house"
			],
			[
				"Ip",
				"IpAddrKind"
			],
			[
				"exitcode",
				"exit_code"
			],
			[
				"Exit",
				"ExitStatus"
			],
			[
				"exit",
				"ExitStatus"
			],
			[
				"exi",
				"exit_status"
			],
			[
				"insta",
				"install"
			],
			[
				"color",
				"color_backtrace"
			],
			[
				"std",
				"stderr_str"
			],
			[
				"out",
				"out_and_err"
			],
			[
				"print_python",
				"print_python_macro"
			],
			[
				"Dis",
				"Display"
			],
			[
				"sign",
				"sign_in_count"
			],
			[
				"em",
				"email"
			],
			[
				"Format",
				"Formatter"
			],
			[
				"al",
				"algorithms"
			],
			[
				"ten",
				"ten_to_minus_9"
			],
			[
				"minu",
				"minus_ten_to_minus_9"
			],
			[
				"panic",
				"panic!"
			],
			[
				"po",
				"pow"
			],
			[
				"unwra",
				"unwrap"
			],
			[
				"pos",
				"pos_table"
			],
			[
				"get",
				"get_key_value"
			],
			[
				"con",
				"contains_key"
			],
			[
				"inte",
				"integer"
			],
			[
				"appen",
				"append"
			],
			[
				"println",
				"println"
			],
			[
				"close",
				"closure"
			],
			[
				"Point2",
				"Point2D"
			],
			[
				"move",
				"move_right"
			],
			[
				"un",
				"unwrap_or"
			],
			[
				"load_the",
				"load_theme_from_file"
			],
			[
				"The",
				"ThemeSet"
			],
			[
				"pat",
				"path"
			],
			[
				"ar",
				"args"
			],
			[
				"unrea",
				"unreachable_code"
			],
			[
				"pro",
				"process"
			],
			[
				"lines",
				"lines_string"
			],
			[
				"str",
				"as_str"
			],
			[
				"read_conte",
				"read_contents_from_file"
			],
			[
				"dot",
				"dot_method"
			],
			[
				"old",
				"old_enough"
			],
			[
				"muta",
				"mutable"
			],
			[
				"opt",
				"Option"
			],
			[
				"const",
				"const"
			],
			[
				"_has",
				"_hashinside"
			],
			[
				"unra",
				"unwrap"
			],
			[
				"Has",
				"HashMap"
			],
			[
				"secre",
				"secret_number"
			],
			[
				"unuse",
				"unused_imports"
			],
			[
				"iter",
				"iter"
			],
			[
				"secret",
				"secret_number"
			],
			[
				"key",
				"get_key_value"
			],
			[
				"inser",
				"try_insert"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/list/list.rs",
			"settings":
			{
				"buffer_size": 5089,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2104,
					1,
					"insert",
					{
						"characters": "Vec"
					},
					"AwAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAABaGAAAAAAAAFsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBgAAAAAAABYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					2106,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"VecDeque\",\"additionalTextEdits\":[],\"label\":\"VecDeque\",\"deprecated\":false,\"textEdit\":{\"newText\":\"VecDeque\",\"range\":{\"end\":{\"character\":49,\"line\":276},\"start\":{\"character\":46,\"line\":276}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"A double-ended queue implemented with a growable ring buffer.\\n\\nThe \\\"default\\\" usage of this type as a queue is to use [`push_back`] to add to\\nthe queue, and [`pop_front`] to remove from the queue. [`extend`] and [`append`]\\npush onto the back in this manner, and iterating over `VecDeque` goes front\\nto back.\\n\\nA `VecDeque` with a known list of items can be initialized from an array:\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet deq = VecDeque::from([-1, 0, 1]);\\n```\\n\\nSince `VecDeque` is a ring buffer, its elements are not necessarily contiguous\\nin memory. If you want to access the elements as a single slice, such as for\\nefficient sorting, you can use [`make_contiguous`]. It rotates the `VecDeque`\\nso that its elements do not wrap, and returns a mutable slice to the\\nnow-contiguous element sequence.\\n\\n[`push_back`]: VecDeque::push_back\\n[`pop_front`]: VecDeque::pop_front\\n[`extend`]: VecDeque::extend\\n[`append`]: VecDeque::append\\n[`make_contiguous`]: VecDeque::make_contiguous\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1309,
							2104,
							3
						],
						"trigger": "VecDeque"
					},
					"AgAAAFgYAAAAAAAAWBgAAAAAAAADAAAAVmVjWBgAAAAAAABgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxgAAAAAAABbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					2107,
					1,
					"insert",
					{
						"characters": "::new"
					},
					"BQAAAGAYAAAAAAAAYRgAAAAAAAAAAAAAYRgAAAAAAABiGAAAAAAAAAAAAABiGAAAAAAAAGMYAAAAAAAAAAAAAGMYAAAAAAAAZBgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBgAAAAAAABgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					2108,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAGUYAAAAAAAAZxgAAAAAAAAAAAAAZhgAAAAAAABoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRgAAAAAAABlGAAAAAAAAAAAAAAAAPC/"
				],
				[
					2110,
					2,
					"left_delete",
					null,
					"AgAAAGcYAAAAAAAAZxgAAAAAAAABAAAAKWYYAAAAAAAAZhgAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAaBgAAAAAAABoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					2127,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAAUXAAAAAAAABhcAAAAAAAAAAAAABhcAAAAAAAAHFwAAAAAAAAAAAAAHFwAAAAAAAAgXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRcAAAAAAAAFFwAAAAAAAAAAAAAAAPC/"
				],
				[
					2128,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgXAAAAAAAACRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBcAAAAAAAAIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					2159,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAACUNAAAAAAAAJg0AAAAAAAAAAAAAJg0AAAAAAAAnDQAAAAAAAAAAAAAnDQAAAAAAACgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQ0AAAAAAAAlDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2161,
					1,
					"paste",
					null,
					"AQAAACcNAAAAAAAAmRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJw0AAAAAAAAnDQAAAAAAAAAAAAAAAAAA"
				],
				[
					2179,
					1,
					"insert",
					{
						"characters": "Front"
					},
					"KAAAAAsSAAAAAAAADBIAAAAAAAAAAAAALxEAAAAAAAAwEQAAAAAAAAAAAACJEAAAAAAAAIoQAAAAAAAAAAAAAOIPAAAAAAAA4w8AAAAAAAAAAAAAKQ8AAAAAAAAqDwAAAAAAAAAAAACADgAAAAAAAIEOAAAAAAAAAAAAANoNAAAAAAAA2w0AAAAAAAAAAAAAMg0AAAAAAAAzDQAAAAAAAAAAAAATEgAAAAAAABQSAAAAAAAAAAAAADYRAAAAAAAANxEAAAAAAAAAAAAAjxAAAAAAAACQEAAAAAAAAAAAAADnDwAAAAAAAOgPAAAAAAAAAAAAAC0PAAAAAAAALg8AAAAAAAAAAAAAgw4AAAAAAACEDgAAAAAAAAAAAADcDQAAAAAAAN0NAAAAAAAAAAAAADMNAAAAAAAANA0AAAAAAAAAAAAAGxIAAAAAAAAcEgAAAAAAAAAAAAA9EQAAAAAAAD4RAAAAAAAAAAAAAJUQAAAAAAAAlhAAAAAAAAAAAAAA7A8AAAAAAADtDwAAAAAAAAAAAAAxDwAAAAAAADIPAAAAAAAAAAAAAIYOAAAAAAAAhw4AAAAAAAAAAAAA3g0AAAAAAADfDQAAAAAAAAAAAAA0DQAAAAAAADUNAAAAAAAAAAAAACMSAAAAAAAAJBIAAAAAAAAAAAAARBEAAAAAAABFEQAAAAAAAAAAAACbEAAAAAAAAJwQAAAAAAAAAAAAAPEPAAAAAAAA8g8AAAAAAAAAAAAANQ8AAAAAAAA2DwAAAAAAAAAAAACJDgAAAAAAAIoOAAAAAAAAAAAAAOANAAAAAAAA4Q0AAAAAAAAAAAAANQ0AAAAAAAA2DQAAAAAAAAAAAAArEgAAAAAAACwSAAAAAAAAAAAAAEsRAAAAAAAATBEAAAAAAAAAAAAAoRAAAAAAAACiEAAAAAAAAAAAAAD2DwAAAAAAAPcPAAAAAAAAAAAAADkPAAAAAAAAOg8AAAAAAAAAAAAAjA4AAAAAAACNDgAAAAAAAAAAAADiDQAAAAAAAOMNAAAAAAAAAAAAADYNAAAAAAAANw0AAAAAAAAAAAAA",
					"AQAAAAAAAAAIAAAAMg0AAAAAAAAyDQAAAAAAAAAAAAAAAPC/2g0AAAAAAADaDQAAAAAAAAAAAAAAAPC/gA4AAAAAAACADgAAAAAAAAAAAAAAAPC/KQ8AAAAAAAApDwAAAAAAAAAAAAAAAPC/4g8AAAAAAADiDwAAAAAAAAAAAAAAAPC/iRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/LxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/CxIAAAAAAAALEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2197,
					1,
					"insert",
					{
						"characters": ")_f"
					},
					"AwAAAFUNAAAAAAAAVg0AAAAAAAAAAAAAVg0AAAAAAABXDQAAAAAAAAAAAABXDQAAAAAAAFgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQ0AAAAAAABVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2198,
					3,
					"left_delete",
					null,
					"AwAAAFcNAAAAAAAAVw0AAAAAAAABAAAAZlYNAAAAAAAAVg0AAAAAAAABAAAAX1UNAAAAAAAAVQ0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAWA0AAAAAAABYDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2199,
					1,
					"insert",
					{
						"characters": "_front"
					},
					"BgAAAFUNAAAAAAAAVg0AAAAAAAAAAAAAVg0AAAAAAABXDQAAAAAAAAAAAABXDQAAAAAAAFgNAAAAAAAAAAAAAFgNAAAAAAAAWQ0AAAAAAAAAAAAAWQ0AAAAAAABaDQAAAAAAAAAAAABaDQAAAAAAAFsNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQ0AAAAAAABVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2205,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAJgNAAAAAAAAmA0AAAAAAAAJAAAAcHVzaF9iYWNr",
					"AQAAAAAAAAABAAAAoQ0AAAAAAAChDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2206,
					1,
					"insert",
					{
						"characters": "push"
					},
					"BAAAAJgNAAAAAAAAmQ0AAAAAAAAAAAAAmQ0AAAAAAACaDQAAAAAAAAAAAACaDQAAAAAAAJsNAAAAAAAAAAAAAJsNAAAAAAAAnA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmA0AAAAAAACYDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2207,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, T)\",\"additionalTextEdits\":[],\"label\":\"push_front\",\"deprecated\":false,\"textEdit\":{\"newText\":\"push_front\",\"range\":{\"end\":{\"character\":23,\"line\":161},\"start\":{\"character\":19,\"line\":161}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prepends an element to the `VecDeque`.\\n\\n# Examples\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet mut d = VecDeque::new();\\nd.push_front(1);\\nd.push_front(2);\\nassert_eq!(d.front(), Some(&2));\\n```\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"push_front\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1367,
							2206,
							4
						],
						"trigger": "push_front"
					},
					"AgAAAJgNAAAAAAAAmA0AAAAAAAAEAAAAcHVzaJgNAAAAAAAAog0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2245,
					1,
					"insert",
					{
						"characters": "+"
					},
					"BwAAAFkSAAAAAAAAWhIAAAAAAAAAAAAAuhEAAAAAAAC7EQAAAAAAAAAAAADNEAAAAAAAAM4QAAAAAAAAAAAAACQQAAAAAAAAJRAAAAAAAAAAAAAAZQ8AAAAAAABmDwAAAAAAAAAAAAC0DgAAAAAAALUOAAAAAAAAAAAAAAoOAAAAAAAACw4AAAAAAAAAAAAA",
					"AQAAAAAAAAAHAAAACg4AAAAAAAAKDgAAAAAAAAAAAAAAAPC/tA4AAAAAAAC0DgAAAAAAAAAAAAAAAPC/ZQ8AAAAAAABlDwAAAAAAAAAAAAAAAPC/JBAAAAAAAAAkEAAAAAAAAAAAAAAAAPC/zRAAAAAAAADNEAAAAAAAAAAAAAAAAPC/uhEAAAAAAAC6EQAAAAAAAAAAAAAAAPC/WRIAAAAAAABZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2246,
					1,
					"left_delete",
					null,
					"BwAAAF8SAAAAAAAAXxIAAAAAAAABAAAAK78RAAAAAAAAvxEAAAAAAAABAAAAK9EQAAAAAAAA0RAAAAAAAAABAAAAKycQAAAAAAAAJxAAAAAAAAABAAAAK2cPAAAAAAAAZw8AAAAAAAABAAAAK7UOAAAAAAAAtQ4AAAAAAAABAAAAKwoOAAAAAAAACg4AAAAAAAABAAAAKw",
					"AQAAAAAAAAAHAAAACw4AAAAAAAALDgAAAAAAAAAAAAAAAPC/tg4AAAAAAAC2DgAAAAAAAAAAAAAAAPC/aA8AAAAAAABoDwAAAAAAAAAAAAAAAPC/KBAAAAAAAAAoEAAAAAAAAAAAAAAAAPC/0hAAAAAAAADSEAAAAAAAAAAAAAAAAPC/wBEAAAAAAADAEQAAAAAAAAAAAAAAAPC/YBIAAAAAAABgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2247,
					1,
					"insert",
					{
						"characters": "_front"
					},
					"KgAAAFkSAAAAAAAAWhIAAAAAAAAAAAAAuhEAAAAAAAC7EQAAAAAAAAAAAADNEAAAAAAAAM4QAAAAAAAAAAAAACQQAAAAAAAAJRAAAAAAAAAAAAAAZQ8AAAAAAABmDwAAAAAAAAAAAAC0DgAAAAAAALUOAAAAAAAAAAAAAAoOAAAAAAAACw4AAAAAAAAAAAAAYBIAAAAAAABhEgAAAAAAAAAAAADAEQAAAAAAAMERAAAAAAAAAAAAANIQAAAAAAAA0xAAAAAAAAAAAAAAKBAAAAAAAAApEAAAAAAAAAAAAABoDwAAAAAAAGkPAAAAAAAAAAAAALYOAAAAAAAAtw4AAAAAAAAAAAAACw4AAAAAAAAMDgAAAAAAAAAAAABnEgAAAAAAAGgSAAAAAAAAAAAAAMYRAAAAAAAAxxEAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAAAsEAAAAAAAAC0QAAAAAAAAAAAAAGsPAAAAAAAAbA8AAAAAAAAAAAAAuA4AAAAAAAC5DgAAAAAAAAAAAAAMDgAAAAAAAA0OAAAAAAAAAAAAAG4SAAAAAAAAbxIAAAAAAAAAAAAAzBEAAAAAAADNEQAAAAAAAAAAAADcEAAAAAAAAN0QAAAAAAAAAAAAADAQAAAAAAAAMRAAAAAAAAAAAAAAbg8AAAAAAABvDwAAAAAAAAAAAAC6DgAAAAAAALsOAAAAAAAAAAAAAA0OAAAAAAAADg4AAAAAAAAAAAAAdRIAAAAAAAB2EgAAAAAAAAAAAADSEQAAAAAAANMRAAAAAAAAAAAAAOEQAAAAAAAA4hAAAAAAAAAAAAAANBAAAAAAAAA1EAAAAAAAAAAAAABxDwAAAAAAAHIPAAAAAAAAAAAAALwOAAAAAAAAvQ4AAAAAAAAAAAAADg4AAAAAAAAPDgAAAAAAAAAAAAB8EgAAAAAAAH0SAAAAAAAAAAAAANgRAAAAAAAA2REAAAAAAAAAAAAA5hAAAAAAAADnEAAAAAAAAAAAAAA4EAAAAAAAADkQAAAAAAAAAAAAAHQPAAAAAAAAdQ8AAAAAAAAAAAAAvg4AAAAAAAC/DgAAAAAAAAAAAAAPDgAAAAAAABAOAAAAAAAAAAAAAA",
					"AQAAAAAAAAAHAAAACg4AAAAAAAAKDgAAAAAAAAAAAAAAAPC/tA4AAAAAAAC0DgAAAAAAAAAAAAAAAPC/ZQ8AAAAAAABlDwAAAAAAAAAAAAAAAPC/JBAAAAAAAAAkEAAAAAAAAAAAAAAAAPC/zRAAAAAAAADNEAAAAAAAAAAAAAAAAPC/uhEAAAAAAAC6EQAAAAAAAAAAAAAAAPC/WRIAAAAAAABZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2258,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAoDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJg0AAAAAAAAmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2274,
					4,
					"left_delete",
					null,
					"HAAAAMgSAAAAAAAAyBIAAAAAAAABAAAAayISAAAAAAAAIhIAAAAAAAABAAAAay8RAAAAAAAALxEAAAAAAAABAAAAa4YQAAAAAAAAhhAAAAAAAAABAAAAa78PAAAAAAAAvw8AAAAAAAABAAAAawUPAAAAAAAABQ8AAAAAAAABAAAAa1UOAAAAAAAAVQ4AAAAAAAABAAAAa8ESAAAAAAAAwRIAAAAAAAABAAAAYxwSAAAAAAAAHBIAAAAAAAABAAAAYyoRAAAAAAAAKhEAAAAAAAABAAAAY4IQAAAAAAAAghAAAAAAAAABAAAAY7wPAAAAAAAAvA8AAAAAAAABAAAAYwMPAAAAAAAAAw8AAAAAAAABAAAAY1QOAAAAAAAAVA4AAAAAAAABAAAAY7oSAAAAAAAAuhIAAAAAAAABAAAAYRYSAAAAAAAAFhIAAAAAAAABAAAAYSURAAAAAAAAJREAAAAAAAABAAAAYX4QAAAAAAAAfhAAAAAAAAABAAAAYbkPAAAAAAAAuQ8AAAAAAAABAAAAYQEPAAAAAAAAAQ8AAAAAAAABAAAAYVMOAAAAAAAAUw4AAAAAAAABAAAAYbMSAAAAAAAAsxIAAAAAAAABAAAAYhASAAAAAAAAEBIAAAAAAAABAAAAYiARAAAAAAAAIBEAAAAAAAABAAAAYnoQAAAAAAAAehAAAAAAAAABAAAAYrYPAAAAAAAAtg8AAAAAAAABAAAAYv8OAAAAAAAA/w4AAAAAAAABAAAAYlIOAAAAAAAAUg4AAAAAAAABAAAAYg",
					"AQAAAAAAAAAHAAAAVg4AAAAAAABWDgAAAAAAAAAAAAAAAPC/Bg8AAAAAAAAGDwAAAAAAAAAAAAAAAPC/wA8AAAAAAADADwAAAAAAAAAAAAAAAPC/hxAAAAAAAACHEAAAAAAAAAAAAAAAAPC/MBEAAAAAAAAwEQAAAAAAAAAAAAAAAPC/IxIAAAAAAAAjEgAAAAAAAAAAAAAAAPC/yRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2275,
					1,
					"insert",
					{
						"characters": "front"
					},
					"IwAAAK0SAAAAAAAArhIAAAAAAAAAAAAACxIAAAAAAAAMEgAAAAAAAAAAAAAcEQAAAAAAAB0RAAAAAAAAAAAAAHcQAAAAAAAAeBAAAAAAAAAAAAAAtA8AAAAAAAC1DwAAAAAAAAAAAAD+DgAAAAAAAP8OAAAAAAAAAAAAAFIOAAAAAAAAUw4AAAAAAAAAAAAAtBIAAAAAAAC1EgAAAAAAAAAAAAAREgAAAAAAABISAAAAAAAAAAAAACERAAAAAAAAIhEAAAAAAAAAAAAAexAAAAAAAAB8EAAAAAAAAAAAAAC3DwAAAAAAALgPAAAAAAAAAAAAAAAPAAAAAAAAAQ8AAAAAAAAAAAAAUw4AAAAAAABUDgAAAAAAAAAAAAC7EgAAAAAAALwSAAAAAAAAAAAAABcSAAAAAAAAGBIAAAAAAAAAAAAAJhEAAAAAAAAnEQAAAAAAAAAAAAB/EAAAAAAAAIAQAAAAAAAAAAAAALoPAAAAAAAAuw8AAAAAAAAAAAAAAg8AAAAAAAADDwAAAAAAAAAAAABUDgAAAAAAAFUOAAAAAAAAAAAAAMISAAAAAAAAwxIAAAAAAAAAAAAAHRIAAAAAAAAeEgAAAAAAAAAAAAArEQAAAAAAACwRAAAAAAAAAAAAAIMQAAAAAAAAhBAAAAAAAAAAAAAAvQ8AAAAAAAC+DwAAAAAAAAAAAAAEDwAAAAAAAAUPAAAAAAAAAAAAAFUOAAAAAAAAVg4AAAAAAAAAAAAAyRIAAAAAAADKEgAAAAAAAAAAAAAjEgAAAAAAACQSAAAAAAAAAAAAADARAAAAAAAAMREAAAAAAAAAAAAAhxAAAAAAAACIEAAAAAAAAAAAAADADwAAAAAAAMEPAAAAAAAAAAAAAAYPAAAAAAAABw8AAAAAAAAAAAAAVg4AAAAAAABXDgAAAAAAAAAAAAA",
					"AQAAAAAAAAAHAAAAUg4AAAAAAABSDgAAAAAAAAAAAAAAAPC//g4AAAAAAAD+DgAAAAAAAAAAAAAAAPC/tA8AAAAAAAC0DwAAAAAAAAAAAAAAAPC/dxAAAAAAAAB3EAAAAAAAAAAAAAAAAPC/HBEAAAAAAAAcEQAAAAAAAAAAAAAAAPC/CxIAAAAAAAALEgAAAAAAAAAAAAAAAPC/rRIAAAAAAACtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					2296,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcJAAAAAAAAqAkAAAAAAAAAAAAAqAkAAAAAAACpCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwkAAAAAAACnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					2298,
					1,
					"paste",
					null,
					"AQAAAKgJAAAAAAAATgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAkAAAAAAACoCQAAAAAAAAAAAAAAAAAA"
				],
				[
					2301,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAALQJAAAAAAAAtAkAAAAAAAADAAAAZjMy",
					"AQAAAAAAAAABAAAAtwkAAAAAAAC3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					2311,
					1,
					"left_delete",
					null,
					"AQAAAKcJAAAAAAAApwkAAAAAAAClAAAACmltcGwgQXBwZW5kPD4gZm9yIExpc3QgewogICAgZm4gYXBwZW5kKCZtdXQgc2VsZiwgX2Zsb2F0OiBmMzIpIC0+ICZtdXQgU2VsZiB7CiAgICAgICAgc2VsZi5fbGlzdC5wdXNoX2JhY2soT2JqZWN0OjpGbG9hdChGbG9hdDo6bmV3KF9mbG9hdCkpKTsKICAgICAgICBzZWxmCiAgICB9Cn0K",
					"AQAAAAAAAAABAAAApwkAAAAAAABMCgAAAAAAAAAAAAAAAAAA"
				],
				[
					2323,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANsNAAAAAAAA3A0AAAAAAAAAAAAA3A0AAAAAAADdDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2w0AAAAAAADbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2324,
					1,
					"paste",
					null,
					"AQAAAN0NAAAAAAAAkA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3Q0AAAAAAADdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2329,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAO8NAAAAAAAA7w0AAAAAAAADAAAAaTMy",
					"AQAAAAAAAAABAAAA8g0AAAAAAADyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2330,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAAO8NAAAAAAAA8A0AAAAAAAAAAAAA8A0AAAAAAADxDQAAAAAAAAAAAADxDQAAAAAAAPINAAAAAAAAAAAAAPINAAAAAAAA8w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7w0AAAAAAADvDQAAAAAAAAAAAAAAAPC/"
				],
				[
					2338,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAB8OAAAAAAAAHw4AAAAAAAAIAAAAX2ludGVnZXI",
					"AQAAAAAAAAABAAAAHw4AAAAAAAAfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2339,
					1,
					"insert",
					{
						"characters": "_static_str"
					},
					"CwAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAAhDgAAAAAAACIOAAAAAAAAAAAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAACgOAAAAAAAAKQ4AAAAAAAAAAAAAKQ4AAAAAAAAqDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHw4AAAAAAAAfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2340,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAACoOAAAAAAAAKw4AAAAAAAAAAAAAKw4AAAAAAAAsDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKg4AAAAAAAAqDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2342,
					3,
					"right_delete",
					null,
					"AwAAAC4OAAAAAAAALg4AAAAAAAABAAAAaS4OAAAAAAAALg4AAAAAAAABAAAAMy4OAAAAAAAALg4AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2343,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAAC4OAAAAAAAALw4AAAAAAAAAAAAALw4AAAAAAAAwDgAAAAAAAAAAAAAwDgAAAAAAADEOAAAAAAAAAAAAADEOAAAAAAAAMg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALg4AAAAAAAAuDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2354,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAACwOAAAAAAAALQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALA4AAAAAAAAsDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2358,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BQAAABQOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAZDgAAAAAAAAAAAAAVDgAAAAAAABUOAAAAAAAABAAAACAgICAVDgAAAAAAAB0OAAAAAAAAAAAAAB0OAAAAAAAAIQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFA4AAAAAAAAUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2359,
					1,
					"left_delete",
					null,
					"AQAAAB0OAAAAAAAAHQ4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2362,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACgOAAAAAAAAKQ4AAAAAAAAAAAAAKQ4AAAAAAAAxDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKA4AAAAAAAAoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2364,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEUOAAAAAAAARg4AAAAAAAAAAAAARg4AAAAAAABODgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQ4AAAAAAABFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2365,
					1,
					"left_delete",
					null,
					"AQAAAEoOAAAAAAAASg4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAATg4AAAAAAABODgAAAAAAAAAAAAAAAPC/"
				],
				[
					2367,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAACcOAAAAAAAAJw4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASg4AAAAAAABKDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2376,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAIAOAAAAAAAAgA4AAAAAAAADAAAASW50",
					"AQAAAAAAAAABAAAAgw4AAAAAAACDDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2377,
					1,
					"insert",
					{
						"characters": "St"
					},
					"AgAAAIAOAAAAAAAAgQ4AAAAAAAAAAAAAgQ4AAAAAAACCDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgA4AAAAAAACADgAAAAAAAAAAAAAAAPC/"
				],
				[
					2378,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"(_String)\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"String\",\"range\":{\"end\":{\"character\":40,\"line\":174},\"start\":{\"character\":38,\"line\":174}}},\"label\":\"String\",\"kind\":20,\"sortText\":\"fffffff9\",\"filterText\":\"String\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1484,
							2377,
							2
						],
						"trigger": "String"
					},
					"AgAAAIAOAAAAAAAAgA4AAAAAAAACAAAAU3SADgAAAAAAAIYOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgg4AAAAAAACCDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2380,
					2,
					"delete_word",
					{
						"forward": true
					},
					"AgAAAIcOAAAAAAAAhw4AAAAAAAADAAAASW50hw4AAAAAAACHDgAAAAAAAAIAAAA6Og",
					"AQAAAAAAAAABAAAAhw4AAAAAAACHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2381,
					4,
					"delete_word",
					{
						"forward": true
					},
					"BAAAAIcOAAAAAAAAhw4AAAAAAAADAAAAbmV3hw4AAAAAAACHDgAAAAAAAAEAAAAohw4AAAAAAACHDgAAAAAAAAgAAABfaW50ZWdlcocOAAAAAAAAhw4AAAAAAAAEAAAAKSkpOw",
					"AQAAAAAAAAABAAAAhw4AAAAAAACHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2382,
					1,
					"insert",
					{
						"characters": "));"
					},
					"AwAAAIcOAAAAAAAAiA4AAAAAAAAAAAAAiA4AAAAAAACJDgAAAAAAAAAAAACJDgAAAAAAAIoOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhw4AAAAAAACHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2392,
					1,
					"insert",
					{
						"characters": "_Sring"
					},
					"BgAAAIcOAAAAAAAAiA4AAAAAAAAAAAAAiA4AAAAAAACJDgAAAAAAAAAAAACJDgAAAAAAAIoOAAAAAAAAAAAAAIoOAAAAAAAAiw4AAAAAAAAAAAAAiw4AAAAAAACMDgAAAAAAAAAAAACMDgAAAAAAAI0OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhw4AAAAAAACHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2393,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"_String\",\"range\":{\"end\":{\"character\":51,\"line\":174},\"start\":{\"character\":45,\"line\":174}}},\"additionalTextEdits\":[],\"label\":\"_String\",\"deprecated\":false,\"filterText\":\"_String\",\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1492,
							2392,
							6
						],
						"trigger": "_String"
					},
					"AgAAAIcOAAAAAAAAhw4AAAAAAAAGAAAAX1NyaW5nhw4AAAAAAACODgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQ4AAAAAAACNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2394,
					1,
					"insert",
					{
						"characters": "::from"
					},
					"BgAAAI4OAAAAAAAAjw4AAAAAAAAAAAAAjw4AAAAAAACQDgAAAAAAAAAAAACQDgAAAAAAAJEOAAAAAAAAAAAAAJEOAAAAAAAAkg4AAAAAAAAAAAAAkg4AAAAAAACTDgAAAAAAAAAAAACTDgAAAAAAAJQOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjg4AAAAAAACODgAAAAAAAAAAAAAAAPC/"
				],
				[
					2397,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&str) -> _String\",\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"textEdit\":{\"newText\":\"from_str(${1:str})$0\",\"range\":{\"end\":{\"character\":58,\"line\":174},\"start\":{\"character\":54,\"line\":174}}},\"label\":\"from_str(…)\",\"deprecated\":false,\"insertTextFormat\":2,\"sortText\":\"fffffffd\",\"kind\":3,\"additionalTextEdits\":[],\"filterText\":\"from_str\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1494,
							2394,
							6
						],
						"trigger": "from_str"
					},
					"AgAAAJAOAAAAAAAAkA4AAAAAAAAEAAAAZnJvbZAOAAAAAAAAnQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlA4AAAAAAACUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2399,
					1,
					"left_delete",
					null,
					"AQAAAJkOAAAAAAAAmQ4AAAAAAAADAAAAc3Ry",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACcDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2400,
					1,
					"insert",
					{
						"characters": "_stati"
					},
					"BgAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACbDgAAAAAAAAAAAACbDgAAAAAAAJwOAAAAAAAAAAAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAAnQ4AAAAAAACeDgAAAAAAAAAAAACeDgAAAAAAAJ8OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2401,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"&str\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_static_string\",\"range\":{\"end\":{\"character\":69,\"line\":174},\"start\":{\"character\":63,\"line\":174}}},\"label\":\"_static_string\",\"kind\":6,\"sortText\":\"fffffff8\",\"filterText\":\"_static_string\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1497,
							2400,
							6
						],
						"trigger": "_static_string"
					},
					"AgAAAJkOAAAAAAAAmQ4AAAAAAAAGAAAAX3N0YXRpmQ4AAAAAAACnDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnw4AAAAAAACfDgAAAAAAAAAAAAAAAPC/"
				],
				[
					2417,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAMUfAAAAAAAAxh8AAAAAAAAAAAAAxh8AAAAAAADHHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxR8AAAAAAADFHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2419,
					1,
					"insert",
					{
						"characters": "impl"
					},
					"BAAAAMYfAAAAAAAAxx8AAAAAAAAAAAAAxx8AAAAAAADIHwAAAAAAAAAAAADIHwAAAAAAAMkfAAAAAAAAAAAAAMkfAAAAAAAAyh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxh8AAAAAAADGHwAAAAAAAAAAAAAAAAAA"
				],
				[
					2420,
					1,
					"insert",
					{
						"characters": " From"
					},
					"BQAAAMofAAAAAAAAyx8AAAAAAAAAAAAAyx8AAAAAAADMHwAAAAAAAAAAAADMHwAAAAAAAM0fAAAAAAAAAAAAAM0fAAAAAAAAzh8AAAAAAAAAAAAAzh8AAAAAAADPHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyh8AAAAAAADKHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2424,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"FromStr\",\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/src/list.rs\"},\"position\":{\"character\":9,\"line\":360}},\"imports\":[{\"full_import_path\":\"std::str::FromStr\",\"imported_name\":\"FromStr\"}]},\"additionalTextEdits\":[],\"label\":\"FromStr (use std::str::FromStr)\",\"deprecated\":false,\"textEdit\":{\"newText\":\"FromStr\",\"range\":{\"end\":{\"character\":9,\"line\":360},\"start\":{\"character\":5,\"line\":360}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Parse a value from a string\\n\\n`FromStr`'s [`from_str`] method is often used implicitly, through\\n[`str`]'s [`parse`] method. See [`parse`]'s documentation for examples.\\n\\n[`from_str`]: FromStr::from_str\\n[`parse`]: str::parse\\n\\n`FromStr` does not have a lifetime parameter, and so you can only parse types\\nthat do not contain a lifetime parameter themselves. In other words, you can\\nparse an `i32` with `FromStr`, but not a `&i32`. You can parse a struct that\\ncontains an `i32`, but not one that contains an `&i32`.\\n\\n# Examples\\n\\nBasic implementation of `FromStr` on an example `Point` type:\\n\\n```rust\\nuse std::str::FromStr;\\nuse std::num::ParseIntError;\\n\\n#[derive(Debug, PartialEq)]\\nstruct Point {\\n    x: i32,\\n    y: i32\\n}\\n\\nimpl FromStr for Point {\\n    type Err = ParseIntError;\\n\\n    fn from_str(s: &str) -> Result<Self, Self::Err> {\\n        let coords: Vec<&str> = s.trim_matches(|p| p == '(' || p == ')' )\\n                                 .split(',')\\n                                 .collect();\\n\\n        let x_fromstr = coords[0].parse::<i32>()?;\\n        let y_fromstr = coords[1].parse::<i32>()?;\\n\\n        Ok(Point { x: x_fromstr, y: y_fromstr })\\n    }\\n}\\n\\nlet p = Point::from_str(\\\"(1,2)\\\");\\nassert_eq!(p.unwrap(), Point{ x: 1, y: 2} )\\n```\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1510,
							2420,
							5
						],
						"trigger": "FromStr"
					},
					"AgAAAMsfAAAAAAAAyx8AAAAAAAAEAAAARnJvbcsfAAAAAAAA0h8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzx8AAAAAAADPHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2425,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									23,
									20
								],
								[
									23,
									20
								],
								"\n",
								null
							],
							[
								[
									23,
									20
								],
								[
									23,
									20
								],
								"use std::str::FromStr;",
								null
							]
						]
					},
					"AgAAANUBAAAAAAAA6wEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0h8AAAAAAADSHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2426,
					1,
					"insert",
					{
						"characters": "<>"
					},
					"AgAAAOkfAAAAAAAA6h8AAAAAAAAAAAAA6h8AAAAAAADrHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6R8AAAAAAADpHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2427,
					2,
					"left_delete",
					null,
					"AgAAAOofAAAAAAAA6h8AAAAAAAABAAAAPukfAAAAAAAA6R8AAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAA6x8AAAAAAADrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2428,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAOkfAAAAAAAA6h8AAAAAAAAAAAAA6h8AAAAAAADrHwAAAAAAAAAAAADrHwAAAAAAAOwfAAAAAAAAAAAAAOwfAAAAAAAA7R8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6R8AAAAAAADpHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2429,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAO0fAAAAAAAA7h8AAAAAAAAAAAAA7h8AAAAAAADvHwAAAAAAAAAAAADvHwAAAAAAAPAfAAAAAAAAAAAAAPAfAAAAAAAA8R8AAAAAAAAAAAAA8R8AAAAAAADyHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7R8AAAAAAADtHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2430,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIfAAAAAAAA8x8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8h8AAAAAAADyHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2431,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPMfAAAAAAAA9R8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8x8AAAAAAADzHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2432,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAPQfAAAAAAAA9R8AAAAAAAAAAAAA9R8AAAAAAAD2HwAAAAAAAAAAAAD1HwAAAAAAAPkfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9B8AAAAAAAD0HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2437,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAPUfAAAAAAAA9R8AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA3R8AAAAAAADdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2444,
					1,
					"reindent",
					null,
					"AQAAAPUfAAAAAAAA+R8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9R8AAAAAAAD1HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2445,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAPkfAAAAAAAA+h8AAAAAAAAAAAAA+h8AAAAAAAD7HwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+R8AAAAAAAD5HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2446,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPsfAAAAAAAA/B8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+x8AAAAAAAD7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2447,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"from_str\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"fn from_str(s: &str) -> Result<Self, Self::Err> {\\n    $0\\n}\",\"range\":{\"end\":{\"character\":7,\"line\":362},\"start\":{\"character\":4,\"line\":362}}},\"label\":\"fn from_str(..)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Parses a string `s` to return a value of this type.\\n\\nIf parsing succeeds, return the value inside [`Ok`], otherwise\\nwhen the string is ill-formatted return an error specific to the\\ninside [`Err`]. The error type is specific to the implementation of the trait.\\n\\n# Examples\\n\\nBasic usage with [`i32`], a type that implements `FromStr`:\\n\\n```rust\\nuse std::str::FromStr;\\n\\nlet s = \\\"5\\\";\\nlet x = i32::from_str(s).unwrap();\\n\\nassert_eq!(5, x);\\n```\"},\"kind\":3,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							1527,
							2446,
							1
						],
						"trigger": "from_str"
					},
					"AgAAAPkfAAAAAAAA+R8AAAAAAAADAAAAZm4g+R8AAAAAAAA5IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/B8AAAAAAAD8HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2465,
					1,
					"insert",
					{
						"characters": "Ok*l"
					},
					"BAAAADMgAAAAAAAANCAAAAAAAAAAAAAANCAAAAAAAAA1IAAAAAAAAAAAAAA1IAAAAAAAADYgAAAAAAAAAAAAADYgAAAAAAAANyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyAAAAAAAAAzIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2466,
					2,
					"left_delete",
					null,
					"AgAAADYgAAAAAAAANiAAAAAAAAABAAAAbDUgAAAAAAAANSAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAANyAAAAAAAAA3IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2467,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADUgAAAAAAAANyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANSAAAAAAAAA1IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2468,
					1,
					"insert",
					{
						"characters": "List::from"
					},
					"CgAAADYgAAAAAAAANyAAAAAAAAAAAAAANyAAAAAAAAA4IAAAAAAAAAAAAAA4IAAAAAAAADkgAAAAAAAAAAAAADkgAAAAAAAAOiAAAAAAAAAAAAAAOiAAAAAAAAA7IAAAAAAAAAAAAAA7IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAPSAAAAAAAAAAAAAAPSAAAAAAAAA+IAAAAAAAAAAAAAA+IAAAAAAAAD8gAAAAAAAAAAAAAD8gAAAAAAAAQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANiAAAAAAAAA2IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2469,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(T) -> Self\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"from(${1:_})$0\",\"range\":{\"end\":{\"character\":21,\"line\":363},\"start\":{\"character\":17,\"line\":363}}},\"label\":\"from(…) (as From)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Performs the conversion.\"},\"kind\":3,\"sortText\":\"fffffffd\",\"filterText\":\"from\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1539,
							2468,
							10
						],
						"trigger": "from"
					},
					"AgAAADwgAAAAAAAAPCAAAAAAAAAEAAAAZnJvbTwgAAAAAAAAQyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCAAAAAAAABAIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2471,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAEEgAAAAAAAAQiAAAAAAAAAAAAAAQiAAAAAAAABCIAAAAAAAAAEAAABf",
					"AQAAAAAAAAABAAAAQSAAAAAAAABCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2477,
					1,
					"left_delete",
					null,
					"AQAAAAUgAAAAAAAABSAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2478,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAAUgAAAAAAAABiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2479,
					1,
					"left_delete",
					null,
					"AQAAAAUgAAAAAAAABSAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2480,
					1,
					"insert",
					{
						"characters": "_static_str"
					},
					"CwAAAAUgAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2489,
					1,
					"left_delete",
					null,
					"AQAAAEsgAAAAAAAASyAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAATCAAAAAAAABMIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2490,
					1,
					"insert",
					{
						"characters": "_sat"
					},
					"BAAAAEsgAAAAAAAATCAAAAAAAAAAAAAATCAAAAAAAABNIAAAAAAAAAAAAABNIAAAAAAAAE4gAAAAAAAAAAAAAE4gAAAAAAAATyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASyAAAAAAAABLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2491,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"&str\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_static_str\",\"range\":{\"end\":{\"character\":26,\"line\":363},\"start\":{\"character\":22,\"line\":363}}},\"label\":\"_static_str\",\"kind\":6,\"sortText\":\"fffffff9\",\"filterText\":\"_static_str\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1558,
							2490,
							4
						],
						"trigger": "_static_str"
					},
					"AgAAAEsgAAAAAAAASyAAAAAAAAAEAAAAX3NhdEsgAAAAAAAAViAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATyAAAAAAAABPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2538,
					5,
					"delete_word",
					{
						"forward": true
					},
					"BQAAACEgAAAAAAAAISAAAAAAAAABAAAAPCEgAAAAAAAAISAAAAAAAAAEAAAAU2VsZiEgAAAAAAAAISAAAAAAAAABAAAALCEgAAAAAAAAISAAAAAAAAAFAAAAIFNlbGYhIAAAAAAAACEgAAAAAAAAAgAAADo6",
					"AQAAAAAAAAABAAAAISAAAAAAAAAhIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2539,
					4,
					"right_delete",
					null,
					"BAAAACEgAAAAAAAAISAAAAAAAAABAAAARSEgAAAAAAAAISAAAAAAAAABAAAAciEgAAAAAAAAISAAAAAAAAABAAAAciEgAAAAAAAAISAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAISAAAAAAAAAhIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2552,
					1,
					"insert",
					{
						"characters": "<List>"
					},
					"BgAAACEgAAAAAAAAIiAAAAAAAAAAAAAAIiAAAAAAAAAjIAAAAAAAAAAAAAAjIAAAAAAAACQgAAAAAAAAAAAAACQgAAAAAAAAJSAAAAAAAAAAAAAAJSAAAAAAAAAmIAAAAAAAAAAAAAAmIAAAAAAAACcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAISAAAAAAAAAhIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2561,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACYgAAAAAAAAJyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJiAAAAAAAAAmIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2562,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcgAAAAAAAAKCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyAAAAAAAAAnIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2563,
					1,
					"insert",
					{
						"characters": "Err"
					},
					"AwAAACggAAAAAAAAKSAAAAAAAAAAAAAAKSAAAAAAAAAqIAAAAAAAAAAAAAAqIAAAAAAAACsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCAAAAAAAAAoIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2572,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACggAAAAAAAAKCAAAAAAAAADAAAARXJy",
					"AQAAAAAAAAABAAAAKyAAAAAAAAArIAAAAAAAAAAAAAAA8IVA"
				],
				[
					2573,
					1,
					"insert",
					{
						"characters": "Error"
					},
					"BQAAACggAAAAAAAAKSAAAAAAAAAAAAAAKSAAAAAAAAAqIAAAAAAAAAAAAAAqIAAAAAAAACsgAAAAAAAAAAAAACsgAAAAAAAALCAAAAAAAAAAAAAALCAAAAAAAAAtIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCAAAAAAAAAoIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2575,
					1,
					"insert",
					{
						"characters": "error::"
					},
					"BwAAACggAAAAAAAAKSAAAAAAAAAAAAAAKSAAAAAAAAAqIAAAAAAAAAAAAAAqIAAAAAAAACsgAAAAAAAAAAAAACsgAAAAAAAALCAAAAAAAAAAAAAALCAAAAAAAAAtIAAAAAAAAAAAAAAtIAAAAAAAAC4gAAAAAAAAAAAAAC4gAAAAAAAALyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCAAAAAAAAAoIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2582,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwfAAAAAAAA3R8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3B8AAAAAAADcHwAAAAAAAAAAAAAAkIdA"
				],
				[
					2584,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAANwfAAAAAAAA3R8AAAAAAAAAAAAA3R8AAAAAAADeHwAAAAAAAAAAAADeHwAAAAAAAN8fAAAAAAAAAAAAAN8fAAAAAAAA4B8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3B8AAAAAAADcHwAAAAAAAAAAAAAAAAAA"
				],
				[
					2585,
					1,
					"insert",
					{
						"characters": " std::er"
					},
					"CAAAAOAfAAAAAAAA4R8AAAAAAAAAAAAA4R8AAAAAAADiHwAAAAAAAAAAAADiHwAAAAAAAOMfAAAAAAAAAAAAAOMfAAAAAAAA5B8AAAAAAAAAAAAA5B8AAAAAAADlHwAAAAAAAAAAAADlHwAAAAAAAOYfAAAAAAAAAAAAAOYfAAAAAAAA5x8AAAAAAAAAAAAA5x8AAAAAAADoHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4B8AAAAAAADgHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2586,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"error\",\"additionalTextEdits\":[],\"label\":\"error\",\"deprecated\":false,\"textEdit\":{\"newText\":\"error\",\"range\":{\"end\":{\"character\":11,\"line\":361},\"start\":{\"character\":9,\"line\":361}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Traits for working with Errors.\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1602,
							2585,
							8
						],
						"trigger": "error"
					},
					"AgAAAOYfAAAAAAAA5h8AAAAAAAACAAAAZXLmHwAAAAAAAOsfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6B8AAAAAAADoHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2587,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOsfAAAAAAAA7B8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6x8AAAAAAADrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2599,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAUgAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAKIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2603,
					5,
					"delete_word",
					{
						"forward": false
					},
					"BgAAAEUgAAAAAAAARSAAAAAAAAAFAAAARXJyb3IGIAAAAAAAAAYgAAAAAAAABAAAACAgICA/IAAAAAAAAD8gAAAAAAAAAgAAADo6OiAAAAAAAAA6IAAAAAAAAAUAAABlcnJvcjggAAAAAAAAOCAAAAAAAAACAAAALCA0IAAAAAAAADQgAAAAAAAABAAAAExpc3Q",
					"AQAAAAAAAAABAAAASiAAAAAAAABKIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2604,
					1,
					"insert",
					{
						"characters": "Self,."
					},
					"BgAAADQgAAAAAAAANSAAAAAAAAAAAAAANSAAAAAAAAA2IAAAAAAAAAAAAAA2IAAAAAAAADcgAAAAAAAAAAAAADcgAAAAAAAAOCAAAAAAAAAAAAAAOCAAAAAAAAA5IAAAAAAAAAAAAAA5IAAAAAAAADogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANCAAAAAAAAA0IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2605,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADogAAAAAAAAOyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOiAAAAAAAAA6IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2606,
					2,
					"left_delete",
					null,
					"AgAAADogAAAAAAAAOiAAAAAAAAABAAAAIDkgAAAAAAAAOSAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAOyAAAAAAAAA7IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2607,
					1,
					"insert",
					{
						"characters": " Self::err"
					},
					"CgAAADkgAAAAAAAAOiAAAAAAAAAAAAAAOiAAAAAAAAA7IAAAAAAAAAAAAAA7IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAPSAAAAAAAAAAAAAAPSAAAAAAAAA+IAAAAAAAAAAAAAA+IAAAAAAAAD8gAAAAAAAAAAAAAD8gAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABBIAAAAAAAAAAAAABBIAAAAAAAAEIgAAAAAAAAAAAAAEIgAAAAAAAAQyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOSAAAAAAAAA5IAAAAAAAAAAAAAAAAPC/"
				],
				[
					2609,
					1,
					"insert_completion",
					{
						"completion": "Err(${1})",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Err"
					},
					"AgAAAEAgAAAAAAAAQCAAAAAAAAADAAAAZXJyQCAAAAAAAABFIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQyAAAAAAAABDIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2611,
					2,
					"right_delete",
					null,
					"AgAAAEMgAAAAAAAAQyAAAAAAAAABAAAAKEMgAAAAAAAAQyAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAQyAAAAAAAABDIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2613,
					1,
					"reindent",
					null,
					"AQAAAAYgAAAAAAAACiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAYIhA"
				],
				[
					2614,
					1,
					"insert",
					{
						"characters": "ttyop"
					},
					"BQAAAAogAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAPIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2615,
					4,
					"left_delete",
					null,
					"BAAAAA4gAAAAAAAADiAAAAAAAAABAAAAcA0gAAAAAAAADSAAAAAAAAABAAAAbwwgAAAAAAAADCAAAAAAAAABAAAAeQsgAAAAAAAACyAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2616,
					1,
					"insert",
					{
						"characters": "ype"
					},
					"AwAAAAsgAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACyAAAAAAAAALIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2617,
					1,
					"insert",
					{
						"characters": " AEr"
					},
					"BAAAAA4gAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAABEgAAAAAAAAAAAAABEgAAAAAAAAEiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2618,
					3,
					"left_delete",
					null,
					"AwAAABEgAAAAAAAAESAAAAAAAAABAAAAchAgAAAAAAAAECAAAAAAAAABAAAARQ8gAAAAAAAADyAAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAEiAAAAAAAAASIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2619,
					1,
					"insert",
					{
						"characters": "Err:"
					},
					"BAAAAA8gAAAAAAAAECAAAAAAAAAAAAAAECAAAAAAAAARIAAAAAAAAAAAAAARIAAAAAAAABIgAAAAAAAAAAAAABIgAAAAAAAAEyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2620,
					1,
					"left_delete",
					null,
					"AQAAABIgAAAAAAAAEiAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAEyAAAAAAAAATIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2621,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABIgAAAAAAAAEyAAAAAAAAAAAAAAEyAAAAAAAAAUIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEiAAAAAAAAASIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2622,
					1,
					"insert",
					{
						"characters": " None;"
					},
					"BgAAABQgAAAAAAAAFSAAAAAAAAAAAAAAFSAAAAAAAAAWIAAAAAAAAAAAAAAWIAAAAAAAABcgAAAAAAAAAAAAABcgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAZIAAAAAAAAAAAAAAZIAAAAAAAABogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCAAAAAAAAAUIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2630,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABUgAAAAAAAAFSAAAAAAAAAEAAAATm9uZQ",
					"AQAAAAAAAAABAAAAGSAAAAAAAAAZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2631,
					1,
					"insert",
					{
						"characters": "Eror"
					},
					"BAAAABUgAAAAAAAAFiAAAAAAAAAAAAAAFiAAAAAAAAAXIAAAAAAAAAAAAAAXIAAAAAAAABggAAAAAAAAAAAAABggAAAAAAAAGSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFSAAAAAAAAAVIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2632,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABUgAAAAAAAAFSAAAAAAAAAEAAAARXJvcg",
					"AQAAAAAAAAABAAAAGSAAAAAAAAAZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2633,
					1,
					"insert",
					{
						"characters": "error::Er"
					},
					"CQAAABUgAAAAAAAAFiAAAAAAAAAAAAAAFiAAAAAAAAAXIAAAAAAAAAAAAAAXIAAAAAAAABggAAAAAAAAAAAAABggAAAAAAAAGSAAAAAAAAAAAAAAGSAAAAAAAAAaIAAAAAAAAAAAAAAaIAAAAAAAABsgAAAAAAAAAAAAABsgAAAAAAAAHCAAAAAAAAAAAAAAHCAAAAAAAAAdIAAAAAAAAAAAAAAdIAAAAAAAAB4gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFSAAAAAAAAAVIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2634,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Error\",\"additionalTextEdits\":[],\"label\":\"Error\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Error\",\"range\":{\"end\":{\"character\":24,\"line\":364},\"start\":{\"character\":22,\"line\":364}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"`Error` is a trait representing the basic expectations for error values,\\ni.e., values of type `E` in [`Result<T, E>`].\\n\\nErrors must describe themselves through the [`Display`] and [`Debug`]\\ntraits. Error messages are typically concise lowercase sentences without\\ntrailing punctuation:\\n\\n```rust\\nlet err = \\\"NaN\\\".parse::<u32>().unwrap_err();\\nassert_eq!(err.to_string(), \\\"invalid digit found in string\\\");\\n```\\n\\nErrors may provide cause chain information. [`Error::source()`] is generally\\nused when errors cross \\\"abstraction boundaries\\\". If one module must report\\nan error that is caused by an error from a lower-level module, it can allow\\naccessing that error via [`Error::source()`]. This makes it possible for the\\nhigh-level module to provide its own errors while also revealing some of the\\nimplementation for debugging via `source` chains.\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1637,
							2633,
							9
						],
						"trigger": "Error"
					},
					"AgAAABwgAAAAAAAAHCAAAAAAAAACAAAARXIcIAAAAAAAACEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHiAAAAAAAAAeIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2664,
					1,
					"cut",
					null,
					"AQAAAFoBAAAAAAAAWgEAAAAAAAAhAAAAdXNlIHN0ZDo6Y29sbGVjdGlvbnM6OnZlY19kZXF1ZTsK",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2675,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFkBAAAAAAAAWgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2680,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKABAAAAAAAAoQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAEAAAAAAACgAQAAAAAAAP///////+9/"
				],
				[
					2704,
					1,
					"insert",
					{
						"characters": "Box<"
					},
					"BAAAAPYfAAAAAAAA9x8AAAAAAAAAAAAA9x8AAAAAAAD4HwAAAAAAAAAAAAD4HwAAAAAAAPkfAAAAAAAAAAAAAPkfAAAAAAAA+h8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9h8AAAAAAAD2HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2705,
					1,
					"insert",
					{
						"characters": "dyn"
					},
					"AwAAAPofAAAAAAAA+x8AAAAAAAAAAAAA+x8AAAAAAAD8HwAAAAAAAAAAAAD8HwAAAAAAAP0fAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+h8AAAAAAAD6HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2706,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0fAAAAAAAA/h8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/R8AAAAAAAD9HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2709,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAAogAAAAAAAACyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2744,
					1,
					"insert",
					{
						"characters": "uise"
					},
					"BAAAAM4fAAAAAAAAzx8AAAAAAAAAAAAAzx8AAAAAAADQHwAAAAAAAAAAAADQHwAAAAAAANEfAAAAAAAAAAAAANEfAAAAAAAA0h8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzh8AAAAAAADOHwAAAAAAAAAAAAAAgGNA"
				],
				[
					2745,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIfAAAAAAAA0x8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0h8AAAAAAADSHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2746,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAM4fAAAAAAAAzh8AAAAAAAAFAAAAdWlzZSA",
					"AQAAAAAAAAABAAAA0x8AAAAAAADTHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2747,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAM4fAAAAAAAAzx8AAAAAAAAAAAAAzx8AAAAAAADQHwAAAAAAAAAAAADQHwAAAAAAANEfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzh8AAAAAAADOHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2748,
					1,
					"insert",
					{
						"characters": " std::s"
					},
					"BwAAANEfAAAAAAAA0h8AAAAAAAAAAAAA0h8AAAAAAADTHwAAAAAAAAAAAADTHwAAAAAAANQfAAAAAAAAAAAAANQfAAAAAAAA1R8AAAAAAAAAAAAA1R8AAAAAAADWHwAAAAAAAAAAAADWHwAAAAAAANcfAAAAAAAAAAAAANcfAAAAAAAA2B8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0R8AAAAAAADRHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2749,
					1,
					"left_delete",
					null,
					"AQAAANcfAAAAAAAA1x8AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA2B8AAAAAAADYHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2750,
					1,
					"insert",
					{
						"characters": "err"
					},
					"AwAAANcfAAAAAAAA2B8AAAAAAAAAAAAA2B8AAAAAAADZHwAAAAAAAAAAAADZHwAAAAAAANofAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1x8AAAAAAADXHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2751,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANcfAAAAAAAA1x8AAAAAAAADAAAAZXJy",
					"AQAAAAAAAAABAAAA2h8AAAAAAADaHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2752,
					1,
					"insert",
					{
						"characters": "string::Par"
					},
					"CwAAANcfAAAAAAAA2B8AAAAAAAAAAAAA2B8AAAAAAADZHwAAAAAAAAAAAADZHwAAAAAAANofAAAAAAAAAAAAANofAAAAAAAA2x8AAAAAAAAAAAAA2x8AAAAAAADcHwAAAAAAAAAAAADcHwAAAAAAAN0fAAAAAAAAAAAAAN0fAAAAAAAA3h8AAAAAAAAAAAAA3h8AAAAAAADfHwAAAAAAAAAAAADfHwAAAAAAAOAfAAAAAAAAAAAAAOAfAAAAAAAA4R8AAAAAAAAAAAAA4R8AAAAAAADiHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1x8AAAAAAADXHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2753,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"ParseError\",\"additionalTextEdits\":[],\"label\":\"ParseError\",\"deprecated\":false,\"textEdit\":{\"newText\":\"ParseError\",\"range\":{\"end\":{\"character\":20,\"line\":363},\"start\":{\"character\":17,\"line\":363}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"A type alias for [`Infallible`].\\n\\nThis alias exists for backwards compatibility, and may be eventually deprecated.\\n\\n[`Infallible`]: core::convert::Infallible \\\"convert::Infallible\\\"\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1700,
							2752,
							11
						],
						"trigger": "ParseError"
					},
					"AgAAAN8fAAAAAAAA3x8AAAAAAAADAAAAUGFy3x8AAAAAAADpHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4h8AAAAAAADiHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2754,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOkfAAAAAAAA6h8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6R8AAAAAAADpHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2755,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOofAAAAAAAA6x8AAAAAAAAAAAAA6x8AAAAAAADsHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6h8AAAAAAADqHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2760,
					6,
					"delete_word",
					{
						"forward": true
					},
					"BgAAABQgAAAAAAAAFCAAAAAAAAADAAAAQm94FCAAAAAAAAAUIAAAAAAAAAEAAAA8FCAAAAAAAAAUIAAAAAAAAAMAAABkeW4UIAAAAAAAABQgAAAAAAAABgAAACBlcnJvchQgAAAAAAAAFCAAAAAAAAACAAAAOjoUIAAAAAAAABQgAAAAAAAABQAAAEVycm9y",
					"AQAAAAAAAAABAAAAFCAAAAAAAAAUIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2761,
					1,
					"right_delete",
					null,
					"AQAAABQgAAAAAAAAFCAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAFCAAAAAAAAAUIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2762,
					1,
					"insert",
					{
						"characters": "Parse"
					},
					"BQAAABQgAAAAAAAAFSAAAAAAAAAAAAAAFSAAAAAAAAAWIAAAAAAAAAAAAAAWIAAAAAAAABcgAAAAAAAAAAAAABcgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAZIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCAAAAAAAAAUIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2763,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"ParseError\",\"additionalTextEdits\":[],\"label\":\"ParseError\",\"deprecated\":false,\"textEdit\":{\"newText\":\"ParseError\",\"range\":{\"end\":{\"character\":20,\"line\":367},\"start\":{\"character\":15,\"line\":367}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"A type alias for [`Infallible`].\\n\\nThis alias exists for backwards compatibility, and may be eventually deprecated.\\n\\n[`Infallible`]: core::convert::Infallible \\\"convert::Infallible\\\"\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1710,
							2762,
							5
						],
						"trigger": "ParseError"
					},
					"AgAAABQgAAAAAAAAFCAAAAAAAAAFAAAAUGFyc2UUIAAAAAAAAB4gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGSAAAAAAAAAZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2778,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAAOsfAAAAAAAA7B8AAAAAAAAAAAAA7B8AAAAAAADtHwAAAAAAAAAAAADtHwAAAAAAAO4fAAAAAAAAAAAAAO4fAAAAAAAA7x8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6x8AAAAAAADrHwAAAAAAAAAAAAAAAAAA"
				],
				[
					2779,
					1,
					"insert",
					{
						"characters": " std::re"
					},
					"CAAAAO8fAAAAAAAA8B8AAAAAAAAAAAAA8B8AAAAAAADxHwAAAAAAAAAAAADxHwAAAAAAAPIfAAAAAAAAAAAAAPIfAAAAAAAA8x8AAAAAAAAAAAAA8x8AAAAAAAD0HwAAAAAAAAAAAAD0HwAAAAAAAPUfAAAAAAAAAAAAAPUfAAAAAAAA9h8AAAAAAAAAAAAA9h8AAAAAAAD3HwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7x8AAAAAAADvHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2780,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"result\",\"additionalTextEdits\":[],\"label\":\"result\",\"deprecated\":false,\"textEdit\":{\"newText\":\"result\",\"range\":{\"end\":{\"character\":11,\"line\":365},\"start\":{\"character\":9,\"line\":365}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Error handling with the `Result` type.\\n\\n[`Result<T, E>`][`Result`] is the type used for returning and propagating\\nerrors. It is an enum with the variants, [`Ok(T)`], representing\\nsuccess and containing a value, and [`Err(E)`], representing error\\nand containing an error value.\\n\\n```rust\\nenum Result<T, E> {\\n   Ok(T),\\n   Err(E),\\n}\\n```\\n\\nFunctions return [`Result`] whenever errors are expected and\\nrecoverable. In the `std` crate, [`Result`] is most prominently used\\nfor [I/O](../../std/io/index.html).\\n\\nA simple function returning [`Result`] might be\\ndefined and used like so:\\n\\n```rust\\n#[derive(Debug)]\\nenum Version { Version1, Version2 }\\n\\nfn parse_version(header: &[u8]) -> Result<Version, &'static str> {\\n    match header.get(0) {\\n        None => Err(\\\"invalid header length\\\"),\\n        Some(&1) => Ok(Version::Version1),\\n        Some(&2) => Ok(Version::Version2),\\n        Some(_) => Err(\\\"invalid version\\\"),\\n    }\\n}\\n\\nlet version = parse_version(&[1, 2, 3, 4]);\\nmatch version {\\n    Ok(v) => println!(\\\"working with version: {:?}\\\", v),\\n    Err(e) => println!(\\\"error parsing header: {:?}\\\", e),\\n}\\n```\\n\\nPattern matching on [`Result`]s is clear and straightforward for\\nsimple cases, but [`Result`] comes with some convenience methods\\nthat make working with it more succinct.\\n\\n```rust\\nlet good_result: Result<i32, i32> = Ok(10);\\nlet bad_result: Result<i32, i32> = Err(10);\\n\\n// The `is_ok` and `is_err` methods do what they say.\\nassert!(good_result.is_ok() && !good_result.is_err());\\nassert!(bad_result.is_err() && !bad_result.is_ok());\\n\\n// `map` consumes the `Result` and produces another.\\nlet good_result: Result<i32, i32> = good_result.map(|i| i + 1);\\nlet bad_result: Result<i32, i32> = bad_result.map(|i| i - 1);\\n\\n// Use `and_then` to continue the computation.\\nlet good_result: Result<bool, i32> = good_result.and_then(|i| Ok(i == 11));\\n\\n// Use `or_else` to handle the error.\\nlet bad_result: Result<i32, i32> = bad_result.or_else(|i| Ok(i + 20));\\n\\n// Consume the result and return the contents with `unwrap`.\\nlet final_awesome_result = good_result.unwrap();\\n```\\n\\n# Results must be used\\n\\nA common problem with using return values to indicate errors is\\nthat it is easy to ignore the return value, thus failing to handle\\nthe error. [`Result`] is annotated with the `#[must_use]` attribute,\\nwhich will cause the compiler to issue a warning when a Result\\nvalue is ignored. This makes [`Result`] especially useful with\\nfunctions that may encounter errors but don't otherwise return a\\nuseful value.\\n\\nConsider the [`write_all`] method defined for I/O types\\nby the [`Write`] trait:\\n\\n```rust\\nuse std::io;\\n\\ntrait Write {\\n    fn write_all(&mut self, bytes: &[u8]) -> Result<(), io::Error>;\\n}\\n```\\n\\n*Note: The actual definition of [`Write`] uses [`io::Result`], which\\nis just a synonym for <code>[Result]<T, [io::Error]></code>.*\\n\\nThis method doesn't produce a value, but the write may\\nfail. It's crucial to handle the error case, and *not* write\\nsomething like this:\\n\\n```rust\\nuse std::fs::File;\\nuse std::io::prelude::*;\\n\\nlet mut file = File::create(\\\"valuable_data.txt\\\").unwrap();\\n// If `write_all` errors, then we'll never know, because the return\\n// value is ignored.\\nfile.write_all(b\\\"important message\\\");\\n```\\n\\nIf you *do* write that in Rust, the compiler will give you a\\nwarning (by default, controlled by the `unused_must_use` lint).\\n\\nYou might instead, if you don't want to handle the error, simply\\nassert success with [`expect`]. This will panic if the\\nwrite fails, providing a marginally useful message indicating why:\\n\\n```rust\\nuse std::fs::File;\\nuse std::io::prelude::*;\\n\\nlet mut file = File::create(\\\"valuable_data.txt\\\").unwrap();\\nfile.write_all(b\\\"important message\\\").expect(\\\"failed to write message\\\");\\n```\\n\\nYou might also simply assert success:\\n\\n```rust\\nassert!(file.write_all(b\\\"important message\\\").is_ok());\\n```\\n\\nOr propagate the error up the call stack with [`?`]:\\n\\n```rust\\nfn write_message() -> io::Result<()> {\\n    let mut file = File::create(\\\"valuable_data.txt\\\")?;\\n    file.write_all(b\\\"important message\\\")?;\\n    Ok(())\\n}\\n```\\n\\n# The question mark operator, `?`\\n\\nWhen writing code that calls many functions that return the\\n[`Result`] type, the error handling can be tedious. The question mark\\noperator, [`?`], hides some of the boilerplate of propagating errors\\nup the call stack.\\n\\nIt replaces this:\\n\\n```rust\\nuse std::fs::File;\\nuse std::io::prelude::*;\\nuse std::io;\\n\\nstruct Info {\\n    name: String,\\n    age: i32,\\n    rating: i32,\\n}\\n\\nfn write_info(info: &Info) -> io::Result<()> {\\n    // Early return on error\\n    let mut file = match File::create(\\\"my_best_friends.txt\\\") {\\n           Err(e) => return Err(e),\\n           Ok(f) => f,\\n    };\\n    if let Err(e) = file.write_all(format!(\\\"name: {}\\\\n\\\", info.name).as_bytes()) {\\n        return Err(e)\\n    }\\n    if let Err(e) = file.write_all(format!(\\\"age: {}\\\\n\\\", info.age).as_bytes()) {\\n        return Err(e)\\n    }\\n    if let Err(e) = file.write_all(format!(\\\"rating: {}\\\\n\\\", info.rating).as_bytes()) {\\n        return Err(e)\\n    }\\n    Ok(())\\n}\\n```\\n\\nWith this:\\n\\n```rust\\nuse std::fs::File;\\nuse std::io::prelude::*;\\nuse std::io;\\n\\nstruct Info {\\n    name: String,\\n    age: i32,\\n    rating: i32,\\n}\\n\\nfn write_info(info: &Info) -> io::Result<()> {\\n    let mut file = File::create(\\\"my_best_friends.txt\\\")?;\\n    // Early return on error\\n    file.write_all(format!(\\\"name: {}\\\\n\\\", info.name).as_bytes())?;\\n    file.write_all(format!(\\\"age: {}\\\\n\\\", info.age).as_bytes())?;\\n    file.write_all(format!(\\\"rating: {}\\\\n\\\", info.rating).as_bytes())?;\\n    Ok(())\\n}\\n```\\n\\n*It's much nicer!*\\n\\nEnding the expression with [`?`] will result in the unwrapped\\nsuccess ([`Ok`]) value, unless the result is [`Err`], in which case\\n[`Err`] is returned early from the enclosing function.\\n\\n[`?`] can only be used in functions that return [`Result`] because of the\\nearly return of [`Err`] that it provides.\\n\\n[`expect`]: Result::expect\\n[`Write`]: ../../std/io/trait.Write.html \\\"io::Write\\\"\\n[`write_all`]: ../../std/io/trait.Write.html#method.write_all \\\"io::Write::write_all\\\"\\n[`io::Result`]: ../../std/io/type.Result.html \\\"io::Result\\\"\\n[`?`]: crate::ops::Try\\n[`Ok(T)`]: Ok\\n[`Err(E)`]: Err\\n[io::Error]: ../../std/io/struct.Error.html \\\"io::Error\\\"\\n\\n# Method overview\\n\\nIn addition to working with pattern matching, [`Result`] provides a\\nwide variety of different methods.\\n\\n## Querying the variant\\n\\nThe [`is_ok`] and [`is_err`] methods return [`true`] if the [`Result`]\\nis [`Ok`] or [`Err`], respectively.\\n\\n[`is_err`]: Result::is_err\\n[`is_ok`]: Result::is_ok\\n\\n## Adapters for working with references\\n\\n* [`as_ref`] converts from `&Result<T, E>` to `Result<&T, &E>`\\n* [`as_mut`] converts from `&mut Result<T, E>` to `Result<&mut T, &mut E>`\\n* [`as_deref`] converts from `&Result<T, E>` to `Result<&T::Target, &E>`\\n* [`as_deref_mut`] converts from `&mut Result<T, E>` to\\n  `Result<&mut T::Target, &mut E>`\\n\\n[`as_deref`]: Result::as_deref\\n[`as_deref_mut`]: Result::as_deref_mut\\n[`as_mut`]: Result::as_mut\\n[`as_ref`]: Result::as_ref\\n\\n## Extracting contained values\\n\\nThese methods extract the contained value in a [`Result<T, E>`] when it\\nis the [`Ok`] variant. If the [`Result`] is [`Err`]:\\n\\n* [`expect`] panics with a provided custom message\\n* [`unwrap`] panics with a generic message\\n* [`unwrap_or`] returns the provided default value\\n* [`unwrap_or_default`] returns the default value of the type `T`\\n  (which must implement the [`Default`] trait)\\n* [`unwrap_or_else`] returns the result of evaluating the provided\\n  function\\n\\nThe panicking methods [`expect`] and [`unwrap`] require `E` to\\nimplement the [`Debug`] trait.\\n\\n[`Debug`]: crate::fmt::Debug\\n[`expect`]: Result::expect\\n[`unwrap`]: Result::unwrap\\n[`unwrap_or`]: Result::unwrap_or\\n[`unwrap_or_default`]: Result::unwrap_or_default\\n[`unwrap_or_else`]: Result::unwrap_or_else\\n\\nThese methods extract the contained value in a [`Result<T, E>`] when it\\nis the [`Err`] variant. They require `T` to implement the [`Debug`]\\ntrait. If the [`Result`] is [`Ok`]:\\n\\n* [`expect_err`] panics with a provided custom message\\n* [`unwrap_err`] panics with a generic message\\n\\n[`Debug`]: crate::fmt::Debug\\n[`expect_err`]: Result::expect_err\\n[`unwrap_err`]: Result::unwrap_err\\n\\n## Transforming contained values\\n\\nThese methods transform [`Result`] to [`Option`]:\\n\\n* [`err`][Result::err] transforms [`Result<T, E>`] into [`Option<E>`],\\n  mapping [`Err(e)`] to [`Some(e)`] and [`Ok(v)`] to [`None`]\\n* [`ok`][Result::ok] transforms [`Result<T, E>`] into [`Option<T>`],\\n  mapping [`Ok(v)`] to [`Some(v)`] and [`Err(e)`] to [`None`]\\n* [`transpose`] transposes a [`Result`] of an [`Option`] into an\\n  [`Option`] of a [`Result`]\\n\\n\\n[`Err(e)`]: Err\\n[`Ok(v)`]: Ok\\n[`Some(e)`]: Option::Some\\n[`Some(v)`]: Option::Some\\n[`transpose`]: Result::transpose\\n\\nThis method transforms the contained value of the [`Ok`] variant:\\n\\n* [`map`] transforms [`Result<T, E>`] into [`Result<U, E>`] by applying\\n  the provided function to the contained value of [`Ok`] and leaving\\n  [`Err`] values unchanged\\n\\n[`map`]: Result::map\\n\\nThis method transforms the contained value of the [`Err`] variant:\\n\\n* [`map_err`] transforms [`Result<T, E>`] into [`Result<T, F>`] by\\n  applying the provided function to the contained value of [`Err`] and\\n  leaving [`Ok`] values unchanged\\n\\n[`map_err`]: Result::map_err\\n\\nThese methods transform a [`Result<T, E>`] into a value of a possibly\\ndifferent type `U`:\\n\\n* [`map_or`] applies the provided function to the contained value of\\n  [`Ok`], or returns the provided default value if the [`Result`] is\\n  [`Err`]\\n* [`map_or_else`] applies the provided function to the contained value\\n  of [`Ok`], or applies the provided default fallback function to the\\n  contained value of [`Err`]\\n\\n[`map_or`]: Result::map_or\\n[`map_or_else`]: Result::map_or_else\\n\\n## Boolean operators\\n\\nThese methods treat the [`Result`] as a boolean value, where [`Ok`]\\nacts like [`true`] and [`Err`] acts like [`false`]. There are two\\ncategories of these methods: ones that take a [`Result`] as input, and\\nones that take a function as input (to be lazily evaluated).\\n\\nThe [`and`] and [`or`] methods take another [`Result`] as input, and\\nproduce a [`Result`] as output. The [`and`] method can produce a\\n[`Result<U, E>`] value having a different inner type `U` than\\n[`Result<T, E>`]. The [`or`] method can produce a [`Result<T, F>`]\\nvalue having a different error type `F` than [`Result<T, E>`].\\n\\n| method  | self     | input     | output   |\\n|---------|----------|-----------|----------|\\n| [`and`] | `Err(e)` | (ignored) | `Err(e)` |\\n| [`and`] | `Ok(x)`  | `Err(d)`  | `Err(d)` |\\n| [`and`] | `Ok(x)`  | `Ok(y)`   | `Ok(y)`  |\\n| [`or`]  | `Err(e)` | `Err(d)`  | `Err(d)` |\\n| [`or`]  | `Err(e)` | `Ok(y)`   | `Ok(y)`  |\\n| [`or`]  | `Ok(x)`  | (ignored) | `Ok(x)`  |\\n\\n[`and`]: Result::and\\n[`or`]: Result::or\\n\\nThe [`and_then`] and [`or_else`] methods take a function as input, and\\nonly evaluate the function when they need to produce a new value. The\\n[`and_then`] method can produce a [`Result<U, E>`] value having a\\ndifferent inner type `U` than [`Result<T, E>`]. The [`or_else`] method\\ncan produce a [`Result<T, F>`] value having a different error type `F`\\nthan [`Result<T, E>`].\\n\\n| method       | self     | function input | function result | output   |\\n|--------------|----------|----------------|-----------------|----------|\\n| [`and_then`] | `Err(e)` | (not provided) | (not evaluated) | `Err(e)` |\\n| [`and_then`] | `Ok(x)`  | `x`            | `Err(d)`        | `Err(d)` |\\n| [`and_then`] | `Ok(x)`  | `x`            | `Ok(y)`         | `Ok(y)`  |\\n| [`or_else`]  | `Err(e)` | `e`            | `Err(d)`        | `Err(d)` |\\n| [`or_else`]  | `Err(e)` | `e`            | `Ok(y)`         | `Ok(y)`  |\\n| [`or_else`]  | `Ok(x)`  | (not provided) | (not evaluated) | `Ok(x)`  |\\n\\n[`and_then`]: Result::and_then\\n[`or_else`]: Result::or_else\\n\\n## Comparison operators\\n\\nIf `T` and `E` both implement [`PartialOrd`] then [`Result<T, E>`] will\\nderive its [`PartialOrd`] implementation.  With this order, an [`Ok`]\\ncompares as less than any [`Err`], while two [`Ok`] or two [`Err`]\\ncompare as their contained values would in `T` or `E` respectively.  If `T`\\nand `E` both also implement [`Ord`], then so does [`Result<T, E>`].\\n\\n```rust\\nassert!(Ok(1) < Err(0));\\nlet x: Result<i32, ()> = Ok(0);\\nlet y = Ok(1);\\nassert!(x < y);\\nlet x: Result<(), i32> = Err(0);\\nlet y = Err(1);\\nassert!(x < y);\\n```\\n\\n## Iterating over `Result`\\n\\nA [`Result`] can be iterated over. This can be helpful if you need an\\niterator that is conditionally empty. The iterator will either produce\\na single value (when the [`Result`] is [`Ok`]), or produce no values\\n(when the [`Result`] is [`Err`]). For example, [`into_iter`] acts like\\n[`once(v)`] if the [`Result`] is [`Ok(v)`], and like [`empty()`] if the\\n[`Result`] is [`Err`].\\n\\n[`Ok(v)`]: Ok\\n[`empty()`]: crate::iter::empty\\n[`once(v)`]: crate::iter::once\\n\\nIterators over [`Result<T, E>`] come in three types:\\n\\n* [`into_iter`] consumes the [`Result`] and produces the contained\\n  value\\n* [`iter`] produces an immutable reference of type `&T` to the\\n  contained value\\n* [`iter_mut`] produces a mutable reference of type `&mut T` to the\\n  contained value\\n\\nSee [Iterating over `Option`] for examples of how this can be useful.\\n\\n[Iterating over `Option`]: crate::option#iterating-over-option\\n[`into_iter`]: Result::into_iter\\n[`iter`]: Result::iter\\n[`iter_mut`]: Result::iter_mut\\n\\nYou might want to use an iterator chain to do multiple instances of an\\noperation that can fail, but would like to ignore failures while\\ncontinuing to process the successful results. In this example, we take\\nadvantage of the iterable nature of [`Result`] to select only the\\n[`Ok`] values using [`flatten`][Iterator::flatten].\\n\\n```rust\\nlet mut results = vec![];\\nlet mut errs = vec![];\\nlet nums: Vec<_> = [\\\"17\\\", \\\"not a number\\\", \\\"99\\\", \\\"-27\\\", \\\"768\\\"]\\n   .into_iter()\\n   .map(u8::from_str)\\n   // Save clones of the raw `Result` values to inspect\\n   .inspect(|x| results.push(x.clone()))\\n   // Challenge: explain how this captures only the `Err` values\\n   .inspect(|x| errs.extend(x.clone().err()))\\n   .flatten()\\n   .collect();\\nassert_eq!(errs.len(), 3);\\nassert_eq!(nums, [17, 99]);\\nprintln!(\\\"results {:?}\\\", results);\\nprintln!(\\\"errs {:?}\\\", errs);\\nprintln!(\\\"nums {:?}\\\", nums);\\n```\\n\\n## Collecting into `Result`\\n\\n[`Result`] implements the [`FromIterator`][impl-FromIterator] trait,\\nwhich allows an iterator over [`Result`] values to be collected into a\\n[`Result`] of a collection of each contained value of the original\\n[`Result`] values, or [`Err`] if any of the elements was [`Err`].\\n\\n[impl-FromIterator]: Result#impl-FromIterator%3CResult%3CA%2C%20E%3E%3E\\n\\n```rust\\nlet v = [Ok(2), Ok(4), Err(\\\"err!\\\"), Ok(8)];\\nlet res: Result<Vec<_>, &str> = v.into_iter().collect();\\nassert_eq!(res, Err(\\\"err!\\\"));\\nlet v = [Ok(2), Ok(4), Ok(8)];\\nlet res: Result<Vec<_>, &str> = v.into_iter().collect();\\nassert_eq!(res, Ok(vec![2, 4, 8]));\\n```\\n\\n[`Result`] also implements the [`Product`][impl-Product] and\\n[`Sum`][impl-Sum] traits, allowing an iterator over [`Result`] values\\nto provide the [`product`][Iterator::product] and\\n[`sum`][Iterator::sum] methods.\\n\\n[impl-Product]: Result#impl-Product%3CResult%3CU%2C%20E%3E%3E\\n[impl-Sum]: Result#impl-Sum%3CResult%3CU%2C%20E%3E%3E\\n\\n```rust\\nlet v = [Err(\\\"error!\\\"), Ok(1), Ok(2), Ok(3), Err(\\\"foo\\\")];\\nlet res: Result<i32, &str> = v.into_iter().sum();\\nassert_eq!(res, Err(\\\"error!\\\"));\\nlet v = [Ok(1), Ok(2), Ok(21)];\\nlet res: Result<i32, &str> = v.into_iter().product();\\nassert_eq!(res, Ok(42));\\n```\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1719,
							2779,
							8
						],
						"trigger": "result"
					},
					"AgAAAPUfAAAAAAAA9R8AAAAAAAACAAAAcmX1HwAAAAAAAPsfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9x8AAAAAAAD3HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2781,
					1,
					"insert",
					{
						"characters": "::Re"
					},
					"BAAAAPsfAAAAAAAA/B8AAAAAAAAAAAAA/B8AAAAAAAD9HwAAAAAAAAAAAAD9HwAAAAAAAP4fAAAAAAAAAAAAAP4fAAAAAAAA/x8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+x8AAAAAAAD7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2782,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Result\",\"additionalTextEdits\":[],\"label\":\"Result\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Result\",\"range\":{\"end\":{\"character\":19,\"line\":365},\"start\":{\"character\":17,\"line\":365}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"`Result` is a type that represents either success ([`Ok`]) or failure ([`Err`]).\\n\\nSee the [module documentation](self) for details.\"},\"kind\":13,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1721,
							2781,
							4
						],
						"trigger": "Result"
					},
					"AgAAAP0fAAAAAAAA/R8AAAAAAAACAAAAUmX9HwAAAAAAAAMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/x8AAAAAAAD/HwAAAAAAAAAAAAAAAPC/"
				],
				[
					2783,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAMgAAAAAAAABCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAPC/"
				],
				[
					2805,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIoBAAAAAAAAiwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2810,
					1,
					"left_delete",
					null,
					"AQAAAIoBAAAAAAAAigEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2815,
					2,
					"delete_word",
					{
						"forward": true
					},
					"BgAAAJcBAAAAAAAAlwEAAAAAAAACAAAAOjp+AQAAAAAAAH4BAAAAAAAAAgAAADo6ZwEAAAAAAABnAQAAAAAAAAIAAAA6OpMBAAAAAAAAkwEAAAAAAAAGAAAAUmVzdWx0fAEAAAAAAAB8AQAAAAAAAAkAAABGb3JtYXR0ZXJnAQAAAAAAAGcBAAAAAAAABwAAAERpc3BsYXk",
					"AQAAAAAAAAADAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/fgEAAAAAAAB+AQAAAAAAAAAAAAAAAPC/lwEAAAAAAACXAQAAAAAAAAAAAAAAgGNA"
				],
				[
					2820,
					2,
					"cut",
					null,
					"AgAAAGkBAAAAAAAAaQEAAAAAAAAOAAAAdXNlIHN0ZDo6Zm10OwppAQAAAAAAAGkBAAAAAAAADgAAAHVzZSBzdGQ6OmZtdDsK",
					"AQAAAAAAAAABAAAAdQEAAAAAAAB1AQAAAAAAAAAAAAAAgGNA"
				],
				[
					2833,
					1,
					"insert",
					{
						"characters": "fmt::"
					},
					"BQAAAKIUAAAAAAAAoxQAAAAAAAAAAAAAoxQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKUUAAAAAAAAAAAAAKUUAAAAAAAAphQAAAAAAAAAAAAAphQAAAAAAACnFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohQAAAAAAACiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2838,
					1,
					"insert",
					{
						"characters": "fmt::"
					},
					"BQAAANQUAAAAAAAA1RQAAAAAAAAAAAAA1RQAAAAAAADWFAAAAAAAAAAAAADWFAAAAAAAANcUAAAAAAAAAAAAANcUAAAAAAAA2BQAAAAAAAAAAAAA2BQAAAAAAADZFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BQAAAAAAADUFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2841,
					1,
					"insert",
					{
						"characters": "fmt::"
					},
					"BQAAAOsUAAAAAAAA7BQAAAAAAAAAAAAA7BQAAAAAAADtFAAAAAAAAAAAAADtFAAAAAAAAO4UAAAAAAAAAAAAAO4UAAAAAAAA7xQAAAAAAAAAAAAA7xQAAAAAAADwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xQAAAAAAADrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					2858,
					1,
					"cut",
					null,
					"AQAAAKUfAAAAAAAApR8AAAAAAAA2AAAAdXNlIHN0ZDo6c3RyaW5nOjpQYXJzZUVycm9yOwoKdXNlIHN0ZDo6cmVzdWx0OjpSZXN1bHQ7",
					"AQAAAAAAAAABAAAA2x8AAAAAAAClHwAAAAAAAAAAAAAAAAAA"
				],
				[
					2861,
					1,
					"left_delete",
					null,
					"AQAAANcfAAAAAAAA1x8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA2B8AAAAAAADYHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2862,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAM4fAAAAAAAAzh8AAAAAAAAJAAAAUGFyc2VFcnJv",
					"AQAAAAAAAAABAAAA1x8AAAAAAADXHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2863,
					1,
					"insert",
					{
						"characters": "Box<dyn"
					},
					"BwAAAM4fAAAAAAAAzx8AAAAAAAAAAAAAzx8AAAAAAADQHwAAAAAAAAAAAADQHwAAAAAAANEfAAAAAAAAAAAAANEfAAAAAAAA0h8AAAAAAAAAAAAA0h8AAAAAAADTHwAAAAAAAAAAAADTHwAAAAAAANQfAAAAAAAAAAAAANQfAAAAAAAA1R8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzh8AAAAAAADOHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2864,
					1,
					"insert",
					{
						"characters": " errro"
					},
					"BgAAANUfAAAAAAAA1h8AAAAAAAAAAAAA1h8AAAAAAADXHwAAAAAAAAAAAADXHwAAAAAAANgfAAAAAAAAAAAAANgfAAAAAAAA2R8AAAAAAAAAAAAA2R8AAAAAAADaHwAAAAAAAAAAAADaHwAAAAAAANsfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1R8AAAAAAADVHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2865,
					2,
					"left_delete",
					null,
					"AgAAANofAAAAAAAA2h8AAAAAAAABAAAAb9kfAAAAAAAA2R8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA2x8AAAAAAADbHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2866,
					1,
					"insert",
					{
						"characters": "or::er"
					},
					"BgAAANkfAAAAAAAA2h8AAAAAAAAAAAAA2h8AAAAAAADbHwAAAAAAAAAAAADbHwAAAAAAANwfAAAAAAAAAAAAANwfAAAAAAAA3R8AAAAAAAAAAAAA3R8AAAAAAADeHwAAAAAAAAAAAADeHwAAAAAAAN8fAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2R8AAAAAAADZHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2867,
					2,
					"left_delete",
					null,
					"AgAAAN4fAAAAAAAA3h8AAAAAAAABAAAAct0fAAAAAAAA3R8AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA3x8AAAAAAADfHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2868,
					1,
					"insert",
					{
						"characters": "Error>"
					},
					"BgAAAN0fAAAAAAAA3h8AAAAAAAAAAAAA3h8AAAAAAADfHwAAAAAAAAAAAADfHwAAAAAAAOAfAAAAAAAAAAAAAOAfAAAAAAAA4R8AAAAAAAAAAAAA4R8AAAAAAADiHwAAAAAAAAAAAADiHwAAAAAAAOMfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3R8AAAAAAADdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2876,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOQfAAAAAAAA5R8AAAAAAAAAAAAA5R8AAAAAAADpHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5B8AAAAAAADkHwAAAAAAAAAAAAAAAPC/"
				],
				[
					2897,
					1,
					"cut",
					null,
					"AQAAAJUfAAAAAAAAlR8AAAAAAAAQAAAAdXNlIHN0ZDo6ZXJyb3I7Cg",
					"AQAAAAAAAAABAAAApB8AAAAAAACkHwAAAAAAAAAAAAAAYGhA"
				],
				[
					2901,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAGkBAAAAAAAAagEAAAAAAAAAAAAA1h8AAAAAAADWHwAAAAAAAAQAAAAgICAgagEAAAAAAABrAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAAAA"
				],
				[
					2903,
					1,
					"paste",
					null,
					"AQAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAAAA"
				],
				[
					2904,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawEAAAAAAABrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2905,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2906,
					1,
					"left_delete",
					null,
					"AQAAAG8BAAAAAAAAbwEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAcAEAAAAAAABwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2907,
					1,
					"insert",
					{
						"characters": "std::error:"
					},
					"CwAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAABxAQAAAAAAAHIBAAAAAAAAAAAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAAB0AQAAAAAAAAAAAAB0AQAAAAAAAHUBAAAAAAAAAAAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB3AQAAAAAAAAAAAAB3AQAAAAAAAHgBAAAAAAAAAAAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2910,
					1,
					"left_delete",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAYGhA"
				],
				[
					2911,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHkBAAAAAAAAegEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2917,
					1,
					"left_delete",
					null,
					"AQAAAGkBAAAAAAAAaQEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAYGhA"
				],
				[
					3017,
					1,
					"insert",
					{
						"characters": "\n\nimpl"
					},
					"BgAAAFMgAAAAAAAAVCAAAAAAAAAAAAAAVCAAAAAAAABVIAAAAAAAAAAAAABVIAAAAAAAAFYgAAAAAAAAAAAAAFYgAAAAAAAAVyAAAAAAAAAAAAAAVyAAAAAAAABYIAAAAAAAAAAAAABYIAAAAAAAAFkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUyAAAAAAAABTIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3018,
					1,
					"insert",
					{
						"characters": " Friom"
					},
					"BgAAAFkgAAAAAAAAWiAAAAAAAAAAAAAAWiAAAAAAAABbIAAAAAAAAAAAAABbIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAXSAAAAAAAAAAAAAAXSAAAAAAAABeIAAAAAAAAAAAAABeIAAAAAAAAF8gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWSAAAAAAAABZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3019,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFogAAAAAAAAWiAAAAAAAAAFAAAARnJpb20",
					"AQAAAAAAAAABAAAAXyAAAAAAAABfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3020,
					1,
					"insert",
					{
						"characters": "FromSt"
					},
					"BgAAAFogAAAAAAAAWyAAAAAAAAAAAAAAWyAAAAAAAABcIAAAAAAAAAAAAABcIAAAAAAAAF0gAAAAAAAAAAAAAF0gAAAAAAAAXiAAAAAAAAAAAAAAXiAAAAAAAABfIAAAAAAAAAAAAABfIAAAAAAAAGAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWiAAAAAAAABaIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3021,
					2,
					"left_delete",
					null,
					"AgAAAF8gAAAAAAAAXyAAAAAAAAABAAAAdF4gAAAAAAAAXiAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAYCAAAAAAAABgIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3095,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/src/list.rs\"},\"position\":{\"character\":9,\"line\":373}},\"imports\":[{\"full_import_path\":\"std::stream::FromIter\",\"imported_name\":\"FromIter\"}]},\"filterText\":\"FromIter\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"FromIter<$0>\",\"range\":{\"end\":{\"character\":9,\"line\":373},\"start\":{\"character\":5,\"line\":373}}},\"label\":\"FromIter<…> (use std::stream::FromIter)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"A stream that was created from iterator.\\n\\nThis stream is created by the [`from_iter`] function.\\nSee it documentation for more.\\n\\n[`from_iter`]: fn.from_iter.html\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1849,
							3021,
							2
						],
						"trigger": "FromIter"
					},
					"AgAAAFogAAAAAAAAWiAAAAAAAAAEAAAARnJvbVogAAAAAAAAZCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXiAAAAAAAABeIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3096,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									25,
									22
								],
								[
									25,
									22
								],
								"\n",
								null
							],
							[
								[
									25,
									22
								],
								[
									25,
									22
								],
								"use std::stream::FromIter;",
								null
							]
						]
					},
					"AgAAAKYBAAAAAAAAwAEAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYyAAAAAAAABjIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3102,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAAH4gAAAAAAAAfyAAAAAAAAAAAAAAfyAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAIEgAAAAAAAAAAAAAIEgAAAAAAAAgiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfiAAAAAAAAB+IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3104,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAIMgAAAAAAAAhCAAAAAAAAAAAAAAhCAAAAAAAACFIAAAAAAAAAAAAACFIAAAAAAAAIYgAAAAAAAAAAAAAIYgAAAAAAAAhyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgyAAAAAAAACDIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3105,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAIcgAAAAAAAAiCAAAAAAAAAAAAAAiCAAAAAAAACJIAAAAAAAAAAAAACJIAAAAAAAAIogAAAAAAAAAAAAAIogAAAAAAAAiyAAAAAAAAAAAAAAiyAAAAAAAACMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhyAAAAAAAACHIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3106,
					1,
					"insert",
					{
						"characters": " P"
					},
					"AgAAAIwgAAAAAAAAjSAAAAAAAAAAAAAAjSAAAAAAAACOIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCAAAAAAAACMIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3110,
					1,
					"left_delete",
					null,
					"AQAAAI0gAAAAAAAAjSAAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAjiAAAAAAAACOIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3111,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0gAAAAAAAAjyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjSAAAAAAAACNIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3117,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAI4gAAAAAAAAjyAAAAAAAAAAAAAAjyAAAAAAAACQIAAAAAAAAAAAAACPIAAAAAAAAJMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjiAAAAAAAACOIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3118,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAJMgAAAAAAAAlCAAAAAAAAAAAAAAlCAAAAAAAACVIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkyAAAAAAAACTIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUgAAAAAAAAliAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSAAAAAAAACVIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3120,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAJYgAAAAAAAAlyAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliAAAAAAAACWIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3121,
					4,
					"left_delete",
					null,
					"BAAAAJYgAAAAAAAAliAAAAAAAAABAAAAZpUgAAAAAAAAlSAAAAAAAAABAAAAIJQgAAAAAAAAlCAAAAAAAAABAAAAbpMgAAAAAAAAkyAAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAlyAAAAAAAACXIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3133,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAH8gAAAAAAAAfyAAAAAAAAADAAAAc3RyjCAAAAAAAACMIAAAAAAAAAQAAAAgICAgfSAAAAAAAAB9IAAAAAAAAAIAAAA8Jg",
					"AQAAAAAAAAABAAAAgiAAAAAAAACCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3134,
					1,
					"insert",
					{
						"characters": "<i32"
					},
					"BAAAAH0gAAAAAAAAfiAAAAAAAAAAAAAAfiAAAAAAAAB/IAAAAAAAAAAAAAB/IAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAgSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfSAAAAAAAAB9IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3146,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"FromIterator\",\"additionalTextEdits\":[],\"label\":\"FromIterator\",\"deprecated\":false,\"textEdit\":{\"newText\":\"FromIterator\",\"range\":{\"end\":{\"character\":13,\"line\":374},\"start\":{\"character\":5,\"line\":374}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Conversion from an [`Iterator`].\\n\\nBy implementing `FromIterator` for a type, you define how it will be\\ncreated from an iterator. This is common for types which describe a\\ncollection of some kind.\\n\\n[`FromIterator::from_iter()`] is rarely called explicitly, and is instead\\nused through [`Iterator::collect()`] method. See [`Iterator::collect()`]'s\\ndocumentation for more examples.\\n\\nSee also: [`IntoIterator`].\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet five_fives = std::iter::repeat(5).take(5);\\n\\nlet v = Vec::from_iter(five_fives);\\n\\nassert_eq!(v, vec![5, 5, 5, 5, 5]);\\n```\\n\\nUsing [`Iterator::collect()`] to implicitly use `FromIterator`:\\n\\n```rust\\nlet five_fives = std::iter::repeat(5).take(5);\\n\\nlet v: Vec<i32> = five_fives.collect();\\n\\nassert_eq!(v, vec![5, 5, 5, 5, 5]);\\n```\\n\\nImplementing `FromIterator` for your type:\\n\\n```rust\\n// A sample collection, that's just a wrapper over Vec<T>\\n#[derive(Debug)]\\nstruct MyCollection(Vec<i32>);\\n\\n// Let's give it some methods so we can create one and add things\\n// to it.\\nimpl MyCollection {\\n    fn new() -> MyCollection {\\n        MyCollection(Vec::new())\\n    }\\n\\n    fn add(&mut self, elem: i32) {\\n        self.0.push(elem);\\n    }\\n}\\n\\n// and we'll implement FromIterator\\nimpl FromIterator<i32> for MyCollection {\\n    fn from_iter<I: IntoIterator<Item=i32>>(iter: I) -> Self {\\n        let mut c = MyCollection::new();\\n\\n        for i in iter {\\n            c.add(i);\\n        }\\n\\n        c\\n    }\\n}\\n\\n// Now we can make a new iterator...\\nlet iter = (0..5).into_iter();\\n\\n// ... and make a MyCollection out of it\\nlet c = MyCollection::from_iter(iter);\\n\\nassert_eq!(c.0, vec![0, 1, 2, 3, 4]);\\n\\n// collect works too!\\n\\nlet iter = (0..5).into_iter();\\nlet c: MyCollection = iter.collect();\\n\\nassert_eq!(c.0, vec![0, 1, 2, 3, 4]);\\n```\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1875,
							3144,
							0
						],
						"trigger": "FromIterator"
					},
					"AgAAAHUgAAAAAAAAdSAAAAAAAAAIAAAARnJvbUl0ZXJ1IAAAAAAAAIEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfSAAAAAAAAB9IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3157,
					1,
					"reindent",
					null,
					"AQAAAJIgAAAAAAAAliAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkiAAAAAAAACSIAAAAAAAAAAAAAAAoGtA"
				],
				[
					3158,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAJYgAAAAAAAAlyAAAAAAAAAAAAAAlyAAAAAAAACYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliAAAAAAAACWIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJggAAAAAAAAmSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmCAAAAAAAACYIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3160,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"from_iter\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"fn from_iter<T: IntoIterator<Item = i32>>(iter: T) -> Self {\\n    $0\\n}\",\"range\":{\"end\":{\"character\":7,\"line\":375},\"start\":{\"character\":4,\"line\":375}}},\"label\":\"fn from_iter(..)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Creates a value from an iterator.\\n\\nSee the [module-level documentation] for more.\\n\\n[module-level documentation]: crate::iter\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet five_fives = std::iter::repeat(5).take(5);\\n\\nlet v = Vec::from_iter(five_fives);\\n\\nassert_eq!(v, vec![5, 5, 5, 5, 5]);\\n```\"},\"kind\":3,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							1885,
							3159,
							1
						],
						"trigger": "from_iter"
					},
					"AgAAAJYgAAAAAAAAliAAAAAAAAADAAAAZm4gliAAAAAAAADhIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmSAAAAAAAACZIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3166,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAANMgAAAAAAAA0yAAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAeCAAAAAAAAB4IAAAAAAAAAAAAAAAAFpA"
				],
				[
					3170,
					1,
					"reindent",
					null,
					"AQAAANMgAAAAAAAA2yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yAAAAAAAADTIAAAAAAAAAAAAAAAAFpA"
				],
				[
					3171,
					1,
					"insert",
					{
						"characters": "List"
					},
					"BAAAANsgAAAAAAAA3CAAAAAAAAAAAAAA3CAAAAAAAADdIAAAAAAAAAAAAADdIAAAAAAAAN4gAAAAAAAAAAAAAN4gAAAAAAAA3yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2yAAAAAAAADbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3172,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8gAAAAAAAA4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3yAAAAAAAADfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3173,
					1,
					"left_delete",
					null,
					"AQAAAN8gAAAAAAAA3yAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4CAAAAAAAADgIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3174,
					1,
					"insert",
					{
						"characters": "::from"
					},
					"BgAAAN8gAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAOIgAAAAAAAAAAAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADkIAAAAAAAAAAAAADkIAAAAAAAAOUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3yAAAAAAAADfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3175,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(T) -> Self\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"from(${1:_})$0\",\"range\":{\"end\":{\"character\":18,\"line\":376},\"start\":{\"character\":14,\"line\":376}}},\"label\":\"from(…) (as From)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Performs the conversion.\"},\"kind\":3,\"sortText\":\"fffffffd\",\"filterText\":\"from\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1896,
							3174,
							6
						],
						"trigger": "from"
					},
					"AgAAAOEgAAAAAAAA4SAAAAAAAAAEAAAAZnJvbeEgAAAAAAAA6CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SAAAAAAAADlIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3188,
					6,
					"delete_word",
					{
						"forward": false
					},
					"BgAAAOcgAAAAAAAA5yAAAAAAAAABAAAAKeYgAAAAAAAA5iAAAAAAAAABAAAAX+UgAAAAAAAA5SAAAAAAAAABAAAAKOEgAAAAAAAA4SAAAAAAAAAEAAAAZnJvbd8gAAAAAAAA3yAAAAAAAAACAAAAOjrbIAAAAAAAANsgAAAAAAAABAAAAExpc3Q",
					"AQAAAAAAAAABAAAA6CAAAAAAAADoIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3189,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BgAAANsgAAAAAAAA3CAAAAAAAAAAAAAA3CAAAAAAAADkIAAAAAAAAAAAAADTIAAAAAAAANMgAAAAAAAACAAAACAgICAgICAg3CAAAAAAAADdIAAAAAAAAAAAAADdIAAAAAAAAN4gAAAAAAAAAAAAAN4gAAAAAAAA3yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2yAAAAAAAADbIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3190,
					1,
					"insert",
					{
						"characters": " integer"
					},
					"CAAAAN8gAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAOIgAAAAAAAAAAAAAOIgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADkIAAAAAAAAAAAAADkIAAAAAAAAOUgAAAAAAAAAAAAAOUgAAAAAAAA5iAAAAAAAAAAAAAA5iAAAAAAAADnIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3yAAAAAAAADfIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3191,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAOcgAAAAAAAA6CAAAAAAAAAAAAAA6CAAAAAAAADpIAAAAAAAAAAAAADpIAAAAAAAAOogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5yAAAAAAAADnIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3192,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOogAAAAAAAA6yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6iAAAAAAAADqIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3196,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMAgAAAAAAAAwCAAAAAAAAAEAAAAaXRlcg",
					"AQAAAAAAAAABAAAAxCAAAAAAAADEIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3197,
					1,
					"insert",
					{
						"characters": "_integer_iterat"
					},
					"DwAAAMAgAAAAAAAAwSAAAAAAAAAAAAAAwSAAAAAAAADCIAAAAAAAAAAAAADCIAAAAAAAAMMgAAAAAAAAAAAAAMMgAAAAAAAAxCAAAAAAAAAAAAAAxCAAAAAAAADFIAAAAAAAAAAAAADFIAAAAAAAAMYgAAAAAAAAAAAAAMYgAAAAAAAAxyAAAAAAAAAAAAAAxyAAAAAAAADIIAAAAAAAAAAAAADIIAAAAAAAAMkgAAAAAAAAAAAAAMkgAAAAAAAAyiAAAAAAAAAAAAAAyiAAAAAAAADLIAAAAAAAAAAAAADLIAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAAzSAAAAAAAAAAAAAAzSAAAAAAAADOIAAAAAAAAAAAAADOIAAAAAAAAM8gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwCAAAAAAAADAIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3198,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAM8gAAAAAAAA0CAAAAAAAAAAAAAA0CAAAAAAAADRIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzyAAAAAAAADPIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3200,
					1,
					"insert",
					{
						"characters": "_inte"
					},
					"BQAAAPggAAAAAAAA+SAAAAAAAAAAAAAA+SAAAAAAAAD6IAAAAAAAAAAAAAD6IAAAAAAAAPsgAAAAAAAAAAAAAPsgAAAAAAAA/CAAAAAAAAAAAAAA/CAAAAAAAAD9IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CAAAAAAAAD4IAAAAAAAAAAAAAAAmIlA"
				],
				[
					3201,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"T\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_integer_iterator\",\"range\":{\"end\":{\"character\":28,\"line\":377},\"start\":{\"character\":23,\"line\":377}}},\"label\":\"_integer_iterator\",\"kind\":6,\"sortText\":\"fffffffc\",\"filterText\":\"_integer_iterator\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1914,
							3200,
							5
						],
						"trigger": "_integer_iterator"
					},
					"AgAAAPggAAAAAAAA+CAAAAAAAAAFAAAAX2ludGX4IAAAAAAAAAkhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/SAAAAAAAAD9IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkhAAAAAAAACiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACSEAAAAAAAAJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3203,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAohAAAAAAAADCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiEAAAAAAAAKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3204,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAshAAAAAAAADCEAAAAAAAAAAAAADCEAAAAAAAAUIQAAAAAAAAAAAAAUIQAAAAAAABUhAAAAAAAAAAAAABUhAAAAAAAAHSEAAAAAAAAAAAAADCEAAAAAAAAMIQAAAAAAAAgAAAAgICAgICAgIAwhAAAAAAAAGCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACyEAAAAAAAALIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3208,
					1,
					"reindent",
					null,
					"AQAAAOAgAAAAAAAA6CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4CAAAAAAAADgIAAAAAAAAAAAAAAAgGNA"
				],
				[
					3209,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAOggAAAAAAAA6SAAAAAAAAAAAAAAFSEAAAAAAAAVIQAAAAAAAAwAAAAgICAgICAgICAgICDpIAAAAAAAAOogAAAAAAAAAAAAAOogAAAAAAAA6yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6CAAAAAAAADoIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3210,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAAOsgAAAAAAAA7CAAAAAAAAAAAAAA7CAAAAAAAADtIAAAAAAAAAAAAADtIAAAAAAAAO4gAAAAAAAAAAAAAO4gAAAAAAAA7yAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6yAAAAAAAADrIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3211,
					1,
					"insert",
					{
						"characters": " integer_"
					},
					"CQAAAO8gAAAAAAAA8CAAAAAAAAAAAAAA8CAAAAAAAADxIAAAAAAAAAAAAADxIAAAAAAAAPIgAAAAAAAAAAAAAPIgAAAAAAAA8yAAAAAAAAAAAAAA8yAAAAAAAAD0IAAAAAAAAAAAAAD0IAAAAAAAAPUgAAAAAAAAAAAAAPUgAAAAAAAA9iAAAAAAAAAAAAAA9iAAAAAAAAD3IAAAAAAAAAAAAAD3IAAAAAAAAPggAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7yAAAAAAAADvIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3212,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAPggAAAAAAAA+SAAAAAAAAAAAAAA+SAAAAAAAAD6IAAAAAAAAAAAAAD6IAAAAAAAAPsgAAAAAAAAAAAAAPsgAAAAAAAA/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CAAAAAAAAD4IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3213,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPwgAAAAAAAA/SAAAAAAAAAAAAAA/SAAAAAAAAD+IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/CAAAAAAAAD8IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3214,
					1,
					"insert",
					{
						"characters": " List::new"
					},
					"CgAAAP4gAAAAAAAA/yAAAAAAAAAAAAAA/yAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAEhAAAAAAAAAAAAAAEhAAAAAAAAAiEAAAAAAAAAAAAAAiEAAAAAAAADIQAAAAAAAAAAAAADIQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABSEAAAAAAAAAAAAABSEAAAAAAAAGIQAAAAAAAAAAAAAGIQAAAAAAAAchAAAAAAAAAAAAAAchAAAAAAAACCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/iAAAAAAAAD+IAAAAAAAAAAAAAAAAPC/"
				],
				[
					3215,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAghAAAAAAAACiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCEAAAAAAAAIIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3217,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAohAAAAAAAACyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiEAAAAAAAAKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3226,
					1,
					"reindent",
					null,
					"AQAAADchAAAAAAAAQyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANyEAAAAAAAA3IQAAAAAAAAAAAAAAeIFA"
				],
				[
					3227,
					1,
					"insert",
					{
						"characters": "integer"
					},
					"BwAAAEMhAAAAAAAARCEAAAAAAAAAAAAARCEAAAAAAABFIQAAAAAAAAAAAABFIQAAAAAAAEYhAAAAAAAAAAAAAEYhAAAAAAAARyEAAAAAAAAAAAAARyEAAAAAAABIIQAAAAAAAAAAAABIIQAAAAAAAEkhAAAAAAAAAAAAAEkhAAAAAAAASiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQyEAAAAAAABDIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3229,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"List\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"integer_list\",\"range\":{\"end\":{\"character\":19,\"line\":378},\"start\":{\"character\":12,\"line\":378}}},\"label\":\"integer_list\",\"kind\":6,\"sortText\":\"fffffff8\",\"filterText\":\"integer_list\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1936,
							3227,
							7
						],
						"trigger": "integer_list"
					},
					"AgAAAEMhAAAAAAAAQyEAAAAAAAAHAAAAaW50ZWdlckMhAAAAAAAATyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASiEAAAAAAABKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3230,
					1,
					"insert",
					{
						"characters": ".app"
					},
					"BAAAAE8hAAAAAAAAUCEAAAAAAAAAAAAAUCEAAAAAAABRIQAAAAAAAAAAAABRIQAAAAAAAFIhAAAAAAAAAAAAAFIhAAAAAAAAUyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATyEAAAAAAABPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3231,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(&mut self, T) -> &mut Self\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"append(${1:_})$0\",\"range\":{\"end\":{\"character\":28,\"line\":378},\"start\":{\"character\":25,\"line\":378}}},\"label\":\"append(…) (as Append)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Performs append\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1938,
							3230,
							4
						],
						"trigger": "append"
					},
					"AgAAAFAhAAAAAAAAUCEAAAAAAAADAAAAYXBwUCEAAAAAAABZIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUyEAAAAAAABTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3233,
					1,
					"insert",
					{
						"characters": "itnegeri"
					},
					"CQAAAFchAAAAAAAAWCEAAAAAAAAAAAAAWCEAAAAAAABYIQAAAAAAAAEAAABfWCEAAAAAAABZIQAAAAAAAAAAAABZIQAAAAAAAFohAAAAAAAAAAAAAFohAAAAAAAAWyEAAAAAAAAAAAAAWyEAAAAAAABcIQAAAAAAAAAAAABcIQAAAAAAAF0hAAAAAAAAAAAAAF0hAAAAAAAAXiEAAAAAAAAAAAAAXiEAAAAAAABfIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVyEAAAAAAABYIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3234,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFchAAAAAAAAVyEAAAAAAAAIAAAAaXRuZWdlcmk",
					"AQAAAAAAAAABAAAAXyEAAAAAAABfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3235,
					1,
					"insert",
					{
						"characters": "integetr"
					},
					"CAAAAFchAAAAAAAAWCEAAAAAAAAAAAAAWCEAAAAAAABZIQAAAAAAAAAAAABZIQAAAAAAAFohAAAAAAAAAAAAAFohAAAAAAAAWyEAAAAAAAAAAAAAWyEAAAAAAABcIQAAAAAAAAAAAABcIQAAAAAAAF0hAAAAAAAAAAAAAF0hAAAAAAAAXiEAAAAAAAAAAAAAXiEAAAAAAABfIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVyEAAAAAAABXIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3236,
					2,
					"left_delete",
					null,
					"AgAAAF4hAAAAAAAAXiEAAAAAAAABAAAAcl0hAAAAAAAAXSEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAXyEAAAAAAABfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3237,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAF0hAAAAAAAAXiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXSEAAAAAAABdIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3240,
					1,
					"insert",
					{
						"characters": "\ninteg"
					},
					"BwAAAGkhAAAAAAAAaiEAAAAAAAAAAAAAaiEAAAAAAAByIQAAAAAAAAAAAAByIQAAAAAAAHMhAAAAAAAAAAAAAHMhAAAAAAAAdCEAAAAAAAAAAAAAdCEAAAAAAAB1IQAAAAAAAAAAAAB1IQAAAAAAAHYhAAAAAAAAAAAAAHYhAAAAAAAAdyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaSEAAAAAAABpIQAAAAAAAAAAAAAAQIBA"
				],
				[
					3241,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"List\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"integer_list\",\"range\":{\"end\":{\"character\":13,\"line\":380},\"start\":{\"character\":8,\"line\":380}}},\"label\":\"integer_list\",\"kind\":6,\"sortText\":\"fffffff8\",\"filterText\":\"integer_list\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1947,
							3240,
							7
						],
						"trigger": "integer_list"
					},
					"AgAAAHIhAAAAAAAAciEAAAAAAAAFAAAAaW50ZWdyIQAAAAAAAH4hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdyEAAAAAAAB3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					3254,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAF8hAAAAAAAAYCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXyEAAAAAAABfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3287,
					1,
					"cut",
					null,
					"AQAAAKcBAAAAAAAApwEAAAAAAAAbAAAAdXNlIHN0ZDo6c3RyZWFtOjpGcm9tSXRlcjsK",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAAAA"
				],
				[
					3318,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAKUgAAAAAAAApiAAAAAAAAAAAAAApiAAAAAAAACqIAAAAAAAAAAAAACmIAAAAAAAAKYgAAAAAAAABAAAACAgICCmIAAAAAAAAK4gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApSAAAAAAAAClIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3320,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMIgAAAAAAAAwyAAAAAAAAAAAAAAwyAAAAAAAADLIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiAAAAAAAADCIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3321,
					1,
					"left_delete",
					null,
					"AQAAAMcgAAAAAAAAxyAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAyyAAAAAAAADLIAAAAAAAAAAAAAAAAPC/"
				],
				[
					3331,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHohAAAAAAAAeyEAAAAAAAAAAAAAeyEAAAAAAAB8IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeiEAAAAAAAB6IQAAAAAAAAAAAAAAAPC/"
				],
				[
					3332,
					1,
					"paste",
					null,
					"AQAAAHwhAAAAAAAAoiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfCEAAAAAAAB8IQAAAAAAAAAAAAAAAPC/"
				],
				[
					3336,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAI8hAAAAAAAAjyEAAAAAAAADAAAAaTMy",
					"AQAAAAAAAAABAAAAkiEAAAAAAACSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3337,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAAI8hAAAAAAAAkCEAAAAAAAAAAAAAkCEAAAAAAACRIQAAAAAAAAAAAACRIQAAAAAAAJIhAAAAAAAAAAAAAJIhAAAAAAAAkyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjyEAAAAAAACPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3349,
					3,
					"left_delete",
					null,
					"AwAAAMohAAAAAAAAyiEAAAAAAAABAAAAMskhAAAAAAAAySEAAAAAAAABAAAAM8ghAAAAAAAAyCEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAyyEAAAAAAADLIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3350,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAAMghAAAAAAAAySEAAAAAAAAAAAAAySEAAAAAAADKIQAAAAAAAAAAAADKIQAAAAAAAMshAAAAAAAAAAAAAMshAAAAAAAAzCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyCEAAAAAAADIIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3356,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANghAAAAAAAA2CEAAAAAAAARAAAAX2ludGVnZXJfaXRlcmF0b3I",
					"AQAAAAAAAAABAAAA6SEAAAAAAADpIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3357,
					1,
					"insert",
					{
						"characters": "_static_string"
					},
					"DgAAANghAAAAAAAA2SEAAAAAAAAAAAAA2SEAAAAAAADaIQAAAAAAAAAAAADaIQAAAAAAANshAAAAAAAAAAAAANshAAAAAAAA3CEAAAAAAAAAAAAA3CEAAAAAAADdIQAAAAAAAAAAAADdIQAAAAAAAN4hAAAAAAAAAAAAAN4hAAAAAAAA3yEAAAAAAAAAAAAA3yEAAAAAAADgIQAAAAAAAAAAAADgIQAAAAAAAOEhAAAAAAAAAAAAAOEhAAAAAAAA4iEAAAAAAAAAAAAA4iEAAAAAAADjIQAAAAAAAAAAAADjIQAAAAAAAOQhAAAAAAAAAAAAAOQhAAAAAAAA5SEAAAAAAAAAAAAA5SEAAAAAAADmIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CEAAAAAAADYIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3373,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAJAhAAAAAAAAkSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkCEAAAAAAACQIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3374,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAJEhAAAAAAAAkiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkSEAAAAAAACRIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3375,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIhAAAAAAAAkyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkiEAAAAAAACSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3382,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAMwhAAAAAAAAzSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzCEAAAAAAADMIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3383,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAM0hAAAAAAAAziEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzSEAAAAAAADNIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3384,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM4hAAAAAAAAzyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziEAAAAAAADOIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3400,
					1,
					"left_delete",
					null,
					"AQAAAJEhAAAAAAAAkSEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAkiEAAAAAAACSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3401,
					1,
					"insert",
					{
						"characters": "static"
					},
					"BgAAAJEhAAAAAAAAkiEAAAAAAAAAAAAAkiEAAAAAAACTIQAAAAAAAAAAAACTIQAAAAAAAJQhAAAAAAAAAAAAAJQhAAAAAAAAlSEAAAAAAAAAAAAAlSEAAAAAAACWIQAAAAAAAAAAAACWIQAAAAAAAJchAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkSEAAAAAAACRIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3410,
					1,
					"left_delete",
					null,
					"AQAAANIhAAAAAAAA0iEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA0yEAAAAAAADTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3411,
					1,
					"insert",
					{
						"characters": "stastic"
					},
					"BwAAANIhAAAAAAAA0yEAAAAAAAAAAAAA0yEAAAAAAADUIQAAAAAAAAAAAADUIQAAAAAAANUhAAAAAAAAAAAAANUhAAAAAAAA1iEAAAAAAAAAAAAA1iEAAAAAAADXIQAAAAAAAAAAAADXIQAAAAAAANghAAAAAAAAAAAAANghAAAAAAAA2SEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iEAAAAAAADSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3412,
					4,
					"left_delete",
					null,
					"BAAAANghAAAAAAAA2CEAAAAAAAABAAAAY9chAAAAAAAA1yEAAAAAAAABAAAAadYhAAAAAAAA1iEAAAAAAAABAAAAdNUhAAAAAAAA1SEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA2SEAAAAAAADZIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3413,
					1,
					"insert",
					{
						"characters": "tic"
					},
					"AwAAANUhAAAAAAAA1iEAAAAAAAAAAAAA1iEAAAAAAADXIQAAAAAAAAAAAADXIQAAAAAAANghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1SEAAAAAAADVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					3430,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAE0iAAAAAAAATSIAAAAAAAARAAAAX2ludGVnZXJfaXRlcmF0b3I",
					"AQAAAAAAAAABAAAAXiIAAAAAAABeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3431,
					1,
					"insert",
					{
						"characters": "_static"
					},
					"BwAAAE0iAAAAAAAATiIAAAAAAAAAAAAATiIAAAAAAABPIgAAAAAAAAAAAABPIgAAAAAAAFAiAAAAAAAAAAAAAFAiAAAAAAAAUSIAAAAAAAAAAAAAUSIAAAAAAABSIgAAAAAAAAAAAABSIgAAAAAAAFMiAAAAAAAAAAAAAFMiAAAAAAAAVCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATSIAAAAAAABNIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3432,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"T\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_static_string\",\"range\":{\"end\":{\"character\":30,\"line\":391},\"start\":{\"character\":23,\"line\":391}}},\"label\":\"_static_string\",\"kind\":6,\"sortText\":\"fffffffc\",\"filterText\":\"_static_string\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2060,
							3431,
							7
						],
						"trigger": "_static_string"
					},
					"AgAAAE0iAAAAAAAATSIAAAAAAAAHAAAAX3N0YXRpY00iAAAAAAAAWyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVCIAAAAAAABUIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3433,
					1,
					"insert",
					{
						"characters": ".char"
					},
					"BQAAAFsiAAAAAAAAXCIAAAAAAAAAAAAAXCIAAAAAAABdIgAAAAAAAAAAAABdIgAAAAAAAF4iAAAAAAAAAAAAAF4iAAAAAAAAXyIAAAAAAAAAAAAAXyIAAAAAAABgIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWyIAAAAAAABbIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3434,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFwiAAAAAAAAXCIAAAAAAAAEAAAAY2hhcg",
					"AQAAAAAAAAABAAAAYCIAAAAAAABgIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3435,
					1,
					"left_delete",
					null,
					"AQAAAFsiAAAAAAAAWyIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAXCIAAAAAAABcIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3436,
					1,
					"insert",
					{
						"characters": ".ch"
					},
					"AwAAAFsiAAAAAAAAXCIAAAAAAAAAAAAAXCIAAAAAAABdIgAAAAAAAAAAAABdIgAAAAAAAF4iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWyIAAAAAAABbIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3440,
					3,
					"left_delete",
					null,
					"AwAAAF0iAAAAAAAAXSIAAAAAAAABAAAAaFwiAAAAAAAAXCIAAAAAAAABAAAAY1siAAAAAAAAWyIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAXiIAAAAAAABeIgAAAAAAAAAAAAAAQIBA"
				],
				[
					3470,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACkIAAAAAAAAKggAAAAAAAAAAAAAKggAAAAAAAArCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQgAAAAAAAApCAAAAAAAAAAAAAAAQFBA"
				],
				[
					3471,
					1,
					"paste",
					null,
					"AQAAACsIAAAAAAAA0ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwgAAAAAAAArCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3474,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAADcIAAAAAAAANwgAAAAAAAADAAAAaTMy",
					"AQAAAAAAAAABAAAANwgAAAAAAAA3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3475,
					1,
					"insert",
					{
						"characters": "&str"
					},
					"BAAAADcIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA5CAAAAAAAAAAAAAA5CAAAAAAAADoIAAAAAAAAAAAAADoIAAAAAAAAOwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwgAAAAAAAA3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3487,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAAG4IAAAAAAAAbggAAAAAAAABAAAAKWsIAAAAAAAAawgAAAAAAAADAAAAaTMyaQgAAAAAAABpCAAAAAAAAAIAAAA6IGEIAAAAAAAAYQgAAAAAAAAIAAAAX2ludGVnZXI",
					"AQAAAAAAAAABAAAAbwgAAAAAAABvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3488,
					1,
					"insert",
					{
						"characters": "+srt"
					},
					"BAAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABjCAAAAAAAAAAAAABjCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAZQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3489,
					4,
					"left_delete",
					null,
					"BAAAAGQIAAAAAAAAZAgAAAAAAAABAAAAdGMIAAAAAAAAYwgAAAAAAAABAAAAcmIIAAAAAAAAYggAAAAAAAABAAAAc2EIAAAAAAAAYQgAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAZQgAAAAAAABlCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3490,
					1,
					"insert",
					{
						"characters": "_static_string:"
					},
					"DwAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABjCAAAAAAAAAAAAABjCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABmCAAAAAAAAAAAAABmCAAAAAAAAGcIAAAAAAAAAAAAAGcIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAGoIAAAAAAAAAAAAAGoIAAAAAAAAawgAAAAAAAAAAAAAawgAAAAAAABsCAAAAAAAAAAAAABsCAAAAAAAAG0IAAAAAAAAAAAAAG0IAAAAAAAAbggAAAAAAAAAAAAAbggAAAAAAABvCAAAAAAAAAAAAABvCAAAAAAAAHAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQgAAAAAAABhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3491,
					1,
					"insert",
					{
						"characters": " *st"
					},
					"BAAAAHAIAAAAAAAAcQgAAAAAAAAAAAAAcQgAAAAAAAByCAAAAAAAAAAAAAByCAAAAAAAAHMIAAAAAAAAAAAAAHMIAAAAAAAAdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAgAAAAAAABwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3492,
					3,
					"left_delete",
					null,
					"AwAAAHMIAAAAAAAAcwgAAAAAAAABAAAAdHIIAAAAAAAAcggAAAAAAAABAAAAc3EIAAAAAAAAcQgAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAdAgAAAAAAAB0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3493,
					1,
					"insert",
					{
						"characters": "*&str"
					},
					"BQAAAHEIAAAAAAAAcggAAAAAAAAAAAAAcggAAAAAAABzCAAAAAAAAAAAAABzCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAdQgAAAAAAAAAAAAAdQgAAAAAAAB2CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQgAAAAAAABxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3494,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHMIAAAAAAAAcwgAAAAAAAADAAAAc3RycQgAAAAAAABxCAAAAAAAAAIAAAAqJg",
					"AQAAAAAAAAABAAAAdggAAAAAAAB2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3495,
					1,
					"insert",
					{
						"characters": "&str)"
					},
					"BQAAAHEIAAAAAAAAcggAAAAAAAAAAAAAcggAAAAAAABzCAAAAAAAAAAAAABzCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAdQgAAAAAAAAAAAAAdQgAAAAAAAB2CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQgAAAAAAABxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3509,
					1,
					"insert",
					{
						"characters": "String"
					},
					"BwAAAKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACsCAAAAAAAAAMAAABJbnSsCAAAAAAAAK0IAAAAAAAAAAAAAK0IAAAAAAAArggAAAAAAAAAAAAArggAAAAAAACvCAAAAAAAAAAAAACvCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAsQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwgAAAAAAACuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3512,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAALIIAAAAAAAAsggAAAAAAAADAAAASW50",
					"AQAAAAAAAAABAAAAsggAAAAAAACyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3513,
					1,
					"insert",
					{
						"characters": "_String"
					},
					"BwAAALIIAAAAAAAAswgAAAAAAAAAAAAAswgAAAAAAAC0CAAAAAAAAAAAAAC0CAAAAAAAALUIAAAAAAAAAAAAALUIAAAAAAAAtggAAAAAAAAAAAAAtggAAAAAAAC3CAAAAAAAAAAAAAC3CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAuQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsggAAAAAAACyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3516,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAALsIAAAAAAAAuwgAAAAAAAADAAAAbmV3",
					"AQAAAAAAAAABAAAAuwgAAAAAAAC7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3517,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAALsIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAAC9CAAAAAAAAAAAAAC9CAAAAAAAAL4IAAAAAAAAAAAAAL4IAAAAAAAAvwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwgAAAAAAAC7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3520,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAMAIAAAAAAAAwAgAAAAAAAAIAAAAX2ludGVnZXI",
					"AQAAAAAAAAABAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAAPC/"
				],
				[
					3523,
					1,
					"insert",
					{
						"characters": "_stat"
					},
					"BQAAAMAIAAAAAAAAwQgAAAAAAAAAAAAAwQgAAAAAAADCCAAAAAAAAAAAAADCCAAAAAAAAMMIAAAAAAAAAAAAAMMIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADFCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAAPC/"
				],
				[
					3524,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"&str\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_static_string\",\"range\":{\"end\":{\"character\":63,\"line\":109},\"start\":{\"character\":58,\"line\":109}}},\"label\":\"_static_string\",\"kind\":6,\"sortText\":\"fffffff9\",\"filterText\":\"_static_string\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2125,
							3523,
							5
						],
						"trigger": "_static_string"
					},
					"AgAAAMAIAAAAAAAAwAgAAAAAAAAFAAAAX3N0YXTACAAAAAAAAM4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQgAAAAAAADFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3535,
					1,
					"insert",
					{
						"characters": "_str"
					},
					"BAAAAL8IAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADBCAAAAAAAAAAAAADBCAAAAAAAAMIIAAAAAAAAAAAAAMIIAAAAAAAAwwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwgAAAAAAAC/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3558,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAFsiAAAAAAAAWyIAAAAAAAADAAAAc3RyVCIAAAAAAABUIgAAAAAAAAcAAABzdGF0aWMgUSIAAAAAAABRIgAAAAAAAAMAAAA8Jic",
					"AQAAAAAAAAABAAAAXiIAAAAAAABeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3559,
					1,
					"insert",
					{
						"characters": "<String"
					},
					"BwAAAFEiAAAAAAAAUiIAAAAAAAAAAAAAUiIAAAAAAABTIgAAAAAAAAAAAABTIgAAAAAAAFQiAAAAAAAAAAAAAFQiAAAAAAAAVSIAAAAAAAAAAAAAVSIAAAAAAABWIgAAAAAAAAAAAABWIgAAAAAAAFciAAAAAAAAAAAAAFciAAAAAAAAWCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUSIAAAAAAABRIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3572,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AgAAAIwiAAAAAAAAjSIAAAAAAAAAAAAAjSIAAAAAAACNIgAAAAAAAA0AAAAgJidzdGF0aWMgc3Ry",
					"AQAAAAAAAAABAAAAjCIAAAAAAACZIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3573,
					1,
					"left_delete",
					null,
					"AQAAAIwiAAAAAAAAjCIAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAjSIAAAAAAACNIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3574,
					1,
					"insert",
					{
						"characters": " String"
					},
					"BwAAAIwiAAAAAAAAjSIAAAAAAAAAAAAAjSIAAAAAAACOIgAAAAAAAAAAAACOIgAAAAAAAI8iAAAAAAAAAAAAAI8iAAAAAAAAkCIAAAAAAAAAAAAAkCIAAAAAAACRIgAAAAAAAAAAAACRIgAAAAAAAJIiAAAAAAAAAAAAAJIiAAAAAAAAkyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCIAAAAAAACMIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3607,
					1,
					"insert",
					{
						"characters": "_string"
					},
					"CAAAAPkiAAAAAAAA+iIAAAAAAAAAAAAA+iIAAAAAAAD6IgAAAAAAAAcAAABpbnRlZ2Vy+iIAAAAAAAD7IgAAAAAAAAAAAAD7IgAAAAAAAPwiAAAAAAAAAAAAAPwiAAAAAAAA/SIAAAAAAAAAAAAA/SIAAAAAAAD+IgAAAAAAAAAAAAD+IgAAAAAAAP8iAAAAAAAAAAAAAP8iAAAAAAAAACMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+SIAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3615,
					1,
					"left_delete",
					null,
					"AQAAAJ8iAAAAAAAAnyIAAAAAAAAOAAAAX3N0YXRpY19zdHJpbmc",
					"AQAAAAAAAAABAAAAnyIAAAAAAACtIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3616,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAJ8iAAAAAAAAoCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnyIAAAAAAACfIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3617,
					1,
					"insert",
					{
						"characters": "string_iterati"
					},
					"DgAAAKAiAAAAAAAAoSIAAAAAAAAAAAAAoSIAAAAAAACiIgAAAAAAAAAAAACiIgAAAAAAAKMiAAAAAAAAAAAAAKMiAAAAAAAApCIAAAAAAAAAAAAApCIAAAAAAAClIgAAAAAAAAAAAAClIgAAAAAAAKYiAAAAAAAAAAAAAKYiAAAAAAAApyIAAAAAAAAAAAAApyIAAAAAAACoIgAAAAAAAAAAAACoIgAAAAAAAKkiAAAAAAAAAAAAAKkiAAAAAAAAqiIAAAAAAAAAAAAAqiIAAAAAAACrIgAAAAAAAAAAAACrIgAAAAAAAKwiAAAAAAAAAAAAAKwiAAAAAAAArSIAAAAAAAAAAAAArSIAAAAAAACuIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoCIAAAAAAACgIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3618,
					1,
					"left_delete",
					null,
					"AQAAAK0iAAAAAAAArSIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAriIAAAAAAACuIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3619,
					1,
					"insert",
					{
						"characters": "ro"
					},
					"AgAAAK0iAAAAAAAAriIAAAAAAAAAAAAAriIAAAAAAACvIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArSIAAAAAAACtIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3620,
					2,
					"left_delete",
					null,
					"AgAAAK4iAAAAAAAAriIAAAAAAAABAAAAb60iAAAAAAAArSIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAryIAAAAAAACvIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3621,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAK0iAAAAAAAAriIAAAAAAAAAAAAAriIAAAAAAACvIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArSIAAAAAAACtIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3626,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAAYjAAAAAAAABiMAAAAAAAAOAAAAX3N0YXRpY19zdHJpbmc",
					"AQAAAAAAAAABAAAABiMAAAAAAAAGIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3627,
					1,
					"insert",
					{
						"characters": "_string"
					},
					"BwAAAAYjAAAAAAAAByMAAAAAAAAAAAAAByMAAAAAAAAIIwAAAAAAAAAAAAAIIwAAAAAAAAkjAAAAAAAAAAAAAAkjAAAAAAAACiMAAAAAAAAAAAAACiMAAAAAAAALIwAAAAAAAAAAAAALIwAAAAAAAAwjAAAAAAAAAAAAAAwjAAAAAAAADSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABiMAAAAAAAAGIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3628,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"T\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_string_iterator\",\"range\":{\"end\":{\"character\":30,\"line\":399},\"start\":{\"character\":23,\"line\":399}}},\"label\":\"_string_iterator\",\"kind\":6,\"sortText\":\"fffffffc\",\"filterText\":\"_string_iterator\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2201,
							3627,
							7
						],
						"trigger": "_string_iterator"
					},
					"AgAAAAYjAAAAAAAABiMAAAAAAAAHAAAAX3N0cmluZwYjAAAAAAAAFiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSMAAAAAAAANIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3639,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADkjAAAAAAAAOSMAAAAAAAAHAAAAaW50ZWdlcg",
					"AQAAAAAAAAABAAAAQCMAAAAAAABAIwAAAAAAAAAAAAAAsH9A"
				],
				[
					3640,
					1,
					"insert",
					{
						"characters": "_string"
					},
					"BwAAADkjAAAAAAAAOiMAAAAAAAAAAAAAOiMAAAAAAAA7IwAAAAAAAAAAAAA7IwAAAAAAADwjAAAAAAAAAAAAADwjAAAAAAAAPSMAAAAAAAAAAAAAPSMAAAAAAAA+IwAAAAAAAAAAAAA+IwAAAAAAAD8jAAAAAAAAAAAAAD8jAAAAAAAAQCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOSMAAAAAAAA5IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3641,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"String\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"_string\",\"range\":{\"end\":{\"character\":39,\"line\":400},\"start\":{\"character\":32,\"line\":400}}},\"label\":\"_string\",\"kind\":6,\"sortText\":\"fffffff8\",\"filterText\":\"_string\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2210,
							3640,
							7
						],
						"trigger": "_string"
					},
					"AgAAADkjAAAAAAAAOSMAAAAAAAAHAAAAX3N0cmluZzkjAAAAAAAAQCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCMAAAAAAABAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3662,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									398,
									16
								],
								[
									398,
									28
								],
								"string_list",
								3074
							],
							[
								[
									400,
									12
								],
								[
									400,
									24
								],
								"string_list",
								3074
							],
							[
								[
									402,
									8
								],
								[
									402,
									20
								],
								"string_list",
								3074
							]
						]
					},
					"AwAAAFUjAAAAAAAAYCMAAAAAAAAMAAAAaW50ZWdlcl9saXN0JSMAAAAAAAAwIwAAAAAAAAwAAABpbnRlZ2VyX2xpc3TTIgAAAAAAAN4iAAAAAAAADAAAAGludGVnZXJfbGlzdA",
					"AQAAAAAAAAABAAAA1CIAAAAAAADUIgAAAAAAAAAAAAAAAPC/"
				],
				[
					3681,
					1,
					"insert",
					{
						"characters": "\n\nimpl"
					},
					"BgAAAGYjAAAAAAAAZyMAAAAAAAAAAAAAZyMAAAAAAABoIwAAAAAAAAAAAABoIwAAAAAAAGkjAAAAAAAAAAAAAGkjAAAAAAAAaiMAAAAAAAAAAAAAaiMAAAAAAABrIwAAAAAAAAAAAABrIwAAAAAAAGwjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZiMAAAAAAABmIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3687,
					1,
					"insert",
					{
						"characters": " Iter"
					},
					"BQAAAGwjAAAAAAAAbSMAAAAAAAAAAAAAbSMAAAAAAABuIwAAAAAAAAAAAABuIwAAAAAAAG8jAAAAAAAAAAAAAG8jAAAAAAAAcCMAAAAAAAAAAAAAcCMAAAAAAABxIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbCMAAAAAAABsIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3695,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Iterator\",\"additionalTextEdits\":[],\"label\":\"Iterator\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Iterator\",\"range\":{\"end\":{\"character\":9,\"line\":406},\"start\":{\"character\":5,\"line\":406}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"An interface for dealing with iterators.\\n\\nThis is the main iterator trait. For more about the concept of iterators\\ngenerally, please see the [module-level documentation]. In particular, you\\nmay want to know how to [implement `Iterator`][impl].\\n\\n[module-level documentation]: crate::iter\\n[impl]: crate::iter#implementing-iterator\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2234,
							3687,
							5
						],
						"trigger": "Iterator"
					},
					"AgAAAG0jAAAAAAAAbSMAAAAAAAAEAAAASXRlcm0jAAAAAAAAdSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSMAAAAAAABxIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3696,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAHUjAAAAAAAAdiMAAAAAAAAAAAAAdiMAAAAAAAB3IwAAAAAAAAAAAAB3IwAAAAAAAHgjAAAAAAAAAAAAAHgjAAAAAAAAeSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdSMAAAAAAAB1IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3697,
					3,
					"left_delete",
					null,
					"AwAAAHgjAAAAAAAAeCMAAAAAAAABAAAAcncjAAAAAAAAdyMAAAAAAAABAAAAb3YjAAAAAAAAdiMAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAeSMAAAAAAAB5IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3698,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAHYjAAAAAAAAdyMAAAAAAAAAAAAAdyMAAAAAAAB4IwAAAAAAAAAAAAB4IwAAAAAAAHkjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdiMAAAAAAAB2IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3699,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAHkjAAAAAAAAeiMAAAAAAAAAAAAAeiMAAAAAAAB7IwAAAAAAAAAAAAB7IwAAAAAAAHwjAAAAAAAAAAAAAHwjAAAAAAAAfSMAAAAAAAAAAAAAfSMAAAAAAAB+IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeSMAAAAAAAB5IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3700,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH4jAAAAAAAAfyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfiMAAAAAAAB+IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3701,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH8jAAAAAAAAgSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfyMAAAAAAAB/IwAAAAAAAAAAAAAAAPC/"
				],
				[
					3702,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIAjAAAAAAAAgSMAAAAAAAAAAAAAgSMAAAAAAACCIwAAAAAAAAAAAACBIwAAAAAAAIUjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgCMAAAAAAACAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3703,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAIUjAAAAAAAAhiMAAAAAAAAAAAAAhiMAAAAAAACHIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSMAAAAAAACFIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3704,
					1,
					"insert",
					{
						"characters": " fin"
					},
					"BAAAAIcjAAAAAAAAiCMAAAAAAAAAAAAAiCMAAAAAAACJIwAAAAAAAAAAAACJIwAAAAAAAIojAAAAAAAAAAAAAIojAAAAAAAAiyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhyMAAAAAAACHIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3705,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"find\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"fn find<P>(&mut self, predicate: P) -> Option<Self::Item>\\nwhere\\n        Self: Sized,\\n        P: FnMut(&Self::Item) -> bool, {\\n    $0\\n}\",\"range\":{\"end\":{\"character\":10,\"line\":407},\"start\":{\"character\":4,\"line\":407}}},\"label\":\"fn find(..)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Searches for an element of an iterator that satisfies a predicate.\\n\\n`find()` takes a closure that returns `true` or `false`. It applies\\nthis closure to each element of the iterator, and if any of them return\\n`true`, then `find()` returns [`Some(element)`]. If they all return\\n`false`, it returns [`None`].\\n\\n`find()` is short-circuiting; in other words, it will stop processing\\nas soon as the closure returns `true`.\\n\\nBecause `find()` takes a reference, and many iterators iterate over\\nreferences, this leads to a possibly confusing situation where the\\nargument is a double reference. You can see this effect in the\\nexamples below, with `&&x`.\\n\\n[`Some(element)`]: Some\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nassert_eq!(a.iter().find(|&&x| x == 2), Some(&2));\\n\\nassert_eq!(a.iter().find(|&&x| x == 5), None);\\n```\\n\\nStopping at the first `true`:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet mut iter = a.iter();\\n\\nassert_eq!(iter.find(|&&x| x == 2), Some(&2));\\n\\n// we can still use `iter`, as there are more elements.\\nassert_eq!(iter.next(), Some(&3));\\n```\\n\\nNote that `iter.find(f)` is equivalent to `iter.filter(f).next()`.\"},\"kind\":2,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2244,
							3704,
							4
						],
						"trigger": "find"
					},
					"AgAAAIUjAAAAAAAAhSMAAAAAAAAGAAAAZm4gZmluhSMAAAAAAAAdJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyMAAAAAAACLIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3718,
					1,
					"insert",
					{
						"characters": "\n\nfn"
					},
					"BwAAAB0kAAAAAAAAHiQAAAAAAAAAAAAAHiQAAAAAAAAiJAAAAAAAAAAAAAAiJAAAAAAAACMkAAAAAAAAAAAAACMkAAAAAAAAJyQAAAAAAAAAAAAAHiQAAAAAAAAeJAAAAAAAAAQAAAAgICAgIyQAAAAAAAAkJAAAAAAAAAAAAAAkJAAAAAAAACUkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHSQAAAAAAAAdJAAAAAAAAAAAAAAAAPC/"
				],
				[
					3719,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUkAAAAAAAAJiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJSQAAAAAAAAlJAAAAAAAAAAAAAAAAPC/"
				],
				[
					3812,
					2,
					"cut",
					null,
					"AgAAAB4kAAAAAAAAHiQAAAAAAAABAAAACh4kAAAAAAAAHiQAAAAAAAAIAAAAICAgIGZuIAo",
					"AQAAAAAAAAABAAAAHiQAAAAAAAAeJAAAAAAAAAAAAAAAwFZA"
				],
				[
					3819,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAA8kAAAAAAAADyQAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAHiQAAAAAAAAeJAAAAAAAAAAAAAAAAAAA"
				],
				[
					3831,
					2,
					"left_delete",
					null,
					"AgAAAGgjAAAAAAAAaCMAAAAAAACvAAAAaW1wbCBJdGVyYXRvciBmb3IgTGlzdCB7CiAgICBmbiBmaW5kPFA+KCZtdXQgc2VsZiwgcHJlZGljYXRlOiBQKSAtPiBPcHRpb248U2VsZjo6SXRlbT4KICAgIHdoZXJlCiAgICAgICAgICAgIFNlbGY6IFNpemVkLAogICAgICAgICAgICBQOiBGbk11dCgmU2VsZjo6SXRlbSkgLT4gYm9vbCwgewoKICAgIH0KfWcjAAAAAAAAZyMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAFyQAAAAAAABoIwAAAAAAAAAAAAAAAPC/"
				],
				[
					3899,
					1,
					"insert",
					{
						"characters": "\nsklef"
					},
					"BwAAANYIAAAAAAAA1wgAAAAAAAAAAAAA1wgAAAAAAADfCAAAAAAAAAAAAADfCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA4QgAAAAAAAAAAAAA4QgAAAAAAADiCAAAAAAAAAAAAADiCAAAAAAAAOMIAAAAAAAAAAAAAOMIAAAAAAAA5AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAP///////+9/"
				],
				[
					3900,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAN8IAAAAAAAA3wgAAAAAAAAFAAAAc2tsZWY",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3901,
					1,
					"insert",
					{
						"characters": "self.)"
					},
					"BgAAAN8IAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADhCAAAAAAAAAAAAADhCAAAAAAAAOIIAAAAAAAAAAAAAOIIAAAAAAAA4wgAAAAAAAAAAAAA4wgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOUIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wgAAAAAAADfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3902,
					1,
					"left_delete",
					null,
					"AQAAAOQIAAAAAAAA5AgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5QgAAAAAAADlCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3903,
					1,
					"insert",
					{
						"characters": "_list.pu"
					},
					"CAAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA5QgAAAAAAADmCAAAAAAAAAAAAADmCAAAAAAAAOcIAAAAAAAAAAAAAOcIAAAAAAAA6AgAAAAAAAAAAAAA6AgAAAAAAADpCAAAAAAAAAAAAADpCAAAAAAAAOoIAAAAAAAAAAAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3904,
					2,
					"left_delete",
					null,
					"AgAAAOsIAAAAAAAA6wgAAAAAAAABAAAAdeoIAAAAAAAA6ggAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3905,
					1,
					"insert",
					{
						"characters": "inser"
					},
					"BQAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAO0IAAAAAAAAAAAAAO0IAAAAAAAA7ggAAAAAAAAAAAAA7ggAAAAAAADvCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6ggAAAAAAADqCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3906,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(&mut self, usize, T)\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"insert(${1:index}, ${2:value})$0\",\"range\":{\"end\":{\"character\":24,\"line\":110},\"start\":{\"character\":19,\"line\":110}}},\"label\":\"insert(…)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Inserts an element at `index` within the `VecDeque`, shifting all elements with indices\\ngreater than or equal to `index` towards the back.\\n\\nElement at index 0 is the front of the queue.\\n\\n# Panics\\n\\nPanics if `index` is greater than `VecDeque`'s length\\n\\n# Examples\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet mut vec_deque = VecDeque::new();\\nvec_deque.push_back('a');\\nvec_deque.push_back('b');\\nvec_deque.push_back('c');\\nassert_eq!(vec_deque, &['a', 'b', 'c']);\\n\\nvec_deque.insert(1, 'd');\\nassert_eq!(vec_deque, &['a', 'd', 'b', 'c']);\\n```\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"insert\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2294,
							3905,
							5
						],
						"trigger": "insert"
					},
					"AgAAAOoIAAAAAAAA6ggAAAAAAAAFAAAAaW5zZXLqCAAAAAAAAP4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wgAAAAAAADvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					3908,
					1,
					"cut",
					null,
					"AQAAAPEIAAAAAAAA8QgAAAAAAAAFAAAAaW5kZXg",
					"AQAAAAAAAAABAAAA8QgAAAAAAAD2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					3911,
					1,
					"cut",
					null,
					"AQAAANcIAAAAAAAA1wgAAAAAAAAjAAAAICAgICAgICBzZWxmLl9saXN0Lmluc2VydCgsIHZhbHVlKQo",
					"AQAAAAAAAAABAAAA8QgAAAAAAADxCAAAAAAAAAAAAAAAIHVA"
				],
				[
					3938,
					1,
					"cut",
					null,
					"AQAAAFACAAAAAAAAUAIAAAAAAACeAAAALy8vIGFwcGVuZCBmdW5jdGlvbiBmb3IgTGlzdAovLy8gY2FuIGFwcGVuZCBhbnkgZGF0YSB0eXBlCnB1YiB0cmFpdCBBcHBlbmQ8VD46IFNpemVkIHsKICAgIC8vLyBQZXJmb3JtcyBhcHBlbmQKICAgIGZuIGFwcGVuZCgmbXV0IHNlbGYsIF86IFQpIC0+ICZtdXQgU2VsZjsKfQo",
					"AQAAAAAAAAABAAAA7gIAAAAAAABQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					3946,
					1,
					"cut",
					null,
					"AQAAAIgFAAAAAAAAiAUAAAAAAACSBwAALy8vIGlubGluZSBhcHBlbmQgZm9yIGludGVnZXIKLy8vIGV4YW1wbGUKLy8vCi8vLyBsZXQgbXV0IG9uZV9lbGVtID0gTGlzdDo6bmV3KCk7Ci8vLyBvbmVfZWxlbQovLy8gICAgIC5hcHBlbmRfaW50KDEyMykKLy8vICAgICAuYXBwZW5kX2ludCgxMjMpCi8vLyAgICAgLmFwcGVuZF9pbnQoMTIzKQovLy8gICAgIC5hcHBlbmRfaW50KDEyMykKLy8vICAgICAuYXBwZW5kX2ludCgxMjMpCi8vLyAgICAgLmFwcGVuZF9pbnQoMTIzKQovLy8gICAgIC5hcHBlbmRfaW50KDEyMyk7Ci8vLyBwcmludGxuISgie30iLCBvbmVfZWxlbSk7Ci8vLwovLy8gWzEyMywgMTIzLCAxMjMsIDEyMywgMTIzLCAxMjMsIDEyM10KLy8vCmltcGwgQXBwZW5kPGkzMj4gZm9yIExpc3QgewogICAgZm4gYXBwZW5kKCZtdXQgc2VsZiwgX2ludGVnZXI6IGkzMikgLT4gJm11dCBTZWxmIHsKICAgICAgICBzZWxmLl9saXN0LnB1c2hfYmFjayhPYmplY3Q6OkludChJbnQ6Om5ldyhfaW50ZWdlcikpKTsKICAgICAgICBzZWxmCiAgICB9Cn0KCmltcGwgQXBwZW5kPCZzdHI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZCgmbXV0IHNlbGYsIF9zdGF0aWNfc3RyaW5nOiAmc3RyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9iYWNrKE9iamVjdDo6U3RyaW5nKF9TdHJpbmc6OmZyb21fc3RyKF9zdGF0aWNfc3RyaW5nKSkpOwogICAgICAgIHNlbGYKICAgIH0KfQoKCmltcGwgQXBwZW5kPGNoYXI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZCgmbXV0IHNlbGYsIF9jaGFyOiBjaGFyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9iYWNrKE9iamVjdDo6Q2hhcihDaGFyOjpuZXcoX2NoYXIpKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgppbXBsIEFwcGVuZDxmMzI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZCgmbXV0IHNlbGYsIF9mbG9hdDogZjMyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9iYWNrKE9iamVjdDo6RmxvYXQoRmxvYXQ6Om5ldyhfZmxvYXQpKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgoKaW1wbCBBcHBlbmQ8U3RyaW5nPiBmb3IgTGlzdCB7CiAgICBmbiBhcHBlbmQoJm11dCBzZWxmLCBzdHJpbmc6IFN0cmluZykgLT4gJm11dCBTZWxmIHsKICAgICAgICBzZWxmLl9saXN0LnB1c2hfYmFjayhPYmplY3Q6OlN0cmluZyhfU3RyaW5nOjpmcm9tX3N0cmluZyhzdHJpbmcpKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgppbXBsIEFwcGVuZDxfU3RyaW5nPiBmb3IgTGlzdCB7CiAgICBmbiBhcHBlbmQoJm11dCBzZWxmLCBfc3RyaW5nOiBfU3RyaW5nKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9iYWNrKE9iamVjdDo6U3RyaW5nKF9zdHJpbmcpKTsKICAgICAgICBzZWxmCiAgICB9Cn0KCmltcGwgQXBwZW5kPGJvb2w+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZCgmbXV0IHNlbGYsIF9ib29sOiBib29sKSAtPiZtdXQgU2VsZiB7CiAgICAgICAgc2VsZi5fbGlzdC5wdXNoX2JhY2soT2JqZWN0OjpCb29sKEJvb2w6Om5ldyhfYm9vbCkpKTsKICAgICAgICBzZWxmCiAgICB9Cn0KCgppbXBsIEFwcGVuZDxCb29sPiBmb3IgTGlzdCB7CgogICAgI1tkb2MgPSBpbmNsdWRlX3N0ciEoIi4uL2RvY3MvcHl0aG9uX2xpc3QvYXBwZW5kX3Bib29sLm1kIildCiAgICBmbiBhcHBlbmQoJm11dCBzZWxmLCBfYm9vbDogQm9vbCkgLT4mbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9iYWNrKE9iamVjdDo6Qm9vbChfYm9vbCkpOwogICAgICAgIHNlbGYKICAgIH0KfQoKaW1wbCBBcHBlbmQ8TGlzdD4gZm9yIExpc3QgewogICAgZm4gYXBwZW5kKCZtdXQgc2VsZiwgX2xpc3Q6IExpc3QpIC0+ICZtdXQgU2VsZiB7CiAgICAgICAgc2VsZi5fbGlzdC5wdXNoX2JhY2soT2JqZWN0OjpMaXN0KF9saXN0KSk7CiAgICAgICAgc2VsZgogICAgfQp9",
					"AQAAAAAAAAABAAAAiAUAAAAAAAAaDQAAAAAAAAAAAAAAAPC/"
				],
				[
					3978,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANYZAAAAAAAA1hkAAAAAAAAGAAAAYXBwZW5k",
					"AQAAAAAAAAABAAAA3BkAAAAAAADcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					3979,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAANYZAAAAAAAA1xkAAAAAAAAAAAAA1xkAAAAAAADYGQAAAAAAAAAAAADYGQAAAAAAANkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hkAAAAAAADWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4006,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAANgZAAAAAAAA2RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BkAAAAAAADYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4009,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAANkZAAAAAAAA2RkAAAAAAAABAAAAcNgZAAAAAAAA2BkAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4010,
					2,
					"left_delete",
					null,
					"AgAAANcZAAAAAAAA1xkAAAAAAAABAAAAcNYZAAAAAAAA1hkAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA2BkAAAAAAADYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4011,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAANYZAAAAAAAA1xkAAAAAAAAAAAAA1xkAAAAAAADYGQAAAAAAAAAAAADYGQAAAAAAANkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hkAAAAAAADWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4013,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, T) -> &mut Self\",\"additionalTextEdits\":[],\"label\":\"append_front (as AppendFront)\",\"deprecated\":false,\"textEdit\":{\"newText\":\"append_front\",\"range\":{\"end\":{\"character\":28,\"line\":299},\"start\":{\"character\":25,\"line\":299}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"performs the append front\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append_front\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2335,
							4011,
							3
						],
						"trigger": "append_front"
					},
					"AgAAANYZAAAAAAAA1hkAAAAAAAADAAAAYXBw1hkAAAAAAADiGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RkAAAAAAADZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4014,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANYZAAAAAAAA1hkAAAAAAAAMAAAAYXBwZW5kX2Zyb250",
					"AQAAAAAAAAABAAAA4hkAAAAAAADiGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4015,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAANYZAAAAAAAA1xkAAAAAAAAAAAAA1xkAAAAAAADYGQAAAAAAAAAAAADYGQAAAAAAANkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hkAAAAAAADWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4016,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, &mut VecDeque<T, A>)\",\"additionalTextEdits\":[],\"label\":\"append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"append\",\"range\":{\"end\":{\"character\":28,\"line\":299},\"start\":{\"character\":25,\"line\":299}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Moves all the elements of `other` into `self`, leaving `other` empty.\\n\\n# Panics\\n\\nPanics if the new number of elements in self overflows a `usize`.\\n\\n# Examples\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet mut buf: VecDeque<_> = [1, 2].into();\\nlet mut buf2: VecDeque<_> = [3, 4].into();\\nbuf.append(&mut buf2);\\nassert_eq!(buf, [1, 2, 3, 4]);\\nassert_eq!(buf2, []);\\n```\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2338,
							4015,
							3
						],
						"trigger": "append"
					},
					"AgAAANYZAAAAAAAA1hkAAAAAAAADAAAAYXBw1hkAAAAAAADcGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RkAAAAAAADZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					4059,
					1,
					"insert",
					{
						"characters": "/.."
					},
					"AwAAAPYKAAAAAAAA9woAAAAAAAAAAAAA9woAAAAAAAD4CgAAAAAAAAAAAAD4CgAAAAAAAPkKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9goAAAAAAAD2CgAAAAAAAAAAAAAAAPC/"
				],
				[
					4063,
					1,
					"insert",
					{
						"characters": "/.."
					},
					"AwAAAOUVAAAAAAAA5hUAAAAAAAAAAAAA5hUAAAAAAADnFQAAAAAAAAAAAADnFQAAAAAAAOgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RUAAAAAAADlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					4117,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4118,
					1,
					"insert",
					{
						"characters": " super::"
					},
					"CAAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwIAAAAAAAArAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4119,
					1,
					"insert",
					{
						"characters": "ap"
					},
					"AgAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4120,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait\",\"range\":{\"end\":{\"character\":13,\"line\":35},\"start\":{\"character\":11,\"line\":35}}},\"additionalTextEdits\":[],\"label\":\"append_trait\",\"deprecated\":false,\"filterText\":\"append_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2377,
							4119,
							2
						],
						"trigger": "append_trait"
					},
					"AgAAADMCAAAAAAAAMwIAAAAAAAACAAAAYXAzAgAAAAAAAD8CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					4121,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAD8CAAAAAAAAQAIAAAAAAAAAAAAAQAIAAAAAAABBAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwIAAAAAAAA/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					4122,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Append\",\"additionalTextEdits\":[],\"label\":\"Append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Append\",\"range\":{\"end\":{\"character\":25,\"line\":35},\"start\":{\"character\":25,\"line\":35}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"append function for List\\ncan append any data type\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							2379,
							4121,
							2
						],
						"trigger": "Append"
					},
					"AQAAAEECAAAAAAAARwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4123,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEcCAAAAAAAASAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwIAAAAAAABHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4149,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									300,
									25
								],
								[
									300,
									31
								],
								"append_back",
								3273
							],
							[
								[
									313,
									24
								],
								[
									313,
									30
								],
								"append_back",
								3273
							]
						]
					},
					"AgAAACcbAAAAAAAAMhsAAAAAAAAGAAAAYXBwZW5k/RkAAAAAAAAIGgAAAAAAAAYAAABhcHBlbmQ",
					"AQAAAAAAAAABAAAAXhsAAAAAAABeGwAAAAAAAAAAAAAAAPC/"
				],
				[
					4164,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
					},
					"AQAAACgCAAAAAAAAKAIAAAAAAAAgAAAAdXNlIHN1cGVyOjphcHBlbmRfdHJhaXQ6OkFwcGVuZDs",
					"AQAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4165,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAACgCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAAAqAgAAAAAAAAAAAAAqAgAAAAAAACsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAIAAAAAAAAoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4166,
					1,
					"insert",
					{
						"characters": " user"
					},
					"BQAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwIAAAAAAAArAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4167,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACwCAAAAAAAALAIAAAAAAAAEAAAAdXNlcg",
					"AQAAAAAAAAABAAAAMAIAAAAAAAAwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4168,
					1,
					"insert",
					{
						"characters": "super::"
					},
					"BwAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAuAgAAAAAAAAAAAAAuAgAAAAAAAC8CAAAAAAAAAAAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAIAAAAAAAAsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4169,
					1,
					"insert",
					{
						"characters": "aa"
					},
					"AgAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4170,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
					},
					"AQAAACgCAAAAAAAAKAIAAAAAAAANAAAAdXNlIHN1cGVyOjphYQ",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					4188,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAACgCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAAAqAgAAAAAAAAAAAAAqAgAAAAAAACsCAAAAAAAAAAAAACsCAAAAAAAALAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAIAAAAAAAAoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4189,
					1,
					"insert",
					{
						"characters": " suoper"
					},
					"BwAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAuAgAAAAAAAAAAAAAuAgAAAAAAAC8CAAAAAAAAAAAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAIAAAAAAAAsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4190,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAC0CAAAAAAAALQIAAAAAAAAGAAAAc3VvcGVy",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4191,
					1,
					"insert",
					{
						"characters": "super"
					},
					"BQAAAC0CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAADACAAAAAAAAAAAAADACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAyAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQIAAAAAAAAtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4192,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"super::\",\"range\":{\"end\":{\"character\":9,\"line\":36},\"start\":{\"character\":4,\"line\":36}}},\"additionalTextEdits\":[],\"label\":\"super::\",\"deprecated\":false,\"filterText\":\"super::\",\"kind\":14,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							2403,
							4191,
							5
						],
						"trigger": "super::"
					},
					"AgAAAC0CAAAAAAAALQIAAAAAAAAFAAAAc3VwZXItAgAAAAAAADQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4196,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait\",\"range\":{\"end\":{\"character\":11,\"line\":36},\"start\":{\"character\":11,\"line\":36}}},\"additionalTextEdits\":[],\"label\":\"append_trait\",\"deprecated\":false,\"filterText\":\"append_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							2404,
							4192,
							2
						],
						"trigger": "append_trait"
					},
					"AQAAADQCAAAAAAAAQAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAIAAAAAAAA0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					4197,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAIAAAAAAABAAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4198,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Append\",\"additionalTextEdits\":[],\"label\":\"Append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Append\",\"range\":{\"end\":{\"character\":25,\"line\":36},\"start\":{\"character\":25,\"line\":36}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"append function for List\\ncan append any data type\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							2406,
							4197,
							2
						],
						"trigger": "Append"
					},
					"AQAAAEICAAAAAAAASAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgIAAAAAAABCAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4199,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4238,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADQCAAAAAAAANAIAAAAAAAAMAAAAYXBwZW5kX3RyYWl0",
					"AQAAAAAAAAABAAAAQAIAAAAAAABAAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4239,
					2,
					"left_delete",
					null,
					"AgAAADMCAAAAAAAAMwIAAAAAAAABAAAAOjICAAAAAAAAMgIAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAANAIAAAAAAAA0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					4254,
					1,
					"cut",
					null,
					"AQAAAKAFAAAAAAAAoAUAAAAAAAC7BgAACmltcGwgQXBwZW5kRnJvbnQ8aTMyPiBmb3IgTGlzdCB7CiAgICBmbiBhcHBlbmRfZnJvbnQoJm11dCBzZWxmLCBfaW50ZWdlcjogaTMyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9mcm9udChPYmplY3Q6OkludChJbnQ6Om5ldyhfaW50ZWdlcikpKTsKICAgICAgICBzZWxmCiAgICB9Cn0KCgppbXBsIEFwcGVuZEZyb250PCZzdHI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZF9mcm9udCgKICAgICAgICAmbXV0IHNlbGYsCiAgICAgICAgX3N0YXRpY19zdHJpbmc6ICZzdHIKICAgICkgLT4gJm11dCBTZWxmIHsKICAgICAgICBzZWxmLl9saXN0LnB1c2hfZnJvbnQoT2JqZWN0OjpTdHJpbmcoX1N0cmluZzo6ZnJvbV9zdHIoX3N0YXRpY19zdHJpbmcpKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgppbXBsIEFwcGVuZEZyb250PGNoYXI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZF9mcm9udCgmbXV0IHNlbGYsIF9jaGFyOiBjaGFyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9mcm9udChPYmplY3Q6OkNoYXIoQ2hhcjo6bmV3KF9jaGFyKSkpOwogICAgICAgIHNlbGYKICAgIH0KfQoKaW1wbCBBcHBlbmRGcm9udDxmMzI+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZF9mcm9udCgmbXV0IHNlbGYsIF9mbG9hdDogZjMyKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9mcm9udChPYmplY3Q6OkZsb2F0KEZsb2F0OjpuZXcoX2Zsb2F0KSkpOwogICAgICAgIHNlbGYKICAgIH0KfQoKCmltcGwgQXBwZW5kRnJvbnQ8U3RyaW5nPiBmb3IgTGlzdCB7CiAgICBmbiBhcHBlbmRfZnJvbnQoJm11dCBzZWxmLCBzdHJpbmc6IFN0cmluZykgLT4gJm11dCBTZWxmIHsKICAgICAgICBzZWxmLl9saXN0LnB1c2hfZnJvbnQoT2JqZWN0OjpTdHJpbmcoX1N0cmluZzo6ZnJvbV9zdHJpbmcoc3RyaW5nKSkpOwogICAgICAgIHNlbGYKICAgIH0KfQoKaW1wbCBBcHBlbmRGcm9udDxfU3RyaW5nPiBmb3IgTGlzdCB7CiAgICBmbiBhcHBlbmRfZnJvbnQoJm11dCBzZWxmLCBfc3RyaW5nOiBfU3RyaW5nKSAtPiAmbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9mcm9udChPYmplY3Q6OlN0cmluZyhfc3RyaW5nKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgppbXBsIEFwcGVuZEZyb250PGJvb2w+IGZvciBMaXN0IHsKICAgIGZuIGFwcGVuZF9mcm9udCgmbXV0IHNlbGYsIF9ib29sOiBib29sKSAtPiZtdXQgU2VsZiB7CiAgICAgICAgc2VsZi5fbGlzdC5wdXNoX2Zyb250KE9iamVjdDo6Qm9vbChCb29sOjpuZXcoX2Jvb2wpKSk7CiAgICAgICAgc2VsZgogICAgfQp9CgoKaW1wbCBBcHBlbmRGcm9udDxCb29sPiBmb3IgTGlzdCB7CgogICAgI1tkb2MgPSBpbmNsdWRlX3N0ciEoIi4uLy4uL2RvY3MvcHl0aG9uX2xpc3QvYXBwZW5kX3Bib29sLm1kIildCiAgICBmbiBhcHBlbmRfZnJvbnQoJm11dCBzZWxmLCBfYm9vbDogQm9vbCkgLT4mbXV0IFNlbGYgewogICAgICAgIHNlbGYuX2xpc3QucHVzaF9mcm9udChPYmplY3Q6OkJvb2woX2Jvb2wpKTsKICAgICAgICBzZWxmCiAgICB9Cn0KCmltcGwgQXBwZW5kRnJvbnQ8TGlzdD4gZm9yIExpc3QgewogICAgZm4gYXBwZW5kX2Zyb250KCZtdXQgc2VsZiwgX2xpc3Q6IExpc3QpIC0+ICZtdXQgU2VsZiB7CiAgICAgICAgc2VsZi5fbGlzdC5wdXNoX2Zyb250KE9iamVjdDo6TGlzdChfbGlzdCkpOwogICAgICAgIHNlbGYKICAgIH0KfQ",
					"AQAAAAAAAAABAAAAoAUAAAAAAABbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					4262,
					1,
					"cut",
					null,
					"AQAAAGUCAAAAAAAAZQIAAAAAAAC7AAAALy8vIGFwcGVuZHMgdG8gZnJvbnQgb2YgdGhlIGxpc3QKLy8vIG1lYW5pbmc6IGxpc3QuaW5zZXJ0KG8sIGl0ZW0pCnB1YiB0cmFpdCBBcHBlbmRGcm9udDxUPjogU2l6ZWQgewogICAgLy8vIHBlcmZvcm1zIHRoZSBhcHBlbmQgZnJvbnQKICAgIGZuIGFwcGVuZF9mcm9udCgmbXV0IHNlbGYsIF86IFQpIC0+ICZtdXQgU2VsZjsKfQ",
					"AQAAAAAAAAABAAAAIAMAAAAAAABlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					4271,
					4,
					"left_delete",
					null,
					"BAAAAOUEAAAAAAAA5QQAAAAAAAABAAAACuQEAAAAAAAA5AQAAAAAAAABAAAACuMEAAAAAAAA4wQAAAAAAAABAAAACuIEAAAAAAAA4gQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5gQAAAAAAADmBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/list/append_front.rs",
			"settings":
			{
				"buffer_size": 2043,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAvQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAvQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACpA"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "src/list/append.rs",
			"settings":
			{
				"buffer_size": 2282,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAKIAAAAAAAAANAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAA0AAAAAAAAADQAAAAAAAAAEAAAAQ2hhcg",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "List"
					},
					"BAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AQAAABMAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAAAA"
				],
				[
					59,
					1,
					"cut",
					null,
					"AQAAABMAAAAAAAAAEwAAAAAAAAAUAAAAdXNlIGNyYXRlOjpfT2JqZWN0Owo",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "/.."
					},
					"AwAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgcAAAAAAAB2BwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
					},
					"AQAAAAIAAAAAAAAAAgAAAAAAAAAQAAAAdXNlIGNyYXRlOjpMaXN0Ow",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " super::"
					},
					"CAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"list\",\"additionalTextEdits\":[],\"label\":\"list\",\"deprecated\":false,\"textEdit\":{\"newText\":\"list\",\"range\":{\"end\":{\"character\":12,\"line\":10},\"start\":{\"character\":11,\"line\":10}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"NOT VISIBLE TO THE docs.rs\\nthis is only for lib.rs\\nit wasnt visible because this module somehow was private\\nnow its visible\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							50,
							128,
							1
						],
						"trigger": "list"
					},
					"AgAAAHoAAAAAAAAAegAAAAAAAAABAAAAbHoAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"List\",\"additionalTextEdits\":[],\"label\":\"List\",\"deprecated\":false,\"textEdit\":{\"newText\":\"List\",\"range\":{\"end\":{\"character\":17,\"line\":10},\"start\":{\"character\":17,\"line\":10}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"the main component\\n\\ncontens structure of good docs\\n[short sentence explaining what it is]\\n\\n[more detailed explanation]\\n\\n[at least one code example that users can copy/paste to try it]\\n\\n[even more advanced explanations if necessary]\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							52,
							130,
							2
						],
						"trigger": "List"
					},
					"AQAAAIAAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					7,
					"delete_word",
					{
						"forward": false
					},
					"BwAAAIQAAAAAAAAAhAAAAAAAAAABAAAAO4AAAAAAAAAAgAAAAAAAAAAEAAAATGlzdH4AAAAAAAAAfgAAAAAAAAACAAAAOjp6AAAAAAAAAHoAAAAAAAAABAAAAGxpc3R4AAAAAAAAAHgAAAAAAAAAAgAAADo6cwAAAAAAAABzAAAAAAAAAAUAAABzdXBlcm8AAAAAAAAAbwAAAAAAAAAEAAAAdXNlIA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " create::"
					},
					"CQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHsAAAAAAAAAewAAAAAAAAAEAAAAbGlzdA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "List;"
					},
					"BQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAH4AAAAAAAAAfgAAAAAAAAABAAAAO3oAAAAAAAAAegAAAAAAAAAEAAAATGlzdHgAAAAAAAAAeAAAAAAAAAACAAAAOjo",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "su"
					},
					"AgAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHMAAAAAAAAAcwAAAAAAAAAHAAAAY3JhdGVzdQ",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "super"
					},
					"BQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgAAAAAAAAAeQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAAHgAAAAAAAAAeAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"list\",\"additionalTextEdits\":[],\"label\":\"list\",\"deprecated\":false,\"textEdit\":{\"newText\":\"list\",\"range\":{\"end\":{\"character\":11,\"line\":10},\"start\":{\"character\":11,\"line\":10}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"NOT VISIBLE TO THE docs.rs\\nthis is only for lib.rs\\nit wasnt visible because this module somehow was private\\nnow its visible\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							75,
							180,
							2
						],
						"trigger": "list"
					},
					"AQAAAHoAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "::List"
					},
					"BgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAAIAAAAAAAAAAgAAAAAAAAAAEAAAATGlzdH4AAAAAAAAAfgAAAAAAAAACAAAAOjp6AAAAAAAAAHoAAAAAAAAABAAAAGxpc3R4AAAAAAAAAHgAAAAAAAAAAgAAADo6",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "::list::Li"
					},
					"CgAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "st;"
					},
					"AwAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									16,
									7
								],
								[
									16,
									13
								],
								"append_back",
								111
							],
							[
								[
									37,
									7
								],
								[
									37,
									13
								],
								"append_back",
								111
							],
							[
								[
									44,
									7
								],
								[
									44,
									13
								],
								"append_back",
								111
							],
							[
								[
									52,
									7
								],
								[
									52,
									13
								],
								"append_back",
								111
							],
							[
								[
									59,
									7
								],
								[
									59,
									13
								],
								"append_back",
								111
							],
							[
								[
									67,
									7
								],
								[
									67,
									13
								],
								"append_back",
								111
							],
							[
								[
									74,
									7
								],
								[
									74,
									13
								],
								"append_back",
								111
							],
							[
								[
									81,
									7
								],
								[
									81,
									13
								],
								"append_back",
								111
							],
							[
								[
									91,
									7
								],
								[
									91,
									13
								],
								"append_back",
								111
							],
							[
								[
									98,
									7
								],
								[
									98,
									13
								],
								"append_back",
								111
							]
						]
					},
					"CgAAAEcIAAAAAAAAUggAAAAAAAAGAAAAYXBwZW5krQcAAAAAAAC4BwAAAAAAAAYAAABhcHBlbmTCBgAAAAAAAM0GAAAAAAAABgAAAGFwcGVuZB4GAAAAAAAAKQYAAAAAAAAGAAAAYXBwZW5kZAUAAAAAAABvBQAAAAAAAAYAAABhcHBlbmS4BAAAAAAAAMMEAAAAAAAABgAAAGFwcGVuZBMEAAAAAAAAHgQAAAAAAAAGAAAAYXBwZW5kUAMAAAAAAABbAwAAAAAAAAYAAABhcHBlbmSnAgAAAAAAALICAAAAAAAABgAAAGFwcGVuZP0AAAAAAAAACAEAAAAAAAAGAAAAYXBwZW5k",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					7,
					"delete_word",
					{
						"forward": false
					},
					"BwAAAIQAAAAAAAAAhAAAAAAAAAABAAAAO4AAAAAAAAAAgAAAAAAAAAAEAAAATGlzdH4AAAAAAAAAfgAAAAAAAAACAAAAOjp6AAAAAAAAAHoAAAAAAAAABAAAAGxpc3R4AAAAAAAAAHgAAAAAAAAAAgAAADo6cwAAAAAAAABzAAAAAAAAAAUAAABzdXBlcm8AAAAAAAAAbwAAAAAAAAAEAAAAdXNlIA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHMAAAAAAAAAcwAAAAAAAAACAAAAbGlvAAAAAAAAAG8AAAAAAAAABAAAAG1vZCA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHMAAAAAAAAAcwAAAAAAAAACAAAAbGlvAAAAAAAAAG8AAAAAAAAABAAAAG1vZCA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " su"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"super::\",\"range\":{\"end\":{\"character\":6,\"line\":10},\"start\":{\"character\":4,\"line\":10}}},\"additionalTextEdits\":[],\"label\":\"super::\",\"deprecated\":false,\"filterText\":\"super::\",\"kind\":14,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							102,
							238,
							3
						],
						"trigger": "super::"
					},
					"AgAAAHMAAAAAAAAAcwAAAAAAAAACAAAAc3VzAAAAAAAAAHoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"list\",\"additionalTextEdits\":[],\"label\":\"list\",\"deprecated\":false,\"textEdit\":{\"newText\":\"list\",\"range\":{\"end\":{\"character\":11,\"line\":10},\"start\":{\"character\":11,\"line\":10}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"NOT VISIBLE TO THE docs.rs\\nthis is only for lib.rs\\nit wasnt visible because this module somehow was private\\nnow its visible\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							103,
							239,
							2
						],
						"trigger": "list"
					},
					"AQAAAHoAAAAAAAAAfgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": "::Li"
					},
					"BAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"List\",\"additionalTextEdits\":[],\"label\":\"List\",\"deprecated\":false,\"textEdit\":{\"newText\":\"List\",\"range\":{\"end\":{\"character\":19,\"line\":10},\"start\":{\"character\":17,\"line\":10}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"the main component\\n\\ncontens structure of good docs\\n[short sentence explaining what it is]\\n\\n[more detailed explanation]\\n\\n[at least one code example that users can copy/paste to try it]\\n\\n[even more advanced explanations if necessary]\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							105,
							243,
							4
						],
						"trigger": "List"
					},
					"AgAAAIAAAAAAAAAAgAAAAAAAAAACAAAATGmAAAAAAAAAAIQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					3,
					"delete_word",
					{
						"forward": true
					},
					"AwAAAHMAAAAAAAAAcwAAAAAAAAAFAAAAc3VwZXJzAAAAAAAAAHMAAAAAAAAAAgAAADo6cwAAAAAAAABzAAAAAAAAAAQAAABsaXN0",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "cr"
					},
					"AgAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"crate::\",\"range\":{\"end\":{\"character\":6,\"line\":10},\"start\":{\"character\":4,\"line\":10}}},\"additionalTextEdits\":[],\"label\":\"crate::\",\"deprecated\":false,\"filterText\":\"crate::\",\"kind\":14,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							117,
							265,
							2
						],
						"trigger": "crate::"
					},
					"AgAAAHMAAAAAAAAAcwAAAAAAAAACAAAAY3JzAAAAAAAAAHoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					2,
					"right_delete",
					null,
					"AgAAAHoAAAAAAAAAegAAAAAAAAABAAAAOnoAAAAAAAAAegAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAA4GFA"
				],
				[
					270,
					1,
					"swap_line_up",
					null,
					"AgAAAG8AAAAAAAAAbwAAAAAAAAARAAAAdXNlIGNyYXRlOjpMaXN0OwpuAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAHkAAAAAAAAAeQAAAAAAAAAEAAAATGlzdHcAAAAAAAAAdwAAAAAAAAACAAAAOjpyAAAAAAAAAHIAAAAAAAAABQAAAGNyYXRl",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"left_delete",
					null,
					"AQAAAHIAAAAAAAAAcgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"left_delete",
					null,
					"AQAAAHIAAAAAAAAAcgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "super::list"
					},
					"CwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"list\",\"additionalTextEdits\":[],\"label\":\"list\",\"deprecated\":false,\"textEdit\":{\"newText\":\"list\",\"range\":{\"end\":{\"character\":15,\"line\":9},\"start\":{\"character\":11,\"line\":9}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"NOT VISIBLE TO THE docs.rs\\nthis is only for lib.rs\\nit wasnt visible because this module somehow was private\\nnow its visible\"},\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							132,
							288,
							11
						],
						"trigger": "list"
					},
					"AgAAAHkAAAAAAAAAeQAAAAAAAAAEAAAAbGlzdHkAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAH0AAAAAAAAAfQAAAAAAAAACAAAAOjp5AAAAAAAAAHkAAAAAAAAABAAAAGxpc3Q",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "List"
					},
					"BAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQAAAAAAAAB5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/lib.rs",
			"settings":
			{
				"buffer_size": 578,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAACUCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAnAgAAAAAAAAAAAAAnAgAAAAAAACgCAAAAAAAAAAAAACgCAAAAAAAAKQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQIAAAAAAAAlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAACkCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACwCAAAAAAAAAAAAACwCAAAAAAAALQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQIAAAAAAAApAgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAAC0CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAvAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQIAAAAAAAAtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAC4CAAAAAAAALgIAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAALwIAAAAAAAAvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "list::a"
					},
					"BwAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Append\",\"additionalTextEdits\":[],\"label\":\"Append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Append\",\"range\":{\"end\":{\"character\":15,\"line\":33},\"start\":{\"character\":14,\"line\":33}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"append function for List\\ncan append any data type\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							5,
							9,
							7
						],
						"trigger": "Append"
					},
					"AgAAADQCAAAAAAAANAIAAAAAAAABAAAAYTQCAAAAAAAAOgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADoCAAAAAAAAOwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgIAAAAAAAA6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAAIBAAAAAAAAAgEAAAAAAAADAAAAcHVi",
					"AQAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"right_delete",
					null,
					"AQAAAAIBAAAAAAAAAgEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					4,
					"right_delete",
					null,
					"IAAAAPEAAAAAAAAA8QAAAAAAAAABAAAAcN8AAAAAAAAA3wAAAAAAAAABAAAAcNEAAAAAAAAA0QAAAAAAAAABAAAAcMEAAAAAAAAAwQAAAAAAAAABAAAAcK4AAAAAAAAArgAAAAAAAAABAAAAcJ4AAAAAAAAAngAAAAAAAAABAAAAcI8AAAAAAAAAjwAAAAAAAAABAAAAcIIAAAAAAAAAggAAAAAAAAABAAAAcOoAAAAAAAAA6gAAAAAAAAABAAAAddkAAAAAAAAA2QAAAAAAAAABAAAAdcwAAAAAAAAAzAAAAAAAAAABAAAAdb0AAAAAAAAAvQAAAAAAAAABAAAAdasAAAAAAAAAqwAAAAAAAAABAAAAdZwAAAAAAAAAnAAAAAAAAAABAAAAdY4AAAAAAAAAjgAAAAAAAAABAAAAdYIAAAAAAAAAggAAAAAAAAABAAAAdeMAAAAAAAAA4wAAAAAAAAABAAAAYtMAAAAAAAAA0wAAAAAAAAABAAAAYscAAAAAAAAAxwAAAAAAAAABAAAAYrkAAAAAAAAAuQAAAAAAAAABAAAAYqgAAAAAAAAAqAAAAAAAAAABAAAAYpoAAAAAAAAAmgAAAAAAAAABAAAAYo0AAAAAAAAAjQAAAAAAAAABAAAAYoIAAAAAAAAAggAAAAAAAAABAAAAYtwAAAAAAAAA3AAAAAAAAAABAAAAIM0AAAAAAAAAzQAAAAAAAAABAAAAIMIAAAAAAAAAwgAAAAAAAAABAAAAILUAAAAAAAAAtQAAAAAAAAABAAAAIKUAAAAAAAAApQAAAAAAAAABAAAAIJgAAAAAAAAAmAAAAAAAAAABAAAAIIwAAAAAAAAAjAAAAAAAAAABAAAAIIIAAAAAAAAAggAAAAAAAAABAAAAIA",
					"AQAAAAAAAAAIAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/ngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/rgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/wQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/8QAAAAAAAADxAAAAAAAAAAAAAAAAAAAA"
				],
				[
					69,
					4,
					"swap_line_up",
					null,
					"CAAAANUBAAAAAAAA1QEAAAAAAAAXAAAAcHViIHVzZSBib29sZWFuOjpCb29sOwq9AQAAAAAAANQBAAAAAAAAAAAAAL0BAAAAAAAAvQEAAAAAAAAXAAAAcHViIHVzZSBib29sZWFuOjpCb29sOwqmAQAAAAAAAL0BAAAAAAAAAAAAAKYBAAAAAAAApgEAAAAAAAAXAAAAcHViIHVzZSBib29sZWFuOjpCb29sOwqNAQAAAAAAAKQBAAAAAAAAAAAAAI0BAAAAAAAAjQEAAAAAAAAXAAAAcHViIHVzZSBib29sZWFuOjpCb29sOwp5AQAAAAAAAJABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AEAAAAAAADoAQAAAAAAAAAAAAAA4G5A"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "\n\n//"
					},
					"BAAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAP///////+9/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " bi"
					},
					"AwAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKgBAAAAAAAAqAEAAAAAAAACAAAAYmk",
					"AQAAAAAAAAABAAAAqgEAAAAAAACqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "builtint"
					},
					"CAAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAEAAAAAAACoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAK8BAAAAAAAArwEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "s.rs"
					},
					"BAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"duplicate_line",
					null,
					"AQAAACcCAAAAAAAAPQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADYCAAAAAAAANgIAAAAAAAAGAAAAQXBwZW5k",
					"AQAAAAAAAAABAAAAPAIAAAAAAAA8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "aP"
					},
					"AgAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"AppendFront\",\"additionalTextEdits\":[],\"label\":\"AppendFront\",\"deprecated\":false,\"textEdit\":{\"newText\":\"AppendFront\",\"range\":{\"end\":{\"character\":16,\"line\":36},\"start\":{\"character\":14,\"line\":36}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"appends to front of the list\\nmeaning: list.insert(o, item)\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							63,
							108,
							2
						],
						"trigger": "AppendFront"
					},
					"AgAAADYCAAAAAAAANgIAAAAAAAACAAAAYVA2AgAAAAAAAEECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAIAAAAAAAA4AgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "examples/python_list.rs",
			"settings":
			{
				"buffer_size": 3497,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMMEAAAAAAAAxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwQAAAAAAADDBAAAAAAAAAAAAAAAAGpA"
				],
				[
					15,
					1,
					"reindent",
					null,
					"AQAAAMMEAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwQAAAAAAADDBAAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\nopy"
					},
					"BgAAAMcEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADDBAAAAAAAAMMEAAAAAAAABAAAACAgICDIBAAAAAAAAMkEAAAAAAAAAAAAAMkEAAAAAAAAygQAAAAAAAAAAAAAygQAAAAAAADLBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAAMoEAAAAAAAAygQAAAAAAAABAAAAeckEAAAAAAAAyQQAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAMkEAAAAAAAAygQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQQAAAAAAADJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					2,
					"left_delete",
					null,
					"AgAAAMkEAAAAAAAAyQQAAAAAAAABAAAAcMgEAAAAAAAAyAQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAygQAAAAAAADKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "python"
					},
					"BgAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAADNBAAAAAAAAM4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"List\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"python_list\",\"range\":{\"end\":{\"character\":10,\"line\":63},\"start\":{\"character\":4,\"line\":63}}},\"label\":\"python_list\",\"kind\":6,\"sortText\":\"fffffffc\",\"filterText\":\"python_list\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							11,
							20,
							6
						],
						"trigger": "python_list"
					},
					"AgAAAMgEAAAAAAAAyAQAAAAAAAAGAAAAcHl0aG9uyAQAAAAAAADTBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgQAAAAAAADOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAANMEAAAAAAAA1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAANMEAAAAAAAA0wQAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".appe"
					},
					"BQAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANYEAAAAAAAAAAAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, T) -> &mut Self\",\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/examples/python_list.rs\"},\"position\":{\"character\":20,\"line\":63}},\"imports\":[{\"full_import_path\":\"python::list::AppendFront\",\"imported_name\":\"AppendFront\"}]},\"additionalTextEdits\":[],\"kind\":2,\"deprecated\":false,\"textEdit\":{\"newText\":\"append_front(${1:_})$0\",\"range\":{\"end\":{\"character\":20,\"line\":63},\"start\":{\"character\":16,\"line\":63}}},\"label\":\"append_front(…) (use python::list::AppendFront)\",\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"performs the append front\"},\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"sortText\":\"fffffffd\",\"filterText\":\"append_front\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							15,
							25,
							5
						],
						"trigger": "append_front"
					},
					"AgAAANQEAAAAAAAA1AQAAAAAAAAEAAAAYXBwZdQEAAAAAAAA4wQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									26,
									0
								],
								[
									26,
									0
								],
								"use python::list::AppendFront;",
								null
							],
							[
								[
									26,
									0
								],
								[
									26,
									0
								],
								"\n",
								null
							]
						]
					},
					"AgAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAngEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QQAAAAAAADiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAAAFAAAAAAAAAAUAAAAAAAABAAAAXwAFAAAAAAAAAwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAUAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "sa"
					},
					"AwAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAACBQAAAAAAAAEAAABfAgUAAAAAAAADBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAAIFAAAAAAAAAgUAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "sa"
					},
					"AgAAAAIFAAAAAAAAAwUAAAAAAAAAAAAAAwUAAAAAAAAEBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					3,
					"left_delete",
					null,
					"AwAAAAMFAAAAAAAAAwUAAAAAAAABAAAAYQIFAAAAAAAAAgUAAAAAAAABAAAAcwEFAAAAAAAAAQUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "salutare"
					},
					"CAAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAcFAAAAAAAAAAAAAAcFAAAAAAAACAUAAAAAAAAAAAAACAUAAAAAAAAJBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAsFAAAAAAAADAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwUAAAAAAAALBQAAAAAAAP///////+9/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\n\n\nlet"
					},
					"CwAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABLBQAAAAAAAAAAAABLBQAAAAAAAEwFAAAAAAAAAAAAAEwFAAAAAAAAUAUAAAAAAAAAAAAARwUAAAAAAABHBQAAAAAAAAQAAAAgICAgTAUAAAAAAABNBQAAAAAAAAAAAABNBQAAAAAAAFEFAAAAAAAAAAAAAEgFAAAAAAAASAUAAAAAAAAEAAAAICAgIE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAABPBQAAAAAAAFAFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " list_from_st"
					},
					"DQAAAFAFAAAAAAAAUQUAAAAAAAAAAAAAUQUAAAAAAABSBQAAAAAAAAAAAABSBQAAAAAAAFMFAAAAAAAAAAAAAFMFAAAAAAAAVAUAAAAAAAAAAAAAVAUAAAAAAABVBQAAAAAAAAAAAABVBQAAAAAAAFYFAAAAAAAAAAAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAUAAAAAAABQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAF0FAAAAAAAAXgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAF4FAAAAAAAAXwUAAAAAAAAAAAAAXwUAAAAAAABgBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGAFAAAAAAAAYQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAGEFAAAAAAAAYwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "123123"
					},
					"BgAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": ".par"
					},
					"BAAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQUAAAAAAABpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&self) -> Result<F, <F as FromStr>::Err>\",\"additionalTextEdits\":[],\"preselect\":true,\"label\":\"parse()\",\"deprecated\":false,\"textEdit\":{\"newText\":\"parse()$0\",\"range\":{\"end\":{\"character\":36,\"line\":71},\"start\":{\"character\":33,\"line\":71}}},\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Parses this string slice into another type.\\n\\nBecause `parse` is so general, it can cause problems with type\\ninference. As such, `parse` is one of the few times you'll see\\nthe syntax affectionately known as the 'turbofish': `::<>`. This\\nhelps the inference algorithm understand specifically which type\\nyou're trying to parse into.\\n\\n`parse` can parse into any type that implements the [`FromStr`] trait.\\n\\n# Errors\\n\\nWill return [`Err`] if it's not possible to parse this string slice into\\nthe desired type.\\n\\n[`Err`]: FromStr::Err\\n\\n# Examples\\n\\nBasic usage\\n\\n```rust\\nlet four: u32 = \\\"4\\\".parse().unwrap();\\n\\nassert_eq!(4, four);\\n```\\n\\nUsing the 'turbofish' instead of annotating `four`:\\n\\n```rust\\nlet four = \\\"4\\\".parse::<u32>();\\n\\nassert_eq!(Ok(4), four);\\n```\\n\\nFailing to parse:\\n\\n```rust\\nlet nope = \\\"j\\\".parse::<u32>();\\n\\nassert!(nope.is_err());\\n```\"},\"kind\":2,\"sortText\":\"fffffffa\",\"filterText\":\"parse\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							72,
							112,
							4
						],
						"trigger": "parse"
					},
					"AgAAAGoFAAAAAAAAagUAAAAAAAADAAAAcGFyagUAAAAAAABxBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQUAAAAAAABtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "::<List>"
					},
					"CAAAAG8FAAAAAAAAcAUAAAAAAAAAAAAAcAUAAAAAAABxBQAAAAAAAAAAAABxBQAAAAAAAHIFAAAAAAAAAAAAAHIFAAAAAAAAcwUAAAAAAAAAAAAAcwUAAAAAAAB0BQAAAAAAAAAAAAB0BQAAAAAAAHUFAAAAAAAAAAAAAHUFAAAAAAAAdgUAAAAAAAAAAAAAdgUAAAAAAAB3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwUAAAAAAABvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHkFAAAAAAAAegUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQUAAAAAAAB5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAHoFAAAAAAAAewUAAAAAAAAAAAAAewUAAAAAAAB/BQAAAAAAAAAAAAB/BQAAAAAAAIAFAAAAAAAAAAAAAIAFAAAAAAAAgQUAAAAAAAAAAAAAgQUAAAAAAACCBQAAAAAAAAAAAACCBQAAAAAAAIMFAAAAAAAAAAAAAIMFAAAAAAAAhAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegUAAAAAAAB6BQAAAAAAAAAAAAAA6INA"
				],
				[
					127,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(T)\",\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"textEdit\":{\"newText\":\"print(${1:arg})$0\",\"range\":{\"end\":{\"character\":9,\"line\":72},\"start\":{\"character\":4,\"line\":72}}},\"label\":\"print(…)\",\"deprecated\":false,\"insertTextFormat\":2,\"sortText\":\"fffffffd\",\"kind\":3,\"additionalTextEdits\":[],\"filterText\":\"print\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							80,
							124,
							7
						],
						"trigger": "print"
					},
					"AgAAAH8FAAAAAAAAfwUAAAAAAAAFAAAAcHJpbnR/BQAAAAAAAIkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "&list_fr"
					},
					"CQAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACGBQAAAAAAAAMAAABhcmeGBQAAAAAAAIcFAAAAAAAAAAAAAIcFAAAAAAAAiAUAAAAAAAAAAAAAiAUAAAAAAACJBQAAAAAAAAAAAACJBQAAAAAAAIoFAAAAAAAAAAAAAIoFAAAAAAAAiwUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAACMBQAAAAAAAI0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"Result<List, Box<dyn Error, Global>>\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"list_from_str\",\"range\":{\"end\":{\"character\":18,\"line\":72},\"start\":{\"character\":11,\"line\":72}}},\"label\":\"list_from_str\",\"kind\":6,\"sortText\":\"fffffff9\",\"filterText\":\"list_from_str\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							82,
							129,
							9
						],
						"trigger": "list_from_str"
					},
					"AgAAAIYFAAAAAAAAhgUAAAAAAAAHAAAAbGlzdF9mcoYFAAAAAAAAkwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQUAAAAAAACNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJQFAAAAAAAAlQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAUAAAAAAACUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": ".un"
					},
					"AwAAAHkFAAAAAAAAegUAAAAAAAAAAAAAegUAAAAAAAB7BQAAAAAAAAAAAAB7BQAAAAAAAHwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQUAAAAAAAB5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(self) -> T\",\"additionalTextEdits\":[],\"preselect\":true,\"label\":\"unwrap()\",\"deprecated\":false,\"textEdit\":{\"newText\":\"unwrap()$0\",\"range\":{\"end\":{\"character\":51,\"line\":71},\"start\":{\"character\":49,\"line\":71}}},\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns the contained [`Ok`] value, consuming the `self` value.\\n\\nBecause this function may panic, its use is generally discouraged.\\nInstead, prefer to use pattern matching and handle the [`Err`]\\ncase explicitly, or call [`unwrap_or`], [`unwrap_or_else`], or\\n[`unwrap_or_default`].\\n\\n[`unwrap_or`]: Result::unwrap_or\\n[`unwrap_or_else`]: Result::unwrap_or_else\\n[`unwrap_or_default`]: Result::unwrap_or_default\\n\\n# Panics\\n\\nPanics if the value is an [`Err`], with a panic message provided by the\\n[`Err`]'s value.\\n\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet x: Result<u32, &str> = Ok(2);\\nassert_eq!(x.unwrap(), 2);\\n```\\n\\n```rust\\nlet x: Result<u32, &str> = Err(\\\"emergency failure\\\");\\nx.unwrap(); // panics with `emergency failure`\\n```\"},\"kind\":2,\"sortText\":\"fffffffa\",\"filterText\":\"unwrap\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							90,
							149,
							3
						],
						"trigger": "unwrap"
					},
					"AgAAAHoFAAAAAAAAegUAAAAAAAACAAAAdW56BQAAAAAAAIIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAUAAAAAAAB8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACjBQAAAAAAAAAAAACjBQAAAAAAAKQFAAAAAAAAAAAAAKQFAAAAAAAAqAUAAAAAAAAAAAAAnwUAAAAAAACfBQAAAAAAAAQAAAAgICAgpAUAAAAAAAClBQAAAAAAAAAAAAClBQAAAAAAAKYFAAAAAAAAAAAAAKYFAAAAAAAApwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngUAAAAAAACeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " lst"
					},
					"BAAAAKcFAAAAAAAAqAUAAAAAAAAAAAAAqAUAAAAAAACpBQAAAAAAAAAAAACpBQAAAAAAAKoFAAAAAAAAAAAAAKoFAAAAAAAAqwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwUAAAAAAACnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					2,
					"left_delete",
					null,
					"AgAAAKoFAAAAAAAAqgUAAAAAAAABAAAAdKkFAAAAAAAAqQUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "ist"
					},
					"AwAAAKkFAAAAAAAAqgUAAAAAAAAAAAAAqgUAAAAAAACrBQAAAAAAAAAAAACrBQAAAAAAAKwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQUAAAAAAACpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAAK0FAAAAAAAArQUAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAK0FAAAAAAAArgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					2,
					"left_delete",
					null,
					"AgAAAK0FAAAAAAAArQUAAAAAAAABAAAAX6wFAAAAAAAArAUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAKwFAAAAAAAArQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAAKwFAAAAAAAArAUAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "_from_iterato"
					},
					"DQAAAKwFAAAAAAAArQUAAAAAAAAAAAAArQUAAAAAAACuBQAAAAAAAAAAAACuBQAAAAAAAK8FAAAAAAAAAAAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAC0BQAAAAAAALUFAAAAAAAAAAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAALkFAAAAAAAAugUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQUAAAAAAAC5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugUAAAAAAAC6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwFAAAAAAAAvQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAUAAAAAAAC8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"paste",
					null,
					"AQAAAJ8FAAAAAAAA4wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwUAAAAAAACfBQAAAAAAAAAAAAAAkHdA"
				],
				[
					193,
					1,
					"indent",
					null,
					"AQAAAJ8FAAAAAAAAowUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQUAAAAAAAC9BQAAAAAAAAAAAAAAEH5A"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACjBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngUAAAAAAACeBQAAAAAAAAAAAAAAoHtA"
				],
				[
					197,
					1,
					"indent",
					null,
					"AQAAAMcFAAAAAAAAywUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywUAAAAAAADLBQAAAAAAAAAAAAAAAEpA"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAAAsGAAAAAAAADAYAAAAAAAAAAAAAnwUAAAAAAACfBQAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAANBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " iter..col"
					},
					"CgAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAABYGAAAAAAAAAAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABcGAAAAAAAAFwYAAAAAAAADAAAAY29s",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"left_delete",
					null,
					"AQAAABYGAAAAAAAAFgYAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAFwYAAAAAAAAXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgYAAAAAAAAWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(self) -> B\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"collect()$0\",\"range\":{\"end\":{\"character\":44,\"line\":76},\"start\":{\"character\":41,\"line\":76}}},\"label\":\"collect() (as Iterator)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Transforms an iterator into a collection.\\n\\n`collect()` can take anything iterable, and turn it into a relevant\\ncollection. This is one of the more powerful methods in the standard\\nlibrary, used in a variety of contexts.\\n\\nThe most basic pattern in which `collect()` is used is to turn one\\ncollection into another. You take a collection, call [`iter`] on it,\\ndo a bunch of transformations, and then `collect()` at the end.\\n\\n`collect()` can also create instances of types that are not typical\\ncollections. For example, a [`String`] can be built from [`char`]s,\\nand an iterator of [`Result<T, E>`][`Result`] items can be collected\\ninto `Result<Collection<T>, E>`. See the examples below for more.\\n\\nBecause `collect()` is so general, it can cause problems with type\\ninference. As such, `collect()` is one of the few times you'll see\\nthe syntax affectionately known as the 'turbofish': `::<>`. This\\nhelps the inference algorithm understand specifically which collection\\nyou're trying to collect into.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled: Vec<i32> = a.iter()\\n                         .map(|&x| x * 2)\\n                         .collect();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nNote that we needed the `: Vec<i32>` on the left-hand side. This is because\\nwe could collect into, for example, a [`VecDeque<T>`] instead:\\n\\n[`VecDeque<T>`]: ../../std/collections/struct.VecDeque.html\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet a = [1, 2, 3];\\n\\nlet doubled: VecDeque<i32> = a.iter().map(|&x| x * 2).collect();\\n\\nassert_eq!(2, doubled[0]);\\nassert_eq!(4, doubled[1]);\\nassert_eq!(6, doubled[2]);\\n```\\n\\nUsing the 'turbofish' instead of annotating `doubled`:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<i32>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nBecause `collect()` only cares about what you're collecting into, you can\\nstill use a partial type hint, `_`, with the turbofish:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<_>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nUsing `collect()` to make a [`String`]:\\n\\n```rust\\nlet chars = ['g', 'd', 'k', 'k', 'n'];\\n\\nlet hello: String = chars.iter()\\n    .map(|&x| x as u8)\\n    .map(|x| (x + 1) as char)\\n    .collect();\\n\\nassert_eq!(\\\"hello\\\", hello);\\n```\\n\\nIf you have a list of [`Result<T, E>`][`Result`]s, you can use `collect()` to\\nsee if any of them failed:\\n\\n```rust\\nlet results = [Ok(1), Err(\\\"nope\\\"), Ok(3), Err(\\\"bad\\\")];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the first error\\nassert_eq!(Err(\\\"nope\\\"), result);\\n\\nlet results = [Ok(1), Ok(3)];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the list of answers\\nassert_eq!(Ok(vec![1, 3]), result);\\n```\\n\\n[`iter`]: Iterator::next\\n[`String`]: ../../std/string/struct.String.html\\n[`char`]: type@char\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"collect\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							137,
							210,
							3
						],
						"trigger": "collect"
					},
					"AgAAABYGAAAAAAAAFgYAAAAAAAADAAAAY29sFgYAAAAAAAAfBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQYAAAAAAAAZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB8GAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwYAAAAAAAAfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"cut",
					null,
					"AQAAAMMFAAAAAAAAwwUAAAAAAAAqAAAAICAgIGxldCBjOiBNeUNvbGxlY3Rpb24gPSBpdGVyLmNvbGxlY3QoKTsK",
					"AQAAAAAAAAABAAAA7AUAAAAAAADsBQAAAAAAAAAAAAAAuIRA"
				],
				[
					230,
					1,
					"left_delete",
					null,
					"AQAAAOYFAAAAAAAA5gUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5wUAAAAAAADnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD6BQAAAAAAAAAAAAD6BQAAAAAAAPsFAAAAAAAAAAAAAPsFAAAAAAAA/AUAAAAAAAAAAAAA/AUAAAAAAAD9BQAAAAAAAAAAAAD9BQAAAAAAAP4FAAAAAAAAAAAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QUAAAAAAAD1BQAAAAAAAP///////+9/"
				],
				[
					243,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(T)\",\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"textEdit\":{\"newText\":\"print(${1:arg})$0\",\"range\":{\"end\":{\"character\":9,\"line\":76},\"start\":{\"character\":4,\"line\":76}}},\"label\":\"print(…)\",\"deprecated\":false,\"insertTextFormat\":2,\"sortText\":\"fffffffd\",\"kind\":3,\"additionalTextEdits\":[],\"filterText\":\"print\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							157,
							238,
							7
						],
						"trigger": "print"
					},
					"AgAAAPoFAAAAAAAA+gUAAAAAAAAFAAAAcHJpbnT6BQAAAAAAAAQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "&list_from"
					},
					"CwAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAABBgAAAAAAAAMAAABhcmcBBgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAAUGAAAAAAAAAAAAAAUGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAgGAAAAAAAAAAAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"List\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"list_from_iterator\",\"range\":{\"end\":{\"character\":20,\"line\":76},\"start\":{\"character\":11,\"line\":76}}},\"label\":\"list_from_iterator\",\"kind\":6,\"sortText\":\"fffffff9\",\"filterText\":\"list_from_iterator\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							159,
							245,
							11
						],
						"trigger": "list_from_iterator"
					},
					"AgAAAAEGAAAAAAAAAQYAAAAAAAAJAAAAbGlzdF9mcm9tAQYAAAAAAAATBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABQGAAAAAAAAFQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"duplicate_line",
					null,
					"AQAAAPYFAAAAAAAAKQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMcFAAAAAAAAygUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAA0HpA"
				],
				[
					269,
					7,
					"left_delete",
					null,
					"BwAAABkGAAAAAAAAGQYAAAAAAAABAAAAIBgGAAAAAAAAGAYAAAAAAAABAAAAdBcGAAAAAAAAFwYAAAAAAAABAAAAcxYGAAAAAAAAFgYAAAAAAAABAAAAaRUGAAAAAAAAFQYAAAAAAAABAAAATBQGAAAAAAAAFAYAAAAAAAABAAAAIBMGAAAAAAAAEwYAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMGAAAAAAAAFAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "::<List>"
					},
					"CAAAACIGAAAAAAAAIwYAAAAAAAAAAAAAIwYAAAAAAAAkBgAAAAAAAAAAAAAkBgAAAAAAACUGAAAAAAAAAAAAACUGAAAAAAAAJgYAAAAAAAAAAAAAJgYAAAAAAAAnBgAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAACgGAAAAAAAAKQYAAAAAAAAAAAAAKQYAAAAAAAAqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgYAAAAAAAAiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVwYAAAAAAAAAAAAATgYAAAAAAABOBgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"left_delete",
					null,
					"AQAAAE8GAAAAAAAATwYAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"paste",
					null,
					"AQAAAE8GAAAAAAAA/AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					4,
					"left_delete",
					null,
					"BAAAAGIGAAAAAAAAYgYAAAAAAAABAAAANWEGAAAAAAAAYQYAAAAAAAABAAAALmAGAAAAAAAAYAYAAAAAAAABAAAALl8GAAAAAAAAXwYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAF8GAAAAAAAAYQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAGAGAAAAAAAAYQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAYAAAAAAABgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "asd"
					},
					"AwAAAGEGAAAAAAAAYgYAAAAAAAAAAAAAYgYAAAAAAABjBgAAAAAAAAAAAABjBgAAAAAAAGQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQYAAAAAAABhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " asdasdasdasda"
					},
					"DgAAAGQGAAAAAAAAZQYAAAAAAAAAAAAAZQYAAAAAAABmBgAAAAAAAAAAAABmBgAAAAAAAGcGAAAAAAAAAAAAAGcGAAAAAAAAaAYAAAAAAAAAAAAAaAYAAAAAAABpBgAAAAAAAAAAAABpBgAAAAAAAGoGAAAAAAAAAAAAAGoGAAAAAAAAawYAAAAAAAAAAAAAawYAAAAAAABsBgAAAAAAAAAAAABsBgAAAAAAAG0GAAAAAAAAAAAAAG0GAAAAAAAAbgYAAAAAAAAAAAAAbgYAAAAAAABvBgAAAAAAAAAAAABvBgAAAAAAAHAGAAAAAAAAAAAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAcQYAAAAAAAByBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAYAAAAAAABkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " asdasasdasdasdasdasd"
					},
					"FQAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB6BgAAAAAAAAAAAAB6BgAAAAAAAHsGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAAfAYAAAAAAAB9BgAAAAAAAAAAAAB9BgAAAAAAAH4GAAAAAAAAAAAAAH4GAAAAAAAAfwYAAAAAAAAAAAAAfwYAAAAAAACABgAAAAAAAAAAAACABgAAAAAAAIEGAAAAAAAAAAAAAIEGAAAAAAAAggYAAAAAAAAAAAAAggYAAAAAAACDBgAAAAAAAAAAAACDBgAAAAAAAIQGAAAAAAAAAAAAAIQGAAAAAAAAhQYAAAAAAAAAAAAAhQYAAAAAAACGBgAAAAAAAAAAAACGBgAAAAAAAIcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAJYBAAAAAAAAlgEAAAAAAAAGAAAAQXBwZW5klAEAAAAAAACUAQAAAAAAAAIAAAA6OpABAAAAAAAAkAEAAAAAAAAEAAAAbGlzdA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait\",\"range\":{\"end\":{\"character\":15,\"line\":25},\"start\":{\"character\":12,\"line\":25}}},\"additionalTextEdits\":[],\"label\":\"append_trait\",\"deprecated\":false,\"filterText\":\"append_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							210,
							340,
							3
						],
						"trigger": "append_trait"
					},
					"AgAAAJABAAAAAAAAkAEAAAAAAAADAAAAYXBwkAEAAAAAAACcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Append\",\"additionalTextEdits\":[],\"label\":\"Append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Append\",\"range\":{\"end\":{\"character\":26,\"line\":25},\"start\":{\"character\":26,\"line\":25}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"append function for List\\ncan append any data type\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							212,
							342,
							2
						],
						"trigger": "Append"
					},
					"AQAAAJ4BAAAAAAAApAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					2,
					"cut",
					null,
					"AgAAAIQBAAAAAAAAhAEAAAAAAAAiAAAAdXNlIHB5dGhvbjo6YXBwZW5kX3RyYWl0OjpBcHBlbmQ7CoQBAAAAAAAAhAEAAAAAAAAfAAAAdXNlIHB5dGhvbjo6bGlzdDo6QXBwZW5kRnJvbnQ7Cg",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAHpA"
				],
				[
					375,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAE0CAAAAAAAATQIAAAAAAAAGAAAAYXBwZW5k",
					"AQAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "ap"
					},
					"AgAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, T) -> &mut Self\",\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/examples/python_list.rs\"},\"position\":{\"character\":18,\"line\":37}},\"imports\":[{\"full_import_path\":\"python::list::append_trait::Append\",\"imported_name\":\"Append\"}]},\"additionalTextEdits\":[],\"label\":\"append (use python::list::append_trait::Append)\",\"deprecated\":false,\"textEdit\":{\"newText\":\"append\",\"range\":{\"end\":{\"character\":18,\"line\":37},\"start\":{\"character\":16,\"line\":37}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Performs append\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							223,
							376,
							2
						],
						"trigger": "append"
					},
					"AgAAAE0CAAAAAAAATQIAAAAAAAACAAAAYXBNAgAAAAAAAFMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									25,
									0
								],
								[
									25,
									0
								],
								"use python::list::append_trait::Append;",
								null
							],
							[
								[
									25,
									0
								],
								[
									25,
									0
								],
								"\n",
								null
							]
						]
					},
					"AgAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhAEAAAAAAACrAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANYEAAAAAAAA2QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					4,
					"cut",
					null,
					"BAAAAEEGAAAAAAAAQQYAAAAAAABIAAAAICAgIGxldCBpdGVyID0gKCJhYXNkIGFzZGFzZGFzZGFzZGEgYXNkYXNhc2Rhc2Rhc2Rhc2Rhc2QiKS5pbnRvX2l0ZXIoKTsKQQYAAAAAAABBBgAAAAAAADYAAAAgICAgLy8gbGV0IGxpc3RfZnJvbV9pdGVyYXRvcjogTGlzdCA9IGl0ZXIuY29sbGVjdCgpOwpBBgAAAAAAAEEGAAAAAAAANQAAACAgICBsZXQgbGlzdF9mcm9tX2l0ZXJhdG9yID0gaXRlci5jb2xsZWN0Ojo8TGlzdD4oKTsKQQYAAAAAAABBBgAAAAAAACAAAAAgICAgcHJpbnQoJmxpc3RfZnJvbV9pdGVyYXRvcik7Cg",
					"AQAAAAAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAIQBAAAAAAAAhwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAHgCAAAAAAAAeAIAAAAAAAAGAAAAYXBwZW5k",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"left_delete",
					null,
					"AQAAAHcCAAAAAAAAdwIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": ".ap"
					},
					"AwAAAHcCAAAAAAAAeAIAAAAAAAAAAAAAeAIAAAAAAAB5AgAAAAAAAAAAAAB5AgAAAAAAAHoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn(&mut self, T) -> &mut Self\",\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/examples/python_list.rs\"},\"position\":{\"character\":18,\"line\":38}},\"imports\":[{\"full_import_path\":\"python::list::append_trait::Append\",\"imported_name\":\"Append\"}]},\"additionalTextEdits\":[],\"label\":\"append (use python::list::append_trait::Append)\",\"deprecated\":false,\"textEdit\":{\"newText\":\"append\",\"range\":{\"end\":{\"character\":18,\"line\":38},\"start\":{\"character\":16,\"line\":38}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"Performs append\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							244,
							432,
							3
						],
						"trigger": "append"
					},
					"AgAAAHgCAAAAAAAAeAIAAAAAAAACAAAAYXB4AgAAAAAAAH4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegIAAAAAAAB6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									25,
									0
								],
								[
									25,
									0
								],
								"use python::list::append_trait::Append;",
								null
							],
							[
								[
									25,
									0
								],
								[
									25,
									0
								],
								"\n",
								null
							]
						]
					},
					"AgAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhAEAAAAAAACrAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									39,
									16
								],
								[
									39,
									22
								],
								"append_back",
								333
							],
							[
								[
									41,
									16
								],
								[
									41,
									22
								],
								"append_back",
								333
							],
							[
								[
									43,
									16
								],
								[
									43,
									22
								],
								"append_back",
								333
							],
							[
								[
									45,
									16
								],
								[
									45,
									22
								],
								"append_back",
								333
							],
							[
								[
									46,
									16
								],
								[
									46,
									22
								],
								"append_back",
								333
							],
							[
								[
									47,
									16
								],
								[
									47,
									22
								],
								"append_back",
								333
							],
							[
								[
									48,
									16
								],
								[
									48,
									22
								],
								"append_back",
								333
							],
							[
								[
									50,
									16
								],
								[
									50,
									22
								],
								"append_back",
								333
							],
							[
								[
									52,
									16
								],
								[
									52,
									22
								],
								"append_back",
								333
							],
							[
								[
									56,
									16
								],
								[
									56,
									22
								],
								"append_back",
								333
							],
							[
								[
									57,
									16
								],
								[
									57,
									22
								],
								"append_back",
								333
							],
							[
								[
									58,
									16
								],
								[
									58,
									22
								],
								"append_back",
								333
							]
						]
					},
					"DAAAALQEAAAAAAAAvwQAAAAAAAAGAAAAYXBwZW5kigQAAAAAAACVBAAAAAAAAAYAAABhcHBlbmRhBAAAAAAAAGwEAAAAAAAABgAAAGFwcGVuZP0DAAAAAAAACAQAAAAAAAAGAAAAYXBwZW5kugMAAAAAAADFAwAAAAAAAAYAAABhcHBlbmSJAwAAAAAAAJQDAAAAAAAABgAAAGFwcGVuZGgDAAAAAAAAcwMAAAAAAAAGAAAAYXBwZW5kRwMAAAAAAABSAwAAAAAAAAYAAABhcHBlbmQmAwAAAAAAADEDAAAAAAAABgAAAGFwcGVuZNwCAAAAAAAA5wIAAAAAAAAGAAAAYXBwZW5kvgIAAAAAAADJAgAAAAAAAAYAAABhcHBlbmSgAgAAAAAAAKsCAAAAAAAABgAAAGFwcGVuZA",
					"AQAAAAAAAAABAAAAYgIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					2,
					"cut",
					null,
					"AgAAAIQBAAAAAAAAhAEAAAAAAAAoAAAAdXNlIHB5dGhvbjo6bGlzdDo6YXBwZW5kX3RyYWl0OjpBcHBlbmQ7CoQBAAAAAAAAhAEAAAAAAAArAAAALy8gdXNlIHB5dGhvbjo6bGlzdDo6YXBwZW5kX3RyYWl0OjpBcHBlbmQ7Cg",
					"AQAAAAAAAAABAAAAqwEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					6,
					"swap_line_down",
					null,
					"DAAAADgBAAAAAAAASgEAAAAAAAAAAAAAEgEAAAAAAAASAQAAAAAAABIAAAB1c2UgcHl0aG9uOjpMaXN0OwpJAQAAAAAAAFsBAAAAAAAAAAAAACYBAAAAAAAAJgEAAAAAAAASAAAAdXNlIHB5dGhvbjo6TGlzdDsKXAEAAAAAAABuAQAAAAAAAAAAAAA3AQAAAAAAADcBAAAAAAAAEgAAAHVzZSBweXRob246Okxpc3Q7Cm4BAAAAAAAAgAEAAAAAAAAAAAAASgEAAAAAAABKAQAAAAAAABIAAAB1c2UgcHl0aG9uOjpMaXN0OwqDAQAAAAAAAJUBAAAAAAAAAAAAAFwBAAAAAAAAXAEAAAAAAAASAAAAdXNlIHB5dGhvbjo6TGlzdDsKhAEAAAAAAACWAQAAAAAAAAAAAABxAQAAAAAAAHEBAAAAAAAAEgAAAHVzZSBweXRob246Okxpc3Q7Cg",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"swap_line_up",
					null,
					"AgAAAHIBAAAAAAAAcgEAAAAAAAASAAAAdXNlIHB5dGhvbjo6TGlzdDsKcQEAAAAAAACDAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"paste",
					null,
					"AQAAAKwAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAAAA"
				],
				[
					563,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAL4AAAAAAAAAvgAAAAAAAAAMAAAAYXBwZW5kX3RyYWl0vAAAAAAAAAC8AAAAAAAAAAIAAAA6Og",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKwAAAAAAAAArwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAKwAAAAAAAAArAAAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAA4G5A"
				],
				[
					594,
					1,
					"cut",
					null,
					"AQAAAKwAAAAAAAAArAAAAAAAAAAaAAAAdXNlIHB5dGhvbjo6bGlzdDo6QXBwZW5kOwo",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "\n\nuse"
					},
					"BQAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQEAAAAAAADJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": " python::P"
					},
					"CgAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAADQAQAAAAAAANEBAAAAAAAAAAAAANEBAAAAAAAA0gEAAAAAAAAAAAAA0gEAAAAAAADTAQAAAAAAAAAAAADTAQAAAAAAANQBAAAAAAAAAAAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAADWAQAAAAAAANcBAAAAAAAAAAAAANcBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"left_delete",
					null,
					"AQAAANcBAAAAAAAA1wEAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "Ap"
					},
					"AgAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					2,
					"left_delete",
					null,
					"AgAAANgBAAAAAAAA2AEAAAAAAAABAAAAcNcBAAAAAAAA1wEAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAA2QEAAAAAAADZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAANcBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"left_delete",
					null,
					"AQAAANcBAAAAAAAA1wEAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "*;"
					},
					"AgAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"CgAAALgBAAAAAAAAuwEAAAAAAAAAAAAApwEAAAAAAACqAQAAAAAAAAAAAACUAQAAAAAAAJcBAAAAAAAAAAAAAIUBAAAAAAAAiAEAAAAAAAAAAAAAcgEAAAAAAAB1AQAAAAAAAAAAAABdAQAAAAAAAGABAAAAAAAAAAAAAEsBAAAAAAAATgEAAAAAAAAAAAAAOAEAAAAAAAA7AQAAAAAAAAAAAAAnAQAAAAAAACoBAAAAAAAAAAAAABMBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAI0CAAAAAAAAkAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQIAAAAAAACNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "\nPYTHON"
					},
					"CAAAAJACAAAAAAAAkQIAAAAAAAAAAAAAkQIAAAAAAACVAgAAAAAAAAAAAACVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAAmgIAAAAAAACbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAIAAAAAAACQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"List\",\"additionalTextEdits\":[],\"preselect\":true,\"deprecated\":false,\"textEdit\":{\"newText\":\"python_list\",\"range\":{\"end\":{\"character\":10,\"line\":41},\"start\":{\"character\":4,\"line\":41}}},\"label\":\"python_list\",\"kind\":6,\"sortText\":\"fffffffc\",\"filterText\":\"python_list\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							334,
							650,
							8
						],
						"trigger": "python_list"
					},
					"AgAAAJUCAAAAAAAAlQIAAAAAAAAGAAAAUFlUSE9OlQIAAAAAAACgAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"insert",
					{
						"characters": ".app"
					},
					"BAAAAKACAAAAAAAAoQIAAAAAAAAAAAAAoQIAAAAAAACiAgAAAAAAAAAAAACiAgAAAAAAAKMCAAAAAAAAAAAAAKMCAAAAAAAApAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(&mut self, T) -> &mut Self\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"append_front(${1:_})$0\",\"range\":{\"end\":{\"character\":19,\"line\":41},\"start\":{\"character\":16,\"line\":41}}},\"label\":\"append_front(…) (as AppendFront)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"performs the append front\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"append_front\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							336,
							653,
							4
						],
						"trigger": "append_front"
					},
					"AgAAAKECAAAAAAAAoQIAAAAAAAADAAAAYXBwoQIAAAAAAACwAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": "123"
					},
					"BAAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACvAgAAAAAAAAEAAABfrwIAAAAAAACwAgAAAAAAAAAAAACwAgAAAAAAALECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgIAAAAAAACvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALICAAAAAAAAswIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgIAAAAAAACyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAI0CAAAAAAAAjQIAAAAAAAADAAAAICAg",
					"AQAAAAAAAAABAAAAswIAAAAAAACzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAKsCAAAAAAAAqwIAAAAAAAADAAAAMTIz",
					"AQAAAAAAAAABAAAArgIAAAAAAACuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKsCAAAAAAAArAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwIAAAAAAACrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKwCAAAAAAAArgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAIAAAAAAACsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					669,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAK0CAAAAAAAArgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQIAAAAAAACtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"left_delete",
					null,
					"AQAAAK0CAAAAAAAArQIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAArgIAAAAAAACuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKwCAAAAAAAArAIAAAAAAAABAAAAIqwCAAAAAAAArAIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAArQIAAAAAAACtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"left_delete",
					null,
					"AQAAAKsCAAAAAAAAqwIAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAArAIAAAAAAACsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKsCAAAAAAAArQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwIAAAAAAACrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": "salutare"
					},
					"CAAAAKwCAAAAAAAArQIAAAAAAAAAAAAArQIAAAAAAACuAgAAAAAAAAAAAACuAgAAAAAAAK8CAAAAAAAAAAAAAK8CAAAAAAAAsAIAAAAAAAAAAAAAsAIAAAAAAACxAgAAAAAAAAAAAACxAgAAAAAAALICAAAAAAAAAAAAALICAAAAAAAAswIAAAAAAAAAAAAAswIAAAAAAAC0AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAIAAAAAAACsAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/list/mod.rs",
			"settings":
			{
				"buffer_size": 123,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAAAIAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA4G5A"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAAMAAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					2,
					"left_delete",
					null,
					"AgAAACgAAAAAAAAAKAAAAAAAAAABAAAAOicAAAAAAAAAJwAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"swap_line_down",
					null,
					"BAAAADwAAAAAAAAAUgAAAAAAAAAAAAAAUQAAAAAAAABRAAAAAAAAAAEAAAAKPAAAAAAAAAA9AAAAAAAAAAAAAAATAAAAAAAAABMAAAAAAAAAFgAAAHB1YiBtb2QgYXBwZW5kX3RyYWl0Owo",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					3,
					"swap_line_up",
					null,
					"CAAAACcAAAAAAAAAJwAAAAAAAAAVAAAAcHViIG1vZCBhcHBlbmRfdHJhaXQ7JgAAAAAAAAAmAAAAAAAAAAEAAAAKEwAAAAAAAAAUAAAAAAAAAAAAAAATAAAAAAAAACgAAAAAAAAAAAAAABMAAAAAAAAAEwAAAAAAAAAWAAAAcHViIG1vZCBhcHBlbmRfdHJhaXQ7ChIAAAAAAAAAKAAAAAAAAAAAAAAAEgAAAAAAAAASAAAAAAAAABYAAABwdWIgbW9kIGFwcGVuZF90cmFpdDsKEQAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAQHBA"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "\npud"
					},
					"BAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAQHBA"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " mo"
					},
					"AwAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEEAAAAAAAAAQQAAAAAAAAACAAAAbW8",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					2,
					"left_delete",
					null,
					"AgAAAEAAAAAAAAAAQAAAAAAAAAABAAAAID8AAAAAAAAAPwAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert_completion",
					{
						"completion": "append_trait",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "append_trait"
					},
					"AgAAAEUAAAAAAAAARQAAAAAAAAADAAAAYXBwRQAAAAAAAABRAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"
					},
					"AQAAAD0AAAAAAAAAPQAAAAAAAAAWAAAAcHViIG1vZCBhcHBlbmRfdHJhaXQ6Og",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAA4HFA"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "\n\nsrc"
					},
					"BQAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAAAA"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"left_delete",
					null,
					"AQAAAEIAAAAAAAAAQgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"reindent",
					null,
					"AQAAAEMAAAAAAAAARwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAABJAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "\n\tappend"
					},
					"CQAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait\",\"range\":{\"end\":{\"character\":14,\"line\":12},\"start\":{\"character\":8,\"line\":12}}},\"additionalTextEdits\":[],\"label\":\"append_trait\",\"deprecated\":false,\"filterText\":\"append_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							56,
							181,
							9
						],
						"trigger": "append_trait"
					},
					"AgAAAFQAAAAAAAAAVAAAAAAAAAAGAAAAYXBwZW5kVAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": ".rs"
					},
					"AwAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\nlist.rs"
					},
					"CQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\nmod.rs"
					},
					"CAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAlAAAAAAAAAAAAAAAgwAAAAAAAACDAAAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					2,
					"left_delete",
					null,
					"AgAAAIgAAAAAAAAAiAAAAAAAAAAEAAAAICAgIIQAAAAAAAAAhAAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "lib.rs"
					},
					"BgAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAACJAAAAAAAAAIoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "           "
					},
					"CwAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": ",_"
					},
					"AgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					2,
					"left_delete",
					null,
					"AgAAAIAAAAAAAAAAgAAAAAAAAAABAAAAIH8AAAAAAAAAfwAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					2,
					"left_delete",
					null,
					"AgAAAH8AAAAAAAAAfwAAAAAAAAABAAAAPH4AAAAAAAAAfgAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AgAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " here"
					},
					"BQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAACCAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " defined"
					},
					"CAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " struct"
					},
					"BwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"left_delete",
					null,
					"AQAAAJwAAAAAAAAAnAAAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAnQAAAAAAAACdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAP///////+9/"
				],
				[
					218,
					1,
					"left_delete",
					null,
					"AQAAAJEAAAAAAAAAkQAAAAAAAAABAAAAYA",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"left_delete",
					null,
					"AQAAAJ0AAAAAAAAAnQAAAAAAAAABAAAAYA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAP///////+9/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "            "
					},
					"DAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAKIdA"
				],
				[
					226,
					1,
					"delete_word",
					{
						"forward": true
					},
					"AQAAAIEAAAAAAAAAgQAAAAAAAAAEAAAAaGVyZQ",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"right_delete",
					null,
					"AQAAAIEAAAAAAAAAgQAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALMAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAkHdA"
				],
				[
					231,
					1,
					"left_delete",
					null,
					"AQAAALMAAAAAAAAAswAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AgAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " list;"
					},
					"BgAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " pub"
					},
					"BAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkAAAAAAAAAugAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQAAAAAAAAC5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAAAAAAAAADIAAAAAAAAAP///////+9/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " list::List;"
					},
					"DAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "   <>"
					},
					"BQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAMIlA"
				],
				[
					249,
					1,
					"left_delete",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"left_delete",
					null,
					"AQAAAGgAAAAAAAAAaAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					2,
					"left_delete",
					null,
					"AgAAAGgAAAAAAAAAaAAAAAAAAAABAAAAX2cAAAAAAAAAZwAAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": " Appednd"
					},
					"CAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAGkAAAAAAAAAaQAAAAAAAAAHAAAAQXBwZWRuZA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "trait"
					},
					"BQAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": " Append:"
					},
					"CAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"left_delete",
					null,
					"AQAAAHUAAAAAAAAAdQAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " impl"
					},
					"BQAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " Append<T>"
					},
					"CgAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI8AAAAAAAAAkQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"right_delete",
					null,
					"AQAAAJAAAAAAAAAAkAAAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "};"
					},
					"AgAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAP///////+9/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"left_delete",
					null,
					"AQAAAA8BAAAAAAAADwEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"left_delete",
					null,
					"AQAAAA8BAAAAAAAADwEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "<-"
					},
					"AgAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " mod"
					},
					"BAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " list:"
					},
					"BgAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"left_delete",
					null,
					"AQAAABoBAAAAAAAAGgEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABoBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "pub"
					},
					"AwAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " pub"
					},
					"BAAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAP///////+9/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwEAAAAAAAAjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": " list::list"
					},
					"CwAAACcBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgEAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAADIBAAAAAAAAMgEAAAAAAAABAAAAOi4BAAAAAAAALgEAAAAAAAAEAAAAbGlzdA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "List;"
					},
					"BQAAAC4BAAAAAAAALwEAAAAAAAAAAAAALwEAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAAzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAAuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "\n\nthis"
					},
					"BgAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAEAAAAAAAA8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": " rate"
					},
					"BQAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAABAAQAAAAAAAEEBAAAAAAAAAAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAD8BAAAAAAAAPwEAAAAAAAAFAAAAcmF0ZSA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "crate"
					},
					"BQAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwEAAAAAAAA/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwEAAAAAAAA/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIBAAAAAAAAQwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					2,
					"left_delete",
					null,
					"AgAAAD4AAAAAAAAAPgAAAAAAAAALAQAACnNyYwogICAgbGlzdAogICAgICAgIGFwcGVuZF90cmFpdC5ycyAgIDwtIHRyYWl0IEFwcGVuZDsgaW1wbCBBcHBlbmQ8VD4gZm9yIExpc3Qge307CiAgICAgICAgbGlzdC5ycyAgICAgICAgICAgPC0gaXMgZGVmaW5lZCBzdHJ1Y3QgTGlzdDsKICAgICAgICBtb2QucnMgICAgICAgICAgICA8LSBwdWIgbW9kIGxpc3Q7IHB1YiB1c2UgbGlzdDo6TGlzdDsKCmxpYi5ycyA8LSBwdWIgbW9kIGxpc3Q7IHB1YiB1c2UgbGlzdDo6TGlzdDsKCnRoaXMgaXMgYSBsaWIgY3JhdGUgPQAAAAAAAAA9AAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAASQEAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"cut",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAAWAAAAcHViIG1vZCBhcHBlbmRfdHJhaXQ7Cg",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					4,
					"right_delete",
					null,
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAAcAMAAAAAAAAAAwAAAAAAAAABAAAAdQMAAAAAAAAAAwAAAAAAAAABAAAAYgMAAAAAAAAAAwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAAA"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": " ap"
					},
					"AwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABMAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					4,
					"left_delete",
					null,
					"BAAAABQAAAAAAAAAFAAAAAAAAAABAAAAIBMAAAAAAAAAEwAAAAAAAAABAAAAIBIAAAAAAAAAEgAAAAAAAAABAAAAcBEAAAAAAAAAEQAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert_completion",
					{
						"completion": "#[allow(${1:lint})]",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "allow"
					},
					"AgAAABEAAAAAAAAAEQAAAAAAAAABAAAAYREAAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAABkAAAAAAAAAGQAAAAAAAAAEAAAAbGludBgAAAAAAAAAGAAAAAAAAAABAAAAKBMAAAAAAAAAEwAAAAAAAAAFAAAAYWxsb3c",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					2,
					"right_delete",
					null,
					"AgAAABMAAAAAAAAAEwAAAAAAAAABAAAAKRMAAAAAAAAAEwAAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					2,
					"left_delete",
					null,
					"AgAAABIAAAAAAAAAEgAAAAAAAAABAAAAWxEAAAAAAAAAEQAAAAAAAAABAAAAIw",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABEAAAAAAAAAEQAAAAAAAAADAAAAYXBw",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait;\",\"range\":{\"end\":{\"character\":4,\"line\":4},\"start\":{\"character\":4,\"line\":4}}},\"additionalTextEdits\":[],\"label\":\"append_trait;\",\"deprecated\":false,\"filterText\":\"append_trait;\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							238,
							483,
							1
						],
						"trigger": "append_trait;"
					},
					"AQAAABEAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": "\npub"
					},
					"BAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAP///////+9/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": " uise"
					},
					"BQAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwAAAAAAAAAPQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADgAAAAAAAAAOAAAAAAAAAAFAAAAdWlzZSA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": " ap"
					},
					"AwAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_trait\",\"range\":{\"end\":{\"character\":10,\"line\":7},\"start\":{\"character\":8,\"line\":7}}},\"additionalTextEdits\":[],\"label\":\"append_trait\",\"deprecated\":false,\"filterText\":\"append_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							253,
							505,
							3
						],
						"trigger": "append_trait"
					},
					"AgAAADwAAAAAAAAAPAAAAAAAAAACAAAAYXA8AAAAAAAAAEgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "::Ap"
					},
					"BAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"Append\",\"additionalTextEdits\":[],\"label\":\"Append\",\"deprecated\":false,\"textEdit\":{\"newText\":\"Append\",\"range\":{\"end\":{\"character\":24,\"line\":7},\"start\":{\"character\":22,\"line\":7}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"append function for List\\ncan append any data type\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							255,
							507,
							4
						],
						"trigger": "Append"
					},
					"AgAAAEoAAAAAAAAASgAAAAAAAAACAAAAQXBKAAAAAAAAAFAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAAFEAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFAAAAAAAAAAUAAAAAAAAAACAAAAOyc",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"duplicate_line",
					null,
					"AQAAAFIAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAGgAAAAAAAAAaAAAAAAAAAAGAAAAQXBwZW5k",
					"AQAAAAAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "App"
					},
					"AwAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"duplicate_line",
					null,
					"AQAAAB8AAAAAAAAAMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					5,
					"left_delete",
					null,
					"BQAAAC4AAAAAAAAALgAAAAAAAAABAAAAdC0AAAAAAAAALQAAAAAAAAABAAAAaSwAAAAAAAAALAAAAAAAAAABAAAAYSsAAAAAAAAAKwAAAAAAAAABAAAAcioAAAAAAAAAKgAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "back"
					},
					"BAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "_traiot"
					},
					"BwAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					2,
					"left_delete",
					null,
					"AgAAADQAAAAAAAAANAAAAAAAAAABAAAAdDMAAAAAAAAAMwAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					5,
					"left_delete",
					null,
					"BQAAAC4AAAAAAAAALgAAAAAAAAABAAAAXy0AAAAAAAAALQAAAAAAAAABAAAAaywAAAAAAAAALAAAAAAAAAABAAAAYysAAAAAAAAAKwAAAAAAAAABAAAAYSoAAAAAAAAAKgAAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "front)"
					},
					"BgAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"left_delete",
					null,
					"AQAAAC8AAAAAAAAALwAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAC8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAAIMAAAAAAAAAgwAAAAAAAAABAAAAO4AAAAAAAAAAgAAAAAAAAAADAAAAQXBwfgAAAAAAAAB+AAAAAAAAAAIAAAA6OnIAAAAAAAAAcgAAAAAAAAAMAAAAYXBwZW5kX3RyYWl0",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAP///////+9/"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"textEdit\":{\"newText\":\"append_front_trait\",\"range\":{\"end\":{\"character\":11,\"line\":9},\"start\":{\"character\":8,\"line\":9}}},\"additionalTextEdits\":[],\"label\":\"append_front_trait\",\"deprecated\":false,\"filterText\":\"append_front_trait\",\"kind\":9,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							297,
							572,
							3
						],
						"trigger": "append_front_trait"
					},
					"AgAAAHIAAAAAAAAAcgAAAAAAAAADAAAAYXBwcgAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": "::Ap"
					},
					"BAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"AppendFront\",\"additionalTextEdits\":[],\"label\":\"AppendFront\",\"deprecated\":false,\"textEdit\":{\"newText\":\"AppendFront\",\"range\":{\"end\":{\"character\":30,\"line\":9},\"start\":{\"character\":28,\"line\":9}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"appends to front of the list\\nmeaning: list.insert(o, item)\"},\"kind\":8,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							299,
							575,
							4
						],
						"trigger": "AppendFront"
					},
					"AgAAAIYAAAAAAAAAhgAAAAAAAAACAAAAQXCGAAAAAAAAAJEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									4,
									4
								],
								[
									4,
									16
								],
								"append",
								476
							],
							[
								[
									8,
									8
								],
								[
									8,
									20
								],
								"append",
								476
							]
						]
					},
					"AgAAAFQAAAAAAAAAWgAAAAAAAAAMAAAAYXBwZW5kX3RyYWl0EQAAAAAAAAAXAAAAAAAAAAwAAABhcHBlbmRfdHJhaXQ",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									5,
									4
								],
								[
									5,
									22
								],
								"append_front",
								478
							],
							[
								[
									9,
									8
								],
								[
									9,
									26
								],
								"append_front",
								478
							]
						]
					},
					"AgAAAGYAAAAAAAAAcgAAAAAAAAASAAAAYXBwZW5kX2Zyb250X3RyYWl0HQAAAAAAAAApAAAAAAAAABIAAABhcHBlbmRfZnJvbnRfdHJhaXQ",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/builtins.rs",
			"settings":
			{
				"buffer_size": 281,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "examples/ideas.rs",
			"settings":
			{
				"buffer_size": 245,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\nexam,"
					},
					"BgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAUAAAAAAAAABQAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert_completion",
					{
						"completion": "\n\n#![allow(\n    dead_code,\n    unused_imports,\n    unused_variables,\n    unused_macros,\n    unused_assignments,\n    unused_mut,\n)]\n\nextern crate color_backtrace;\n\nuse std::fmt::Display;\n\nfn print<T: Display>(arg: T) {\n    println!(\"{}\", arg);\n}\n\n\nfn _main1() {\n\n}\n\nfn _main2() {\n\n}\n\nfn _main3() {\n\n}\n\nfn _main4() {\n\n}\n\nfn _main5() {\n\n}\n\nfn _main6() {\n\n}\n\nfn main() {\n    color_backtrace::install();\n\n    _main1();\n    // _main2();\n    // _main3();\n    // _main4();\n    // _main5();\n    // _main6();\n}\n",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "example_code"
					},
					"AgAAAAEAAAAAAAAAAQAAAAAAAAAEAAAAZXhhbQEAAAAAAAAA9gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAKQAAAAAAAAApAAAAAAAAABRAAAAdXNlIHN0ZDo6Zm10OjpEaXNwbGF5OwoKZm4gcHJpbnQ8VDogRGlzcGxheT4oYXJnOiBUKSB7CiAgICBwcmludGxuISgie30iLCBhcmcpOwp9",
					"AQAAAAAAAAABAAAA9QAAAAAAAACkAAAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					19,
					"cut",
					null,
					"EwAAAKQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAAOAAAAZm4gX21haW4xKCkgewqkAAAAAAAAAKQAAAAAAAAAAQAAAAqkAAAAAAAAAKQAAAAAAAAAAgAAAH0KpAAAAAAAAACkAAAAAAAAAAEAAAAKpAAAAAAAAACkAAAAAAAAAA4AAABmbiBfbWFpbjIoKSB7CqQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAACAAAAfQqkAAAAAAAAAKQAAAAAAAAAAQAAAAqkAAAAAAAAAKQAAAAAAAAADgAAAGZuIF9tYWluMygpIHsKpAAAAAAAAACkAAAAAAAAAAEAAAAKpAAAAAAAAACkAAAAAAAAAAIAAAB9CqQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAAOAAAAZm4gX21haW40KCkgewqkAAAAAAAAAKQAAAAAAAAAAQAAAAqkAAAAAAAAAKQAAAAAAAAAAgAAAH0KpAAAAAAAAACkAAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					7,
					"cut",
					null,
					"BwAAAKQAAAAAAAAApAAAAAAAAAAOAAAAZm4gX21haW41KCkgewqkAAAAAAAAAKQAAAAAAAAAAQAAAAqkAAAAAAAAAKQAAAAAAAAAAgAAAH0KpAAAAAAAAACkAAAAAAAAAAEAAAAKpAAAAAAAAACkAAAAAAAAAA4AAABmbiBfbWFpbjYoKSB7CqQAAAAAAAAApAAAAAAAAAABAAAACqQAAAAAAAAApAAAAAAAAAACAAAAfQo",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					6,
					"cut",
					null,
					"BgAAANIAAAAAAAAA0gAAAAAAAAAOAAAAICAgIF9tYWluMSgpOwrSAAAAAAAAANIAAAAAAAAAEQAAACAgICAvLyBfbWFpbjIoKTsK0gAAAAAAAADSAAAAAAAAABEAAAAgICAgLy8gX21haW4zKCk7CtIAAAAAAAAA0gAAAAAAAAARAAAAICAgIC8vIF9tYWluNCgpOwrSAAAAAAAAANIAAAAAAAAAEQAAACAgICAvLyBfbWFpbjUoKTsK0gAAAAAAAADSAAAAAAAAABEAAAAgICAgLy8gX21haW42KCk7Cg",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"reindent",
					null,
					"AQAAANEAAAAAAAAA1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\nVec"
					},
					"BgAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADaAAAAAAAAAAAAAADRAAAAAAAAANEAAAAAAAAABAAAACAgICDWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"filterText\":\"VecDeque\",\"data\":{\"position\":{\"textDocument\":{\"uri\":\"file:///home/alexzander/Alexzander__/programming/rust/python/examples/ideas.rs\"},\"position\":{\"character\":7,\"line\":18}},\"imports\":[{\"full_import_path\":\"std::collections::VecDeque\",\"imported_name\":\"VecDeque\"}]},\"additionalTextEdits\":[],\"label\":\"VecDeque (use std::collections::VecDeque)\",\"deprecated\":false,\"textEdit\":{\"newText\":\"VecDeque\",\"range\":{\"end\":{\"character\":7,\"line\":18},\"start\":{\"character\":4,\"line\":18}}},\"documentation\":{\"kind\":\"markdown\",\"value\":\"A double-ended queue implemented with a growable ring buffer.\\n\\nThe \\\"default\\\" usage of this type as a queue is to use [`push_back`] to add to\\nthe queue, and [`pop_front`] to remove from the queue. [`extend`] and [`append`]\\npush onto the back in this manner, and iterating over `VecDeque` goes front\\nto back.\\n\\nA `VecDeque` with a known list of items can be initialized from an array:\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet deq = VecDeque::from([-1, 0, 1]);\\n```\\n\\nSince `VecDeque` is a ring buffer, its elements are not necessarily contiguous\\nin memory. If you want to access the elements as a single slice, such as for\\nefficient sorting, you can use [`make_contiguous`]. It rotates the `VecDeque`\\nso that its elements do not wrap, and returns a mutable slice to the\\nnow-contiguous element sequence.\\n\\n[`push_back`]: VecDeque::push_back\\n[`pop_front`]: VecDeque::pop_front\\n[`extend`]: VecDeque::extend\\n[`append`]: VecDeque::append\\n[`make_contiguous`]: VecDeque::make_contiguous\"},\"kind\":22,\"sortText\":\"fffffffd\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							18,
							32,
							6
						],
						"trigger": "VecDeque"
					},
					"AgAAANYAAAAAAAAA1gAAAAAAAAADAAAAVmVj1gAAAAAAAADeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									10,
									2
								],
								[
									10,
									2
								],
								"\n",
								null
							],
							[
								[
									10,
									2
								],
								[
									10,
									2
								],
								"\n",
								null
							],
							[
								[
									10,
									2
								],
								[
									10,
									2
								],
								"use std::collections::VecDeque;",
								null
							]
						]
					},
					"AwAAAIMAAAAAAAAAogAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "::bnew"
					},
					"BgAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAgGNA"
				],
				[
					39,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAAEBAAAAAAAAAQEAAAAAAAAEAAAAYm5ldw",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "bew"
					},
					"AwAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAAEBAAAAAAAAAQEAAAAAAAADAAAAYmV3",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"detail\":\"fn() -> VecDeque<T, Global>\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"new()$0\",\"range\":{\"end\":{\"character\":17,\"line\":20},\"start\":{\"character\":14,\"line\":20}}},\"label\":\"new()\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Creates an empty `VecDeque`.\\n\\n# Examples\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet vector: VecDeque<u32> = VecDeque::new();\\n```\"},\"kind\":3,\"sortText\":\"fffffffd\",\"filterText\":\"new\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							27,
							42,
							3
						],
						"trigger": "new"
					},
					"AgAAAAEBAAAAAAAAAQEAAAAAAAADAAAAbmV3AQEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAEpA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " deque"
					},
					"BgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAQBAAAAAAAABQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					2,
					"left_delete",
					null,
					"AgAAAAUBAAAAAAAABQEAAAAAAAABAAAAIAQBAAAAAAAABAEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAAUBAAAAAAAABQEAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAAUBAAAAAAAABQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\neq"
					},
					"BAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAP///////+9/"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAB0BAAAAAAAAHQEAAAAAAAABAAAAcRwBAAAAAAAAHAEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "deq"
					},
					"AwAAABwBAAAAAAAAHQEAAAAAAAAAAAAAHQEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					5,
					"right_delete",
					null,
					"BQAAAP8AAAAAAAAA/wAAAAAAAAABAAAAZP8AAAAAAAAA/wAAAAAAAAABAAAAZf8AAAAAAAAA/wAAAAAAAAABAAAAcf8AAAAAAAAA/wAAAAAAAAABAAAAdf8AAAAAAAAA/wAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "dec"
					},
					"AwAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABoBAAAAAAAAGgEAAAAAAAADAAAAZGVx",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAYGhA"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "dec."
					},
					"BAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "pu"
					},
					"AgAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"command\":{\"command\":\"editor.action.triggerParameterHints\",\"title\":\"triggerParameterHints\"},\"detail\":\"fn(&mut self, T)\",\"additionalTextEdits\":[],\"textEdit\":{\"newText\":\"push_front(${1:value})$0\",\"range\":{\"end\":{\"character\":10,\"line\":21},\"start\":{\"character\":8,\"line\":21}}},\"label\":\"push_front(…)\",\"deprecated\":false,\"insertTextFormat\":2,\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prepends an element to the `VecDeque`.\\n\\n# Examples\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet mut d = VecDeque::new();\\nd.push_front(1);\\nd.push_front(2);\\nassert_eq!(d.front(), Some(&2));\\n```\"},\"kind\":2,\"sortText\":\"fffffffd\",\"filterText\":\"push_front\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							56,
							71,
							2
						],
						"trigger": "push_front"
					},
					"AgAAAB4BAAAAAAAAHgEAAAAAAAACAAAAcHUeAQAAAAAAAC8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"paste",
					null,
					"AQAAAPMAAAAAAAAAJQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "item"
					},
					"BAAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAACIBAAAAAAAAIgEAAAAAAAAFAAAAY29sb3I",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "item"
					},
					"BAAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					2,
					"cut",
					null,
					"AgAAACoBAAAAAAAAKgEAAAAAAAAjAAAAICAgIGxldCBtdXQgZGVjID0gVmVjRGVxdWU6Om5ldygpOwoqAQAAAAAAACoBAAAAAAAAGgAAACAgICBkZWMucHVzaF9mcm9udCh2YWx1ZSkK",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAuIRA"
				],
				[
					139,
					1,
					"reindent",
					null,
					"AQAAACkBAAAAAAAALQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAAAA"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "opr"
					},
					"AwAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAC0BAAAAAAAALQEAAAAAAAADAAAAb3By",
					"AQAAAAAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADIBAAAAAAAANAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgEAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "123"
					},
					"AwAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADcBAAAAAAAAOAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"duplicate_line",
					null,
					"AQAAADkBAAAAAAAASQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAEAAAAAAAA4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEMBAAAAAAAAQwEAAAAAAAADAAAAMTIz",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEQBAAAAAAAARgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "asd"
					},
					"AwAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					3,
					"left_delete",
					null,
					"AwAAAEcBAAAAAAAARwEAAAAAAAABAAAAZEYBAAAAAAAARgEAAAAAAAABAAAAc0UBAAAAAAAARQEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAASAEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEQBAAAAAAAARAEAAAAAAAABAAAAIkQBAAAAAAAARAEAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAAEMBAAAAAAAAQwEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEMBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "asd"
					},
					"AwAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"cut",
					null,
					"AQAAAPIAAAAAAAAA8gAAAAAAAABYAAAACiAgICBsZXQgcHJpbnQgPSB8aXRlbXwgcHJpbnRsbiEoImBjb2xvcmA6IHt9IiwgaXRlbSk7CiAgICBwcmludCgxMjMpOwogICAgcHJpbnQoImFzZCIpOw",
					"AQAAAAAAAAABAAAASgEAAAAAAADyAAAAAAAAAP///////+9/"
				]
			]
		},
		{
			"file": "TODO.md",
			"settings":
			{
				"buffer_size": 473,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": " implement"
					},
					"CgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAP///////+9/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " any"
					},
					"BAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " functions"
					},
					"CgAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQBAAAAAAAABQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " your"
					},
					"BQAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAEAAAAAAAAIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " List"
					},
					"BQAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQEAAAAAAAANAQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAAkBAAAAAAAACQEAAAAAAAAFAAAAeW91ciA",
					"AQAAAAAAAAABAAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/run_python.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					""
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Test"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/R/R.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/ShellScript/ShellScript.sublime-build",
					""
				],
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				]
			],
			[
				"Packages/MarkdownPreview/Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"close",
				"File: Close All"
			],
			[
				"toml",
				"Set Syntax: TOML"
			],
			[
				"breakpoint",
				"Debugger: Add Function Breakpoint"
			],
			[
				"set run",
				"Set Syntax: Rust Enhanced"
			],
			[
				"pre rust",
				"Preferences: LSP-rust-analyzer Settings"
			],
			[
				"rust en",
				"Set Syntax: Rust Enhanced"
			],
			[
				"set syn ru",
				"Set Syntax: Rust Enhanced"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pres rust",
				"Preferences: LSP-rust-analyzer Settings"
			],
			[
				"rust-ana pre",
				"Preferences: LSP-rust-analyzer Settings"
			],
			[
				"edit",
				"BetterSnippetManager: Edit Snippets"
			],
			[
				"better",
				"BetterSnippetManager: Edit Snippets"
			],
			[
				"snippet maa",
				"BetterSnippetManager: Edit Snippets"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"mak",
				"Set Syntax: Makefile"
			],
			[
				"set make",
				"Set Syntax: Makefile Plus"
			],
			[
				"ui sel",
				"UI: Select Color Scheme"
			],
			[
				"us",
				"UI: Select Color Scheme"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"cy",
				"Set Syntax: Cython"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"pyt",
				"SublimeREPL: Python"
			],
			[
				"set cytho",
				"Set Syntax: Cython"
			],
			[
				"set mark",
				"Set Syntax: Markdown"
			],
			[
				"conver",
				"Indentation: Convert to Spaces"
			],
			[
				"clo",
				"File: Close All"
			],
			[
				"set mar",
				"Set Syntax: Markdown"
			],
			[
				"color scheme",
				"UI: Select Color Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"project",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp R",
				"Preferences: LSP-R Settings"
			],
			[
				"outline",
				"Outline: Toggle Sort"
			],
			[
				"lsp",
				"LSP: Restart Server"
			],
			[
				"lspre",
				"LSP: Restart Server"
			],
			[
				"lsp restar",
				"LSP: Restart Server"
			],
			[
				"autosplit",
				"Autosplit: Join argument list"
			],
			[
				"origami",
				"Preferences: Origami Key Bindings"
			],
			[
				" ori des",
				"Origami: Destroy Current Pane"
			],
			[
				"origami ",
				"Preferences: Origami Settings"
			],
			[
				"orign de",
				"Origami: Destroy Current Pane"
			],
			[
				"origami focus",
				"Origami: Focus on Pane on the Right"
			],
			[
				"origamicreate",
				"Origami: Create Pane on the Right"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"lsp rest",
				"LSP: Restart Server"
			],
			[
				"lsp resta",
				"LSP: Restart Server"
			],
			[
				"lsp re",
				"LSP: Find References"
			],
			[
				"pres auto",
				"Preferences: AutoPep8 Settings – User"
			],
			[
				"djan",
				"Set Syntax: Django HTML"
			],
			[
				"jin",
				"Set Syntax: HTML (Jinja2)"
			],
			[
				"djang",
				"Set Syntax: Django HTML"
			],
			[
				"git dif",
				"Git: Diff Current File"
			],
			[
				"html djan",
				"Set Syntax: Django HTML"
			],
			[
				"lsp ",
				"LSP: Troubleshoot Server"
			],
			[
				"ls",
				"LSP: Restart Server"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"prefer setting",
				"Preferences: Settings"
			],
			[
				"git bla",
				"Git: Blame"
			],
			[
				"git",
				"Git: Gui"
			],
			[
				"commit",
				"Git: Commit history"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gits",
				"Git: Diff Current File (Ignore Whitespace)"
			],
			[
				"gitig",
				"Gitignore: New gitignore"
			],
			[
				"insert",
				"Gitmoji: Insert emoji"
			],
			[
				"gio",
				"Gitmoji: Insert emoji"
			],
			[
				"docker",
				"Set Syntax: Dockerfile"
			],
			[
				"set docker",
				"Set Syntax: Dockerfile"
			],
			[
				"convert",
				"Indentation: Convert to Spaces"
			],
			[
				"conver ",
				"Indentation: Convert to Spaces"
			],
			[
				"set html",
				"Set Syntax: HTML"
			],
			[
				"django",
				"Set Syntax: Django HTML"
			],
			[
				"set syn d",
				"Set Syntax: Django HTML"
			],
			[
				"set djano",
				"Set Syntax: Django HTML"
			],
			[
				"set syn djan",
				"Set Syntax: Django HTML"
			],
			[
				"set synt dj",
				"Set Syntax: Django HTML"
			],
			[
				"lspre ",
				"LSP: Rename"
			],
			[
				"book",
				"Bookmarks: Select Next"
			],
			[
				"bok",
				"Bookmarks: Toggle"
			],
			[
				"bo",
				"Bookmarks: Toggle"
			],
			[
				"Snippet: ",
				"BetterSnippetManager: Edit Snippets"
			],
			[
				"isntal",
				"Package Control: Install Package"
			],
			[
				"helk",
				"Helium: List Kernels"
			],
			[
				"repl py",
				"SublimeREPL: Python"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"ter",
				"Terminal: Open"
			],
			[
				"termianl",
				"Terminal View: Open Bash Terminal"
			],
			[
				"terminalview",
				"Preferences: Terminal View: Color Scheme"
			],
			[
				"terminalv",
				"Terminal View: Open Bash Terminal"
			],
			[
				"terminal",
				"Terminality: Browse Commands..."
			],
			[
				"termina",
				"Terminality: Browse Commands..."
			],
			[
				"termius",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus Utilities: Select Theme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"edi",
				"BetterSnippetManager: Edit Snippets"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"highg",
				"HighlightWords: Highlight Words"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"set syn py",
				"Set Syntax: Python"
			],
			[
				"yto",
				"Set Syntax: Todo"
			],
			[
				"lsp restart",
				"LSP: Restart Server"
			],
			[
				"synax jin",
				"Set Syntax: HTML (Jinja2)"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"ui ch",
				"UI: Select Color Scheme"
			],
			[
				"res",
				"LSP: Restart Server"
			],
			[
				"stop",
				"Live Server: Stop"
			],
			[
				"live",
				"Live Server: Open In Browser"
			],
			[
				"start",
				"Live Server: Start"
			],
			[
				"sto",
				"Live Server: Stop"
			],
			[
				"prefer live",
				"Preferences: Live Server Settings"
			],
			[
				"live server",
				"Live Server: Open In Browser"
			],
			[
				"li",
				"Live Server: Stop"
			],
			[
				"restart",
				"LSP: Restart Server"
			],
			[
				"ui ",
				"UI: Select Theme"
			],
			[
				"lsp refere",
				"LSP: Find References"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"find",
				"File Manager: Find In Files"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"find in",
				"File Manager: Find In Files"
			],
			[
				"un",
				"Code Folding: Unfold All"
			],
			[
				"fold all",
				"Code Folding: Fold All"
			],
			[
				"find all",
				"Code Folding: Unfold All"
			],
			[
				"brea",
				"Xdebug: Add/Remove Breakpoint"
			],
			[
				"stop dec",
				"Xdebug: Stop Debugging (Close Windows)"
			],
			[
				"debug",
				"Xdebug: Restart Session"
			],
			[
				"lsp sym",
				"LSP: Goto Symbol"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"new file",
				"File: New View into File"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"Install Package Control",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 184.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/alexzander/Alexzander__/programming/rust/python",
		"/home/alexzander/Alexzander__/programming/rust/python/examples",
		"/home/alexzander/Alexzander__/programming/rust/python/src",
		"/home/alexzander/Alexzander__/programming/rust/python/src/list"
	],
	"file_history":
	[
		"/home/alexzander/Alexzander__/programming/rust/python/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/src/list.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/vec_deque/mod.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/traits.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/docs/python_list/showcase.md",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/fmt/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/src/object.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/examples/python_list.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/rust-python-objects.sublime-project",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/examples/example.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/Makefile",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/rust-core-dev.sublime-project",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/examples/list.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/src/rust-core-dev.sublime-workspace",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/src/aesthetics.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/tests/test_aesthetics.rs",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/Cargo.lock",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/Cargo.toml",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/README.md",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/TODO.md",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/LICENSE",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/CONTRIBUTING.md",
		"/home/alexzander/Alexzander__/programming/rust/core-dev/.gitignore",
		"/home/alexzander/Alexzander__/programming/code_to_analyze/lapce/defaults/settings.toml",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs",
		"/home/alexzander/Alexzander__/programming/rust/web-server/src/templates/404.html",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/io/mod.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs",
		"/home/alexzander/Alexzander__/programming/rust/web-server/src/templates",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/turtle-1.0.0-rc.3/src/turtle.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/docs/python_list/append_pbool.md",
		"/home/alexzander/Alexzander__/programming/rust/python/target/doc/python/index.html",
		"/home/alexzander/Alexzander__/programming/rust/python/src/int.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/src/dict.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/.gitignore",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
		"/home/alexzander/Alexzander__/programming/rust/python/src/_char.rs",
		"/home/alexzander/rust/rust.md",
		"/home/alexzander/Alexzander__/programming/projects/alexzanderr.github.io/cv/cv.html",
		"/home/alexzander/Alexzander__/programming/projects/alexzanderr.github.io/connect_with_me.json",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/error.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/io/error.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/mod.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/str/pattern.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/lifetime.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/Cargo.toml",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/collections.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/hashmap.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/err.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/docs/docs.md",
		"/home/alexzander/Alexzander__/programming/rust/core/TODO.md",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/generics.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/src/algorithms.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/color-backtrace-0.5.1/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/spinners.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/rust-core.sublime-project",
		"/home/alexzander/Alexzander__/manjaro-21-xfce/aur-packages/teams/PKGBUILD",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs",
		"/home/alexzander/.config/sublime-text/Packages/User/snippets/rust,/example_code.sublime-snippet",
		"/home/alexzander/Alexzander__/programming/rust/core/tests/test_algorithms.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/rstest-0.12.0/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/ProgrammingProblems/leetcode/two-sum/solution.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/test.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/flow_control.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/epl",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/defaults.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/panic_test.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/src/main.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/sub.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/works.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/mods.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/enum.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/src/handler/mod.rs",
		"/home/alexzander/.config/sublime-text/Packages/User/snippets/rust/print_python.sublime-snippet",
		"/home/alexzander/Alexzander__/programming/rust/core/src/handler/something.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/subprocess-0.2.8/src/os_common.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/subprocess-0.2.8/src/builder.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/error.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/own.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/python.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/types.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/structs.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/ctrlc.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/tests/assets.rs",
		"/home/alexzander/Alexzander__/programming/ProgrammingProblems/leetcode/palindrome-number/rust/main.rs",
		"/home/alexzander/Alexzander__/programming/ProgrammingProblems/leetcode/palindrome-number/rust/solution.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/assets/syntaxes/02_Extra/TypeScript.sublime-syntax",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
		"/home/alexzander/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs",
		"/home/alexzander/.config/sublime-text/Packages/User/snippets/rust/allow_everything.sublime-snippet",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/macros.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/oop.rs",
		"/home/alexzander/.config/sublime-text/Packages/User/snippets/rust/print_python_macro.sublime-snippet",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/synh.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/html_to_stdout.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/synstats.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/syn_stats.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/syntest.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/syntect-4.6.0/src/dumps.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/syntect-4.6.0/src/highlighting/theme_set.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/syntect-4.6.0/src/easy.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/synhtml.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/html_gen.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/examples/syntest.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/synhtml-css-classes.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/syncat.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/src/bin/bat/app.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/src/bin/bat/clap_app.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/src/bin/bat/main.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/examples/inputs.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/bat/Cargo.toml",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/parsyncat.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/examples/gendata.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/Makefile",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/syntect-4.6.0/src/highlighting/theme.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/src/highlighting/theme.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/repos/syntect/src/highlighting/theme_load.rs",
		"/home/alexzander/.cargo/registry/src/github.com-1ecc6299db9ec823/syntect-4.6.0/src/util.rs",
		"/home/alexzander/Alexzander__/programming/rust/core/target/doc/syn/macro.custom_keyword!.html"
	],
	"find":
	{
		"height": 64.0
	},
	"find_in_files":
	{
		"height": 176.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"FromIter",
			"fromiter",
			"push"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/list/list.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5089,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										144,
										145
									],
									[
										310,
										311
									],
									[
										925,
										926
									],
									[
										1018,
										1019
									],
									[
										1055,
										1056
									],
									[
										1245,
										1246
									],
									[
										1273,
										1274
									],
									[
										1498,
										1499
									],
									[
										1529,
										1530
									],
									[
										2502,
										2503
									],
									[
										2537,
										2538
									],
									[
										2725,
										2726
									],
									[
										2754,
										2755
									],
									[
										2969,
										2970
									],
									[
										3154,
										3155
									],
									[
										3358,
										3359
									],
									[
										3388,
										3389
									],
									[
										3591,
										3592
									],
									[
										3618,
										3619
									],
									[
										3961,
										3962
									],
									[
										3991,
										3992
									],
									[
										4310,
										4311
									],
									[
										4337,
										4338
									],
									[
										4484,
										4485
									],
									[
										4520,
										4521
									],
									[
										4785,
										4786
									],
									[
										4824,
										4825
									],
									[
										5087,
										5088
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										150,
										151
									],
									[
										309,
										310
									],
									[
										1092,
										1093
									],
									[
										1093,
										1094
									],
									[
										1103,
										1104
									],
									[
										1170,
										1171
									],
									[
										1289,
										1290
									],
									[
										1295,
										1296
									],
									[
										1306,
										1307
									],
									[
										1337,
										1338
									],
									[
										1355,
										1356
									],
									[
										1361,
										1362
									],
									[
										1373,
										1374
									],
									[
										1417,
										1418
									],
									[
										1434,
										1435
									],
									[
										1440,
										1441
									],
									[
										1452,
										1453
									],
									[
										1496,
										1497
									],
									[
										1541,
										1542
									],
									[
										1575,
										1576
									],
									[
										1592,
										1593
									],
									[
										2500,
										2501
									],
									[
										2672,
										2673
									],
									[
										2678,
										2679
									],
									[
										2697,
										2698
									],
									[
										2723,
										2724
									],
									[
										2767,
										2768
									],
									[
										2788,
										2789
									],
									[
										2798,
										2799
									],
									[
										2967,
										2968
									],
									[
										3167,
										3168
									],
									[
										3184,
										3185
									],
									[
										3194,
										3195
									],
									[
										3356,
										3357
									],
									[
										3401,
										3402
									],
									[
										3417,
										3418
									],
									[
										3427,
										3428
									],
									[
										3589,
										3590
									],
									[
										3688,
										3689
									],
									[
										3745,
										3746
									],
									[
										3758,
										3759
									],
									[
										3772,
										3773
									],
									[
										3782,
										3783
									],
									[
										3959,
										3960
									],
									[
										4068,
										4069
									],
									[
										4081,
										4082
									],
									[
										4091,
										4092
									],
									[
										4308,
										4309
									],
									[
										4393,
										4394
									],
									[
										4411,
										4412
									],
									[
										4440,
										4441
									],
									[
										4482,
										4483
									],
									[
										4567,
										4568
									],
									[
										4602,
										4603
									],
									[
										4612,
										4613
									],
									[
										4783,
										4784
									],
									[
										4874,
										4875
									],
									[
										4908,
										4909
									],
									[
										4918,
										4919
									],
									[
										5085,
										5086
									]
								],
								"scope": "<default>.l1.rb"
							},
							"rb_l2_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1118,
										1119
									],
									[
										1164,
										1165
									],
									[
										1330,
										1331
									],
									[
										1331,
										1332
									],
									[
										1395,
										1396
									],
									[
										1411,
										1412
									],
									[
										1474,
										1475
									],
									[
										1490,
										1491
									],
									[
										1666,
										1667
									],
									[
										1667,
										1668
									],
									[
										1674,
										1675
									],
									[
										1739,
										1740
									],
									[
										1776,
										1777
									],
									[
										1778,
										1779
									],
									[
										1786,
										1787
									],
									[
										1787,
										1788
									],
									[
										1856,
										1857
									],
									[
										2043,
										2044
									],
									[
										2152,
										2153
									],
									[
										2153,
										2154
									],
									[
										2159,
										2160
									],
									[
										2161,
										2162
									],
									[
										2163,
										2164
									],
									[
										2471,
										2472
									],
									[
										2487,
										2488
									],
									[
										2494,
										2495
									],
									[
										2813,
										2814
									],
									[
										2961,
										2962
									],
									[
										3209,
										3210
									],
									[
										3350,
										3351
									],
									[
										3442,
										3443
									],
									[
										3583,
										3584
									],
									[
										3707,
										3708
									],
									[
										3744,
										3745
									],
									[
										3828,
										3829
									],
									[
										3829,
										3830
									],
									[
										3862,
										3863
									],
									[
										3894,
										3895
									],
									[
										3910,
										3911
									],
									[
										3953,
										3954
									],
									[
										4152,
										4153
									],
									[
										4153,
										4154
									],
									[
										4192,
										4193
									],
									[
										4247,
										4248
									],
									[
										4262,
										4263
									],
									[
										4302,
										4303
									],
									[
										4452,
										4453
									],
									[
										4476,
										4477
									],
									[
										4654,
										4655
									],
									[
										4655,
										4656
									],
									[
										4699,
										4700
									],
									[
										4756,
										4757
									],
									[
										4959,
										4960
									],
									[
										4960,
										4961
									],
									[
										5003,
										5004
									],
									[
										5059,
										5060
									]
								],
								"scope": "<default>.l2.rb"
							},
							"rb_l3_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1152,
										1153
									],
									[
										1153,
										1154
									],
									[
										1694,
										1695
									],
									[
										1702,
										1703
									],
									[
										1726,
										1727
									],
									[
										1729,
										1730
									],
									[
										1884,
										1885
									],
									[
										1888,
										1889
									],
									[
										1899,
										1900
									],
									[
										1924,
										1925
									],
									[
										1951,
										1952
									],
									[
										1955,
										1956
									],
									[
										1966,
										1967
									],
									[
										1991,
										1992
									],
									[
										2017,
										2018
									],
									[
										2032,
										2033
									],
									[
										2191,
										2192
									],
									[
										2400,
										2401
									],
									[
										2870,
										2871
									],
									[
										2871,
										2872
									],
									[
										2893,
										2894
									],
									[
										2924,
										2925
									],
									[
										2950,
										2951
									],
									[
										2951,
										2952
									],
									[
										3259,
										3260
									],
									[
										3260,
										3261
									],
									[
										3282,
										3283
									],
									[
										3313,
										3314
									],
									[
										3339,
										3340
									],
									[
										3340,
										3341
									],
									[
										3492,
										3493
									],
									[
										3493,
										3494
									],
									[
										3515,
										3516
									],
									[
										3546,
										3547
									],
									[
										3572,
										3573
									],
									[
										3573,
										3574
									],
									[
										3874,
										3875
									],
									[
										3893,
										3894
									],
									[
										4463,
										4464
									],
									[
										4475,
										4476
									],
									[
										4737,
										4738
									],
									[
										4745,
										4746
									],
									[
										5040,
										5041
									],
									[
										5048,
										5049
									]
								],
								"scope": "<default>.l3.rb"
							},
							"rb_l4_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1727,
										1728
									],
									[
										1728,
										1729
									],
									[
										1922,
										1923
									],
									[
										1923,
										1924
									],
									[
										1989,
										1990
									],
									[
										1990,
										1991
									],
									[
										2223,
										2224
									],
									[
										2227,
										2228
									],
									[
										2238,
										2239
									],
									[
										2264,
										2265
									],
									[
										2295,
										2296
									],
									[
										2299,
										2300
									],
									[
										2310,
										2311
									],
									[
										2336,
										2337
									],
									[
										2366,
										2367
									],
									[
										2385,
										2386
									],
									[
										2910,
										2911
									],
									[
										2923,
										2924
									],
									[
										3299,
										3300
									],
									[
										3312,
										3313
									],
									[
										3532,
										3533
									],
									[
										3545,
										3546
									],
									[
										3883,
										3884
									],
									[
										3892,
										3893
									]
								],
								"scope": "<default>.l4.rb"
							},
							"rb_l5_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										2262,
										2263
									],
									[
										2263,
										2264
									],
									[
										2334,
										2335
									],
									[
										2335,
										2336
									],
									[
										2920,
										2921
									],
									[
										2922,
										2923
									],
									[
										3309,
										3310
									],
									[
										3311,
										3312
									],
									[
										3542,
										3543
									],
									[
										3544,
										3545
									]
								],
								"scope": "<default>.l5.rb"
							}
						},
						"selection":
						[
							[
								1249,
								1249
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/list/list.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 494.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/list/append_front.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2043,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										230,
										231
									],
									[
										317,
										318
									],
									[
										352,
										353
									],
									[
										498,
										499
									],
									[
										534,
										535
									],
									[
										727,
										728
									],
									[
										762,
										763
									],
									[
										905,
										906
									],
									[
										939,
										940
									],
									[
										1085,
										1086
									],
									[
										1123,
										1124
									],
									[
										1283,
										1284
									],
									[
										1321,
										1322
									],
									[
										1462,
										1463
									],
									[
										1497,
										1498
									],
									[
										1639,
										1640
									],
									[
										1675,
										1676
									],
									[
										1875,
										1876
									],
									[
										1910,
										1911
									],
									[
										2042,
										2043
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										285,
										286
									],
									[
										301,
										302
									],
									[
										373,
										374
									],
									[
										398,
										399
									],
									[
										413,
										414
									],
									[
										496,
										497
									],
									[
										555,
										556
									],
									[
										609,
										610
									],
									[
										624,
										625
									],
									[
										725,
										726
									],
									[
										783,
										784
									],
									[
										806,
										807
									],
									[
										821,
										822
									],
									[
										903,
										904
									],
									[
										960,
										961
									],
									[
										983,
										984
									],
									[
										998,
										999
									],
									[
										1083,
										1084
									],
									[
										1144,
										1145
									],
									[
										1170,
										1171
									],
									[
										1185,
										1186
									],
									[
										1281,
										1282
									],
									[
										1342,
										1343
									],
									[
										1370,
										1371
									],
									[
										1385,
										1386
									],
									[
										1460,
										1461
									],
									[
										1518,
										1519
									],
									[
										1541,
										1542
									],
									[
										1555,
										1556
									],
									[
										1637,
										1638
									],
									[
										1683,
										1684
									],
									[
										1744,
										1745
									],
									[
										1765,
										1766
									],
									[
										1788,
										1789
									],
									[
										1802,
										1803
									],
									[
										1873,
										1874
									],
									[
										1931,
										1932
									],
									[
										1954,
										1955
									],
									[
										1969,
										1970
									],
									[
										2040,
										2041
									]
								],
								"scope": "<default>.l1.rb"
							},
							"rb_l2_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										444,
										445
									],
									[
										476,
										477
									],
									[
										655,
										656
									],
									[
										705,
										706
									],
									[
										852,
										853
									],
									[
										883,
										884
									],
									[
										1029,
										1030
									],
									[
										1063,
										1064
									],
									[
										1216,
										1217
									],
									[
										1261,
										1262
									],
									[
										1416,
										1417
									],
									[
										1440,
										1441
									],
									[
										1586,
										1587
									],
									[
										1617,
										1618
									],
									[
										1702,
										1703
									],
									[
										1743,
										1744
									],
									[
										1833,
										1834
									],
									[
										1853,
										1854
									],
									[
										2000,
										2001
									],
									[
										2020,
										2021
									]
								],
								"scope": "<default>.l2.rb"
							},
							"rb_l3_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										456,
										457
									],
									[
										475,
										476
									],
									[
										670,
										671
									],
									[
										704,
										705
									],
									[
										865,
										866
									],
									[
										882,
										883
									],
									[
										1043,
										1044
									],
									[
										1062,
										1063
									],
									[
										1231,
										1232
									],
									[
										1260,
										1261
									],
									[
										1431,
										1432
									],
									[
										1439,
										1440
									],
									[
										1599,
										1600
									],
									[
										1616,
										1617
									],
									[
										1846,
										1847
									],
									[
										1852,
										1853
									],
									[
										2013,
										2014
									],
									[
										2019,
										2020
									]
								],
								"scope": "<default>.l3.rb"
							},
							"rb_l4_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										465,
										466
									],
									[
										474,
										475
									],
									[
										688,
										689
									],
									[
										703,
										704
									],
									[
										875,
										876
									],
									[
										881,
										882
									],
									[
										1054,
										1055
									],
									[
										1061,
										1062
									],
									[
										1252,
										1253
									],
									[
										1259,
										1260
									],
									[
										1609,
										1610
									],
									[
										1615,
										1616
									]
								],
								"scope": "<default>.l4.rb"
							}
						},
						"selection":
						[
							[
								500,
								500
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"_anf_new": "",
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/list/append_front_trait.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/list/append.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2282,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										216,
										217
									],
									[
										292,
										293
									],
									[
										671,
										672
									],
									[
										815,
										816
									],
									[
										845,
										846
									],
									[
										1014,
										1015
									],
									[
										1045,
										1046
									],
									[
										1186,
										1187
									],
									[
										1215,
										1216
									],
									[
										1359,
										1360
									],
									[
										1392,
										1393
									],
									[
										1550,
										1551
									],
									[
										1583,
										1584
									],
									[
										1722,
										1723
									],
									[
										1752,
										1753
									],
									[
										1892,
										1893
									],
									[
										1923,
										1924
									],
									[
										2121,
										2122
									],
									[
										2151,
										2152
									],
									[
										2281,
										2282
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										260,
										261
									],
									[
										276,
										277
									],
									[
										691,
										692
									],
									[
										716,
										717
									],
									[
										731,
										732
									],
									[
										813,
										814
									],
									[
										865,
										866
									],
									[
										897,
										898
									],
									[
										912,
										913
									],
									[
										1012,
										1013
									],
									[
										1065,
										1066
									],
									[
										1088,
										1089
									],
									[
										1103,
										1104
									],
									[
										1184,
										1185
									],
									[
										1235,
										1236
									],
									[
										1258,
										1259
									],
									[
										1273,
										1274
									],
									[
										1357,
										1358
									],
									[
										1412,
										1413
									],
									[
										1438,
										1439
									],
									[
										1453,
										1454
									],
									[
										1548,
										1549
									],
									[
										1603,
										1604
									],
									[
										1631,
										1632
									],
									[
										1646,
										1647
									],
									[
										1720,
										1721
									],
									[
										1772,
										1773
									],
									[
										1795,
										1796
									],
									[
										1809,
										1810
									],
									[
										1890,
										1891
									],
									[
										1931,
										1932
									],
									[
										1992,
										1993
									],
									[
										2012,
										2013
									],
									[
										2035,
										2036
									],
									[
										2049,
										2050
									],
									[
										2119,
										2120
									],
									[
										2171,
										2172
									],
									[
										2194,
										2195
									],
									[
										2209,
										2210
									],
									[
										2279,
										2280
									]
								],
								"scope": "<default>.l1.rb"
							},
							"rb_l2_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										761,
										762
									],
									[
										793,
										794
									],
									[
										942,
										943
									],
									[
										992,
										993
									],
									[
										1133,
										1134
									],
									[
										1164,
										1165
									],
									[
										1303,
										1304
									],
									[
										1337,
										1338
									],
									[
										1483,
										1484
									],
									[
										1528,
										1529
									],
									[
										1676,
										1677
									],
									[
										1700,
										1701
									],
									[
										1839,
										1840
									],
									[
										1870,
										1871
									],
									[
										1950,
										1951
									],
									[
										1991,
										1992
									],
									[
										2079,
										2080
									],
									[
										2099,
										2100
									],
									[
										2239,
										2240
									],
									[
										2259,
										2260
									]
								],
								"scope": "<default>.l2.rb"
							},
							"rb_l3_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										773,
										774
									],
									[
										792,
										793
									],
									[
										957,
										958
									],
									[
										991,
										992
									],
									[
										1146,
										1147
									],
									[
										1163,
										1164
									],
									[
										1317,
										1318
									],
									[
										1336,
										1337
									],
									[
										1498,
										1499
									],
									[
										1527,
										1528
									],
									[
										1691,
										1692
									],
									[
										1699,
										1700
									],
									[
										1852,
										1853
									],
									[
										1869,
										1870
									],
									[
										2092,
										2093
									],
									[
										2098,
										2099
									],
									[
										2252,
										2253
									],
									[
										2258,
										2259
									]
								],
								"scope": "<default>.l3.rb"
							},
							"rb_l4_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										782,
										783
									],
									[
										791,
										792
									],
									[
										975,
										976
									],
									[
										990,
										991
									],
									[
										1156,
										1157
									],
									[
										1162,
										1163
									],
									[
										1328,
										1329
									],
									[
										1335,
										1336
									],
									[
										1519,
										1520
									],
									[
										1526,
										1527
									],
									[
										1862,
										1863
									],
									[
										1868,
										1869
									]
								],
								"scope": "<default>.l4.rb"
							}
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"_anf_new": "",
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/list/append_trait.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 578,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										3,
										4
									],
									[
										43,
										44
									],
									[
										47,
										48
									],
									[
										101,
										102
									],
									[
										106,
										107
									],
									[
										125,
										126
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										22,
										23
									],
									[
										42,
										43
									],
									[
										66,
										67
									],
									[
										100,
										101
									],
									[
										111,
										112
									],
									[
										124,
										125
									]
								],
								"scope": "<default>.l1.rb"
							}
						},
						"selection":
						[
							[
								508,
								508
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/lib.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 722.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "examples/python_list.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3497,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										4,
										5
									],
									[
										169,
										170
									],
									[
										513,
										514
									],
									[
										514,
										515
									],
									[
										516,
										517
									],
									[
										3495,
										3496
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										10,
										11
									],
									[
										168,
										169
									],
									[
										593,
										594
									],
									[
										616,
										617
									],
									[
										647,
										648
									],
									[
										651,
										652
									],
									[
										682,
										683
									],
									[
										693,
										694
									],
									[
										724,
										725
									],
									[
										728,
										729
									],
									[
										759,
										760
									],
									[
										807,
										808
									],
									[
										838,
										839
									],
									[
										846,
										847
									],
									[
										876,
										877
									],
									[
										884,
										885
									],
									[
										914,
										915
									],
									[
										922,
										923
									],
									[
										952,
										953
									],
									[
										975,
										976
									],
									[
										1006,
										1007
									],
									[
										1048,
										1049
									],
									[
										1078,
										1079
									],
									[
										1152,
										1153
									],
									[
										1183,
										1184
									],
									[
										1199,
										1200
									],
									[
										1229,
										1230
									],
									[
										1246,
										1247
									],
									[
										1276,
										1277
									],
									[
										1282,
										1283
									],
									[
										1295,
										1296
									],
									[
										1308,
										1309
									],
									[
										1320,
										1321
									],
									[
										1338,
										1339
									],
									[
										1418,
										1419
									],
									[
										1419,
										1420
									],
									[
										1421,
										1422
									],
									[
										1444,
										1445
									],
									[
										1494,
										1495
									],
									[
										1495,
										1496
									],
									[
										1503,
										1504
									],
									[
										1504,
										1505
									],
									[
										1516,
										1517
									],
									[
										1531,
										1532
									],
									[
										1550,
										1551
									],
									[
										1555,
										1556
									],
									[
										1566,
										1567
									],
									[
										1567,
										1568
									],
									[
										1673,
										1674
									],
									[
										1674,
										1675
									],
									[
										1686,
										1687
									],
									[
										1706,
										1707
									]
								],
								"scope": "<default>.l1.rb"
							},
							"rb_l2_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										606,
										607
									],
									[
										615,
										616
									],
									[
										770,
										771
									],
									[
										806,
										807
									],
									[
										965,
										966
									],
									[
										974,
										975
									],
									[
										1026,
										1027
									],
									[
										1047,
										1048
									],
									[
										1108,
										1109
									],
									[
										1151,
										1152
									],
									[
										1193,
										1194
									],
									[
										1198,
										1199
									],
									[
										1239,
										1240
									],
									[
										1245,
										1246
									],
									[
										1324,
										1325
									],
									[
										1337,
										1338
									],
									[
										1436,
										1437
									],
									[
										1438,
										1439
									]
								],
								"scope": "<default>.l2.rb"
							},
							"rb_l3_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										781,
										782
									],
									[
										805,
										806
									],
									[
										1045,
										1046
									],
									[
										1046,
										1047
									],
									[
										1134,
										1135
									],
									[
										1150,
										1151
									]
								],
								"scope": "<default>.l3.rb"
							},
							"rb_l4_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										794,
										795
									],
									[
										804,
										805
									]
								],
								"scope": "<default>.l4.rb"
							}
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/examples/python_list.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 570.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/list/mod.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 123,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"fm_reveal_in_sidebar": true,
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/list/mod.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/builtins.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 281,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										96,
										97
									],
									[
										103,
										104
									],
									[
										105,
										106
									],
									[
										132,
										133
									],
									[
										158,
										159
									],
									[
										170,
										171
									],
									[
										181,
										182
									],
									[
										205,
										206
									],
									[
										231,
										232
									],
									[
										243,
										244
									],
									[
										255,
										256
									],
									[
										280,
										281
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										119,
										120
									],
									[
										129,
										130
									],
									[
										202,
										203
									],
									[
										203,
										204
									],
									[
										277,
										278
									],
									[
										278,
										279
									]
								],
								"scope": "<default>.l1.rb"
							}
						},
						"selection":
						[
							[
								79,
								79
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ":.'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/src/builtins.rs",
							"rainbow_checked": true,
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "examples/ideas.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 245,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										5,
										6
									],
									[
										130,
										131
									],
									[
										205,
										206
									],
									[
										206,
										207
									],
									[
										208,
										209
									],
									[
										243,
										244
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										11,
										12
									],
									[
										129,
										130
									],
									[
										238,
										239
									],
									[
										239,
										240
									]
								],
								"scope": "<default>.l1.rb"
							}
						},
						"selection":
						[
							[
								242,
								242
							]
						],
						"settings":
						{
							"AutoSetSyntax/is_transient": false,
							"_anf_new": "",
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								}
							],
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/examples/ideas.rs",
							"rainbow_checked": true,
							"show_definitions": true,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "TODO.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 473,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										470,
										471
									],
									[
										472,
										473
									]
								],
								"scope": "<default>.l0.rb"
							}
						},
						"selection":
						[
							[
								265,
								265
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/alexzander/Alexzander__/programming/rust/python/TODO.md",
							"rainbow_checked": true,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 48.0
	},
	"input":
	{
		"height": 70.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.AutoSetSyntax":
	{
		"height": 0.0
	},
	"output.Debugger":
	{
		"height": 210.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 913.0
	},
	"output.autopep8":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 291.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 291.0
	},
	"output.find_results":
	{
		"height": 168.0
	},
	"output.git":
	{
		"height": 210.0
	},
	"output.language servers":
	{
		"height": 367.0
	},
	"output.markdown":
	{
		"height": 180.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"output.references":
	{
		"height": 259.0
	},
	"output.xdebug":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rust-python-objects.sublime-project",
	"replace":
	{
		"height": 92.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"todo",
				"TODO.md"
			],
			[
				"aes",
				"docs/python_list/showcase.md"
			],
			[
				"python",
				"examples/python_list.rs"
			],
			[
				"exa",
				"examples/example.rs"
			],
			[
				"test",
				"tests/test_aesthetics.rs"
			],
			[
				"list",
				"examples/list.rs"
			],
			[
				"make",
				"Makefile"
			],
			[
				"cargo",
				"Cargo.toml"
			],
			[
				"rust",
				"rust/rust.md"
			],
			[
				"lib.rs",
				"src/lib.rs"
			],
			[
				"string",
				"src/string.rs"
			],
			[
				"ob",
				"src/object.rs"
			],
			[
				"float",
				"src/float.rs"
			],
			[
				"obj",
				"src/object.rs"
			],
			[
				"char",
				"src/character.rs"
			],
			[
				"int",
				"src/int.rs"
			],
			[
				"bool",
				"src/boolean.rs"
			],
			[
				"int.rs",
				"src/int.rs"
			],
			[
				"rus",
				"rust/rust.md"
			],
			[
				"docs",
				"docs/docs.md"
			],
			[
				"life",
				"examples/lifetime.rs"
			],
			[
				"test_alog",
				"tests/test_algorithms.rs"
			],
			[
				"algo",
				"src/algorithms.rs"
			],
			[
				"gene",
				"examples/generics.rs"
			],
			[
				"hash",
				"examples/hashmap.rs"
			],
			[
				"caro",
				"Cargo.toml"
			],
			[
				"type",
				"examples/types.rs"
			],
			[
				"types",
				"repos/bat/assets/syntaxes/02_Extra/TypeScript.sublime-syntax"
			],
			[
				"flow",
				"examples/flow_control.rs"
			],
			[
				"Cargo",
				"Cargo.toml"
			],
			[
				"Make",
				"target/doc/syn/macro.custom_keyword!.html"
			],
			[
				"lib",
				"src/lib.rs"
			],
			[
				"com",
				"compile.py"
			],
			[
				"",
				"jit.py"
			],
			[
				"main",
				"src/main.rs"
			],
			[
				"long",
				"long.py"
			],
			[
				"git.p",
				"pepe/core/git.py"
			],
			[
				"create",
				"pepe/argv/create.py"
			],
			[
				"pipenv",
				"pipenv.md"
			],
			[
				"far",
				"marketing/comenzi.farmaciatei.json"
			],
			[
				"bebe",
				"marketing/comenzi.bebetei.json"
			],
			[
				"spinner",
				"_core/animations/spinners.py"
			],
			[
				"req",
				"_core/_requests.py"
			],
			[
				"progre",
				"_core/animations/progress.py"
			],
			[
				"prore",
				"_core/progress__.py"
			],
			[
				"spiner",
				"_core/animations/spinners.py"
			],
			[
				"somet",
				"something.txt"
			],
			[
				"acc",
				"Accounts&Passwords.json"
			],
			[
				"ac",
				"Achievements2021.txt"
			],
			[
				"diocs",
				"cursuri/drive/drive-download-20220129T143222Z-00ASD1/Lab 322/New folder/Data/population_total.csv"
			],
			[
				"sol",
				"rezolvare/problema-1/procedura-1/solution.r"
			],
			[
				"redo",
				"redo.r"
			],
			[
				"raport",
				"raport.Rmd"
			],
			[
				"R",
				"R.md"
			],
			[
				"pipv",
				"pipenv.md"
			],
			[
				".git",
				".gitignore"
			],
			[
				".env",
				"django_web_app/.env"
			],
			[
				"app.py",
				"~/Alexzander__/programming/python3/learning/quart/app.py"
			],
			[
				"set",
				"django_web_app/application/settings.py"
			],
			[
				"regist",
				"django_web_app/todos/templates/todos/register.html"
			],
			[
				"base",
				"django_web_app/templates/base_index.html"
			],
			[
				"register.js",
				"django_web_app/todos/static/todos/js/register.js"
			],
			[
				"register",
				"django_web_app/todos/templates/todos/register.html"
			],
			[
				"control_pa",
				"django_web_app/control_panel/models.py"
			],
			[
				"todos_",
				"todos/tests/test_todos_api_views.py"
			],
			[
				"test_api",
				"api/tests/test_api_views.py"
			],
			[
				"read",
				"readme.md"
			],
			[
				"mongo",
				"mongo_client.py"
			],
			[
				"remote",
				"remote_credentials.py"
			],
			[
				"crede",
				"credentials.py"
			],
			[
				"CRE",
				"credentials.py"
			],
			[
				"views",
				"views_enhanced.py"
			],
			[
				"conf",
				"conftest.py"
			],
			[
				"pytest",
				"pytest.ini"
			],
			[
				"test_todos",
				"todos/tests/test_todos_views.py"
			],
			[
				"ake",
				"Makefile"
			],
			[
				"SET",
				"application/settings.py"
			],
			[
				"css",
				"todos/static/todos/css/style.css"
			],
			[
				"url",
				"application/urls.py"
			],
			[
				"data",
				"routers/database_routers.py"
			],
			[
				"sett",
				"application/settings.py"
			],
			[
				"models",
				"todos/models.py"
			],
			[
				"application/ur",
				"application/urls.py"
			],
			[
				"todod",
				"TODO.md"
			],
			[
				"gitnore",
				".gitignore"
			],
			[
				"cred",
				"credentials.py"
			],
			[
				"todos",
				"todos/views.py"
			],
			[
				"modes",
				"api/models.py"
			],
			[
				"database",
				"routers/database_routers.py"
			],
			[
				"run",
				"run-server.sh"
			],
			[
				"maker",
				"maker"
			],
			[
				"todos/index",
				"todos/templates/todos/index.html"
			],
			[
				"manage",
				"manager.sh"
			],
			[
				"todos views",
				"todos/api/views.py"
			],
			[
				"todos.",
				"todos/views.py"
			],
			[
				"urls.py",
				"application/urls.py"
			],
			[
				"learning",
				"learning/views.py"
			],
			[
				"mana",
				"manage.py"
			],
			[
				"learn",
				"learning/views.py"
			],
			[
				"BASE",
				"templates/base_index.html"
			],
			[
				"base_inde",
				"templates/base_index.html"
			],
			[
				"urls",
				"simulation/core/urls.py"
			],
			[
				"extene",
				"todos/templates/extender.html"
			],
			[
				"sublime",
				"django_web_app.sublime-project"
			],
			[
				"route",
				"django_web_app/application/templates/index_routes.html"
			],
			[
				"base.cs",
				"django_web_app/static/css/base.css"
			],
			[
				"isnta",
				"documentation/new_manjaro_installation.md"
			],
			[
				"ett",
				"django_web_app/application/settings.py"
			],
			[
				"pro",
				"django_web_app/ProjectState.json"
			],
			[
				"telegram",
				"django_web_app/telegram/__init__.py"
			],
			[
				"socke",
				"django_web_app/telegram/static/js/socket_client.js"
			],
			[
				"context",
				"django_web_app/templates/context_menu.html"
			],
			[
				"docker",
				"django_web_app/docker-compose.yaml"
			],
			[
				"docker-com",
				"django_web_app/docker-compose.yaml"
			],
			[
				"require",
				"django_web_app/simulation/requirements.txt"
			],
			[
				"Docker",
				"django_web_app/simulation/Dockerfile"
			],
			[
				"cre",
				"django_web_app/credentials.py"
			],
			[
				"regi",
				"django_web_app/django_web_app/todos/templates/register.html"
			],
			[
				"todo_inde",
				"django_web_app/django_web_app/todos/templates/todos_index.html"
			],
			[
				"regis",
				"django_web_app/django_web_app/todos/templates/register.html"
			],
			[
				"todos_inde",
				"django_web_app/django_web_app/todos/templates/todos_index.html"
			],
			[
				"view",
				"django_web_app/django_web_app/todos/api/views.py"
			],
			[
				"index",
				"django_web_app/django_web_app/todos/templates/index.html"
			],
			[
				"rnu",
				"django_web_app/django_web_app/run.sh"
			],
			[
				"rea",
				"django_web_app/readme.md"
			],
			[
				"runs",
				"django_web_app/django_web_app/run.sh"
			],
			[
				"ursl",
				"django_web_app/django_web_app/todos/urls.py"
			],
			[
				"to_exte",
				"django_web_app/django_web_app/todos/templates/to_extend.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Alexzander__/programming/projects/chuck_noris_asp_net/ChuckNorris/ProjectChuckNorris/ChuckNorris.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 366.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
